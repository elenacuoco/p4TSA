<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="_d_s_t_8cpp" kind="file" language="C++">
    <compoundname>DST.cpp</compoundname>
    <includes refid="_d_s_t_8hpp" local="no">DST.hpp</includes>
    <incdepgraph>
      <node id="5286">
        <label>tsaTraits.hpp</label>
        <link refid="tsa_traits_8hpp"/>
        <childnode refid="5287" relation="include">
        </childnode>
      </node>
      <node id="5267">
        <label>eternity.hpp</label>
        <link refid="eternity_8hpp"/>
        <childnode refid="5268" relation="include">
        </childnode>
        <childnode refid="5270" relation="include">
        </childnode>
        <childnode refid="5275" relation="include">
        </childnode>
        <childnode refid="5279" relation="include">
        </childnode>
      </node>
      <node id="5272">
        <label>stdlib.h</label>
      </node>
      <node id="5261">
        <label>stdexcept</label>
      </node>
      <node id="5281">
        <label>tsaTypes.hpp</label>
        <link refid="tsa_types_8hpp"/>
        <childnode refid="5263" relation="include">
        </childnode>
        <childnode refid="5258" relation="include">
        </childnode>
        <childnode refid="5282" relation="include">
        </childnode>
        <childnode refid="5264" relation="include">
        </childnode>
        <childnode refid="5267" relation="include">
        </childnode>
      </node>
      <node id="5265">
        <label>string</label>
      </node>
      <node id="5268">
        <label>eternity/dynamic.hpp</label>
        <link refid="dynamic_8hpp"/>
        <childnode refid="5257" relation="include">
        </childnode>
        <childnode refid="5269" relation="include">
        </childnode>
        <childnode refid="5265" relation="include">
        </childnode>
      </node>
      <node id="5277">
        <label>map</label>
      </node>
      <node id="5283">
        <label>tsaLog.hpp</label>
        <link refid="tsa_log_8hpp"/>
        <childnode refid="5262" relation="include">
        </childnode>
        <childnode refid="5263" relation="include">
        </childnode>
        <childnode refid="5284" relation="include">
        </childnode>
      </node>
      <node id="5259">
        <label>fftw3.h</label>
      </node>
      <node id="5263">
        <label>fstream</label>
      </node>
      <node id="5276">
        <label>xmlscanner.hpp</label>
        <link refid="xmlscanner_8hpp"/>
        <childnode refid="5271" relation="include">
        </childnode>
        <childnode refid="5272" relation="include">
        </childnode>
        <childnode refid="5273" relation="include">
        </childnode>
        <childnode refid="5277" relation="include">
        </childnode>
        <childnode refid="5274" relation="include">
        </childnode>
        <childnode refid="5263" relation="include">
        </childnode>
        <childnode refid="5265" relation="include">
        </childnode>
        <childnode refid="5262" relation="include">
        </childnode>
      </node>
      <node id="5266">
        <label>tsaSerialize.hpp</label>
        <link refid="tsa_serialize_8hpp"/>
        <childnode refid="5261" relation="include">
        </childnode>
        <childnode refid="5262" relation="include">
        </childnode>
        <childnode refid="5263" relation="include">
        </childnode>
        <childnode refid="5267" relation="include">
        </childnode>
        <childnode refid="5281" relation="include">
        </childnode>
      </node>
      <node id="5255">
        <label>DST.hpp</label>
        <link refid="_d_s_t_8hpp"/>
        <childnode refid="5256" relation="include">
        </childnode>
        <childnode refid="5291" relation="include">
        </childnode>
      </node>
      <node id="5290">
        <label>fparser.hpp</label>
        <link refid="fparser_8hpp"/>
        <childnode refid="5265" relation="include">
        </childnode>
        <childnode refid="5277" relation="include">
        </childnode>
        <childnode refid="5273" relation="include">
        </childnode>
      </node>
      <node id="5260">
        <label>AlgoBase.hpp</label>
        <link refid="_algo_base_8hpp"/>
        <childnode refid="5261" relation="include">
        </childnode>
        <childnode refid="5262" relation="include">
        </childnode>
        <childnode refid="5263" relation="include">
        </childnode>
        <childnode refid="5258" relation="include">
        </childnode>
        <childnode refid="5264" relation="include">
        </childnode>
        <childnode refid="5265" relation="include">
        </childnode>
        <childnode refid="5266" relation="include">
        </childnode>
        <childnode refid="5281" relation="include">
        </childnode>
        <childnode refid="5283" relation="include">
        </childnode>
        <childnode refid="5285" relation="include">
        </childnode>
        <childnode refid="5291" relation="include">
        </childnode>
        <childnode refid="5293" relation="include">
        </childnode>
      </node>
      <node id="5270">
        <label>eternity/persist.hpp</label>
        <link refid="persist_8hpp"/>
        <childnode refid="5268" relation="include">
        </childnode>
        <childnode refid="5271" relation="include">
        </childnode>
        <childnode refid="5272" relation="include">
        </childnode>
        <childnode refid="5273" relation="include">
        </childnode>
        <childnode refid="5274" relation="include">
        </childnode>
        <childnode refid="5263" relation="include">
        </childnode>
      </node>
      <node id="5289">
        <label>string.h</label>
      </node>
      <node id="5269">
        <label>typeinfo</label>
      </node>
      <node id="5264">
        <label>boost/numeric/ublas/io.hpp</label>
      </node>
      <node id="5284">
        <label>unistd.h</label>
      </node>
      <node id="5288">
        <label>tsaUtilityFunctions.hpp</label>
        <link refid="tsa_utility_functions_8hpp"/>
        <childnode refid="5289" relation="include">
        </childnode>
        <childnode refid="5290" relation="include">
        </childnode>
        <childnode refid="5287" relation="include">
        </childnode>
        <childnode refid="5263" relation="include">
        </childnode>
      </node>
      <node id="5273">
        <label>vector</label>
      </node>
      <node id="5285">
        <label>BaseView.hpp</label>
        <link refid="_base_view_8hpp"/>
        <childnode refid="5277" relation="include">
        </childnode>
        <childnode refid="5265" relation="include">
        </childnode>
        <childnode refid="5281" relation="include">
        </childnode>
        <childnode refid="5286" relation="include">
        </childnode>
        <childnode refid="5288" relation="include">
        </childnode>
        <childnode refid="5266" relation="include">
        </childnode>
        <childnode refid="5283" relation="include">
        </childnode>
      </node>
      <node id="5282">
        <label>boost/numeric/ublas/matrix_proxy.hpp</label>
      </node>
      <node id="5280">
        <label>sstream</label>
      </node>
      <node id="5292">
        <label>FrameL.h</label>
      </node>
      <node id="5293">
        <label>AlgoExceptions.hpp</label>
        <link refid="_algo_exceptions_8hpp"/>
        <childnode refid="5261" relation="include">
        </childnode>
        <childnode refid="5265" relation="include">
        </childnode>
      </node>
      <node id="5291">
        <label>SeqView.hpp</label>
        <link refid="_seq_view_8hpp"/>
        <childnode refid="5258" relation="include">
        </childnode>
        <childnode refid="5282" relation="include">
        </childnode>
        <childnode refid="5264" relation="include">
        </childnode>
        <childnode refid="5285" relation="include">
        </childnode>
        <childnode refid="5292" relation="include">
        </childnode>
      </node>
      <node id="5271">
        <label>math.h</label>
      </node>
      <node id="5258">
        <label>boost/numeric/ublas/matrix.hpp</label>
      </node>
      <node id="5262">
        <label>iostream</label>
      </node>
      <node id="5278">
        <label>deque</label>
      </node>
      <node id="5256">
        <label>BaseFFT.hpp</label>
        <link refid="_base_f_f_t_8hpp"/>
        <childnode refid="5257" relation="include">
        </childnode>
        <childnode refid="5258" relation="include">
        </childnode>
        <childnode refid="5259" relation="include">
        </childnode>
        <childnode refid="5260" relation="include">
        </childnode>
      </node>
      <node id="5275">
        <label>eternity/persist_xml.hpp</label>
        <link refid="persist__xml_8hpp"/>
        <childnode refid="5270" relation="include">
        </childnode>
        <childnode refid="5276" relation="include">
        </childnode>
        <childnode refid="5278" relation="include">
        </childnode>
      </node>
      <node id="5287">
        <label>complex</label>
      </node>
      <node id="5279">
        <label>eternity/algorithms.hpp</label>
        <link refid="algorithms_8hpp"/>
        <childnode refid="5270" relation="include">
        </childnode>
        <childnode refid="5275" relation="include">
        </childnode>
        <childnode refid="5276" relation="include">
        </childnode>
        <childnode refid="5280" relation="include">
        </childnode>
      </node>
      <node id="5274">
        <label>algorithm</label>
      </node>
      <node id="5257">
        <label>stdio.h</label>
      </node>
      <node id="5254">
        <label>/home/filip/PhD/WDFPipe_test/p4TSA/src/DST.cpp</label>
        <link refid="_d_s_t_8cpp"/>
        <childnode refid="5255" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacetsa">tsa</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_d_s_t_8hpp" kindref="compound">DST.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetsa" kindref="compound">tsa</ref><sp/>{</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5" refid="classtsa_1_1_d_s_t_1a903a949ad84aaa3f5ef11e9f08a1abf9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtsa_1_1_d_s_t_1a903a949ad84aaa3f5ef11e9f08a1abf9" kindref="member">DST::DST</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size,<sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespacetsa_1a217e07ef78939f88b22c8428ac96b1ae" kindref="member">FFTPlanningMode</ref><sp/>mode,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>PreserveInput)</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/>:</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtsa_1_1_base_f_f_t" kindref="compound">BaseFFT</ref>((2<sp/>*<sp/>size<sp/>-<sp/>1),<sp/>mode,<sp/>PreserveInput)<sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="classtsa_1_1_d_s_t_1ac7d9747deee363dbd0d20edc19d0028a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtsa_1_1_d_s_t_1a903a949ad84aaa3f5ef11e9f08a1abf9" kindref="member">DST::DST</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtsa_1_1_d_s_t" kindref="compound">DST</ref>&amp;<sp/>from)</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>:</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtsa_1_1_base_f_f_t" kindref="compound">BaseFFT</ref>(from)<sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="classtsa_1_1_d_s_t_1a670a8bae9d3361b5a0e0be7160fee75c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtsa_1_1_d_s_t_1a670a8bae9d3361b5a0e0be7160fee75c" kindref="member">DST::~DST</ref>()<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="classtsa_1_1_d_s_t_1a98927f7365561b6af059465598eb3445" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtsa_1_1_d_s_t_1a98927f7365561b6af059465598eb3445" kindref="member">DST::operator()</ref>(<ref refid="namespacetsa_1ac599574bcc094eda25613724b8f3ca9e" kindref="member">SeqViewDouble</ref>&amp;<sp/>in,<sp/><ref refid="namespacetsa_1ac599574bcc094eda25613724b8f3ca9e" kindref="member">SeqViewDouble</ref>&amp;<sp/>out)<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetsa_1ad260cd21c1891c4ed391fe788569aba4" kindref="member">Dmatrix</ref>*<sp/>data_in<sp/>=<sp/>in.GetData();</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetsa_1ad260cd21c1891c4ed391fe788569aba4" kindref="member">Dmatrix</ref>*<sp/>data_out<sp/>=<sp/>out.GetData();</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>dimensions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((data_in-&gt;size1()<sp/>!=<sp/>data_out-&gt;size1())<sp/>||<sp/>(data_in-&gt;size2()<sp/>!=<sp/>data_out-&gt;size2()))<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_out-&gt;resize(data_in-&gt;size1(),<sp/>data_in-&gt;size2());</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetsa_1a91d266348bcf69ab00c97a253b0ec790" kindref="member">LogWarning</ref>(</highlight><highlight class="stringliteral">&quot;DST:<sp/>resizing<sp/>output<sp/>array&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtsa_1_1_d_s_t_1a9bb56b2c2e4b7bff93d06a065903c347" kindref="member">execute</ref>(*data_in,<sp/>*data_out);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Adjust<sp/>attributes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out.SetStart(0.0);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out.SetSampling(1.0<sp/>/<sp/>in.GetSlice());</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out.SetScale(in.GetScale()<sp/>*<sp/>in.GetSampling()<sp/>/<sp/>in.GetSize());</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="classtsa_1_1_d_s_t_1a9bb56b2c2e4b7bff93d06a065903c347" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtsa_1_1_d_s_t_1a9bb56b2c2e4b7bff93d06a065903c347" kindref="member">DST::execute</ref>(<ref refid="namespacetsa_1ad260cd21c1891c4ed391fe788569aba4" kindref="member">Dmatrix</ref>&amp;<sp/>indata,<sp/><ref refid="namespacetsa_1ad260cd21c1891c4ed391fe788569aba4" kindref="member">Dmatrix</ref>&amp;<sp/>outdata)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>(<ref refid="classtsa_1_1bad__matrix__size" kindref="compound">bad_matrix_size</ref>)<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((indata.size1()<sp/>!=<sp/>outdata.size1())<sp/>||<sp/>(indata.size2()<sp/>!=<sp/>outdata.size2()))<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetsa_1a3bce10382fbb41b48aca0e5b8afeb896" kindref="member">LogSevere</ref>(</highlight><highlight class="stringliteral">&quot;DST::execute<sp/>-<sp/>bad<sp/>matrix<sp/>size&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classtsa_1_1bad__matrix__size" kindref="compound">bad_matrix_size</ref>(</highlight><highlight class="stringliteral">&quot;DST::execute&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(indata.size2()<sp/>!=<sp/><ref refid="classtsa_1_1_base_f_f_t_1a171c71011fea314f23633b1816771d98" kindref="member">mLogicalSize</ref>)<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtsa_1_1_base_f_f_t_1aa89fef1777c6df148cdb8533265b6163" kindref="member">mPlanNeedsUpdate</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtsa_1_1_base_f_f_t_1aa89fef1777c6df148cdb8533265b6163" kindref="member">mPlanNeedsUpdate</ref>)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtsa_1_1_base_f_f_t_1a171c71011fea314f23633b1816771d98" kindref="member">mLogicalSize</ref><sp/>=<sp/>indata.size2();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtsa_1_1_d_s_t_1a066a93f3ddbf56f8e5c67067156ebb9a" kindref="member">MakePlan</ref>();</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>isize1<sp/>=<sp/>indata.size1();</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>isize1;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fftw_execute_r2r(</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtsa_1_1_base_f_f_t_1a5c7dd6dee349547018d493be6d5874eb" kindref="member">mPlan</ref>,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*)<sp/>&amp;indata(i,<sp/>0),</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*)<sp/>&amp;outdata(i,<sp/>0)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="classtsa_1_1_d_s_t_1a90170687661872523f06360cae3965ff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtsa_1_1_d_s_t_1a9bb56b2c2e4b7bff93d06a065903c347" kindref="member">DST::execute</ref>(<ref refid="namespacetsa_1a8900fb03d849baf447a1a0efe2561fb2" kindref="member">Dvector</ref>&amp;<sp/>indata,<sp/><ref refid="namespacetsa_1a8900fb03d849baf447a1a0efe2561fb2" kindref="member">Dvector</ref>&amp;<sp/>outdata)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>(<ref refid="classtsa_1_1bad__vector__size" kindref="compound">bad_vector_size</ref>)<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(indata.size()<sp/>!=<sp/>outdata.size())<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetsa_1a3bce10382fbb41b48aca0e5b8afeb896" kindref="member">LogSevere</ref>(</highlight><highlight class="stringliteral">&quot;DST::execute<sp/>-<sp/>bad<sp/>vector<sp/>size&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classtsa_1_1bad__vector__size" kindref="compound">bad_vector_size</ref>(</highlight><highlight class="stringliteral">&quot;DST::execute&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(indata.size()<sp/>!=<sp/><ref refid="classtsa_1_1_base_f_f_t_1a171c71011fea314f23633b1816771d98" kindref="member">mLogicalSize</ref>)<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtsa_1_1_base_f_f_t_1aa89fef1777c6df148cdb8533265b6163" kindref="member">mPlanNeedsUpdate</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtsa_1_1_base_f_f_t_1aa89fef1777c6df148cdb8533265b6163" kindref="member">mPlanNeedsUpdate</ref>)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtsa_1_1_base_f_f_t_1a171c71011fea314f23633b1816771d98" kindref="member">mLogicalSize</ref><sp/>=<sp/>indata.size();</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtsa_1_1_d_s_t_1a066a93f3ddbf56f8e5c67067156ebb9a" kindref="member">MakePlan</ref>();</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fftw_execute_r2r(</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtsa_1_1_base_f_f_t_1a5c7dd6dee349547018d493be6d5874eb" kindref="member">mPlan</ref>,</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*)<sp/>&amp;indata(0),</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*)<sp/>&amp;outdata(0)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="classtsa_1_1_d_s_t_1a066a93f3ddbf56f8e5c67067156ebb9a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtsa_1_1_d_s_t_1a066a93f3ddbf56f8e5c67067156ebb9a" kindref="member">DST::MakePlan</ref>()<sp/>throw<sp/>(<ref refid="namespacestd" kindref="compound">std</ref>::runtime_error)<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetsa_1a08952ac2e7ac6e538c83692501aed4e7" kindref="member">LogInfo</ref>(</highlight><highlight class="stringliteral">&quot;DST::MakePlan<sp/>start&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtsa_1_1_base_f_f_t_1a5c7dd6dee349547018d493be6d5874eb" kindref="member">mPlan</ref>)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fftw_destroy_plan(<ref refid="classtsa_1_1_base_f_f_t_1a5c7dd6dee349547018d493be6d5874eb" kindref="member">mPlan</ref>);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*in<sp/>=<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*)<sp/>fftw_malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)*<ref refid="classtsa_1_1_base_f_f_t_1a171c71011fea314f23633b1816771d98" kindref="member">mLogicalSize</ref>);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*out<sp/>=<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*)<sp/>fftw_malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)*((<ref refid="classtsa_1_1_base_f_f_t_1a171c71011fea314f23633b1816771d98" kindref="member">mLogicalSize</ref><sp/>/<sp/>2)<sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtsa_1_1_base_f_f_t_1a5c7dd6dee349547018d493be6d5874eb" kindref="member">mPlan</ref><sp/>=<sp/>fftw_plan_r2r_1d(<ref refid="classtsa_1_1_base_f_f_t_1a171c71011fea314f23633b1816771d98" kindref="member">mLogicalSize</ref>,<sp/>in,<sp/>out,<sp/>FFTW_RODFT00,<sp/>FFTW_UNALIGNED<sp/>|<sp/><ref refid="classtsa_1_1_base_f_f_t_1abbd656cda5a7cb6a88fc5d556d3269f7" kindref="member">mPlanningRigor</ref><sp/>|<sp/><ref refid="classtsa_1_1_base_f_f_t_1a2fe7f53db024bb408beeb5e22eaefbb9" kindref="member">mPlanningRestriction</ref>);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtsa_1_1_base_f_f_t_1a5c7dd6dee349547018d493be6d5874eb" kindref="member">mPlan</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetsa_1a3bce10382fbb41b48aca0e5b8afeb896" kindref="member">LogSevere</ref>(</highlight><highlight class="stringliteral">&quot;DST::MakePlan<sp/>-<sp/>error&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;DST::MakePlan&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fftw_free(in);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fftw_free(out);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtsa_1_1_base_f_f_t_1aa89fef1777c6df148cdb8533265b6163" kindref="member">mPlanNeedsUpdate</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetsa_1a08952ac2e7ac6e538c83692501aed4e7" kindref="member">LogInfo</ref>(</highlight><highlight class="stringliteral">&quot;DST::MakePlan<sp/>end&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>--<sp/>end<sp/>namespace<sp/>tsa</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/filip/PhD/WDFPipe_test/p4TSA/src/DST.cpp"/>
  </compounddef>
</doxygen>
