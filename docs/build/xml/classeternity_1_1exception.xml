<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classeternity_1_1exception" kind="class" language="C++" prot="public">
    <compoundname>eternity::exception</compoundname>
    <basecompoundref prot="public" virt="non-virtual">exception</basecompoundref>
    <includes refid="dynamic_8hpp" local="no">dynamic.hpp</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classeternity_1_1exception_1ad3190da518fc2bb1dcc50fa665176036" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string eternity::exception::m_swhat</definition>
        <argsstring></argsstring>
        <name>m_swhat</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/dynamic.hpp" line="175" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/dynamic.hpp" bodystart="175" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classeternity_1_1exception_1a681b708eb4c5870221307180d685ea0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>eternity::exception::exception</definition>
        <argsstring>(std::string swhat)</argsstring>
        <name>exception</name>
        <param>
          <type>std::string</type>
          <declname>swhat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/dynamic.hpp" line="178" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/dynamic.cpp" bodystart="41" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classeternity_1_1exception_1a68454ae0f538c10f63380c6d9954acab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>eternity::exception::exception</definition>
        <argsstring>(const exception &amp;right)</argsstring>
        <name>exception</name>
        <param>
          <type>const <ref refid="classeternity_1_1exception" kindref="compound">exception</ref> &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/dynamic.hpp" line="180" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/dynamic.hpp" bodystart="180" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="classeternity_1_1exception_1a9723617b72c37884f532451c578a3d39" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classeternity_1_1exception" kindref="compound">exception</ref> &amp;</type>
        <definition>exception&amp; eternity::exception::operator=</definition>
        <argsstring>(const exception &amp;right)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classeternity_1_1exception" kindref="compound">exception</ref> &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/dynamic.hpp" line="184" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/dynamic.hpp" bodystart="184" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="classeternity_1_1exception_1a88196166c38b9b66d790cf94be058e18" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>eternity::exception::~exception</definition>
        <argsstring>()</argsstring>
        <name>~exception</name>
        <exceptions> throw ()</exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/dynamic.hpp" line="189" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/dynamic.cpp" bodystart="44" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="classeternity_1_1exception_1a5267219aab7b3bd423a6a751939928a6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const char *</type>
        <definition>const char * eternity::exception::what</definition>
        <argsstring>() const</argsstring>
        <name>what</name>
        <exceptions> throw ()</exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/dynamic.hpp" line="190" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/dynamic.cpp" bodystart="47" bodyend="49"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="231">
        <label>eternity::exception</label>
        <link refid="classeternity_1_1exception"/>
        <childnode refid="232" relation="public-inheritance">
        </childnode>
      </node>
      <node id="232">
        <label>std::exception</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="233">
        <label>eternity::exception</label>
        <link refid="classeternity_1_1exception"/>
        <childnode refid="234" relation="public-inheritance">
        </childnode>
      </node>
      <node id="234">
        <label>std::exception</label>
      </node>
    </collaborationgraph>
    <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/dynamic.hpp" line="173" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/dynamic.hpp" bodystart="173" bodyend="193"/>
    <listofallmembers>
      <member refid="classeternity_1_1exception_1a681b708eb4c5870221307180d685ea0f" prot="public" virt="non-virtual"><scope>eternity::exception</scope><name>exception</name></member>
      <member refid="classeternity_1_1exception_1a68454ae0f538c10f63380c6d9954acab" prot="public" virt="non-virtual"><scope>eternity::exception</scope><name>exception</name></member>
      <member refid="classeternity_1_1exception_1ad3190da518fc2bb1dcc50fa665176036" prot="protected" virt="non-virtual"><scope>eternity::exception</scope><name>m_swhat</name></member>
      <member refid="classeternity_1_1exception_1a9723617b72c37884f532451c578a3d39" prot="public" virt="non-virtual"><scope>eternity::exception</scope><name>operator=</name></member>
      <member refid="classeternity_1_1exception_1a5267219aab7b3bd423a6a751939928a6" prot="public" virt="virtual"><scope>eternity::exception</scope><name>what</name></member>
      <member refid="classeternity_1_1exception_1a88196166c38b9b66d790cf94be058e18" prot="public" virt="virtual"><scope>eternity::exception</scope><name>~exception</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
