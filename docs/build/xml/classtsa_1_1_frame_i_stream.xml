<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classtsa_1_1_frame_i_stream" kind="class" language="C++" prot="public">
    <compoundname>tsa::FrameIStream</compoundname>
    <basecompoundref refid="classtsa_1_1_algo_base" prot="public" virt="non-virtual">tsa::AlgoBase</basecompoundref>
    <includes refid="_frame_i_stream_8hpp" local="no">FrameIStream.hpp</includes>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <memberdef kind="function" id="classtsa_1_1_frame_i_stream_1a9c53d0d13f4fe78ce0eef01af69e3f22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tsa::FrameIStream::Init</definition>
        <argsstring>()</argsstring>
        <name>Init</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp" line="577" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/src/FrameIStream.cpp" bodystart="606" bodyend="653"/>
      </memberdef>
      <memberdef kind="function" id="classtsa_1_1_frame_i_stream_1ad2ad3c75a6448ce8ce8f119aee4609e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtsa_1_1_frame_i_stream" kindref="compound">FrameIStream</ref> &amp;</type>
        <definition>FrameIStream &amp; tsa::FrameIStream::operator&gt;&gt;</definition>
        <argsstring>(std::vector&lt; SeqViewDouble &gt; &amp;rSeqView)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>std::vector&lt; <ref refid="namespacetsa_1ac599574bcc094eda25613724b8f3ca9e" kindref="member">SeqViewDouble</ref> &gt; &amp;</type>
          <declname>rSeqView</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Read data from the frame file.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rSeqView</parametername>
</parameternamelist>
<parameterdescription>
<para>A list of time views to fill with data. Each view contain a single channel.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a reference to the instance of the class </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp" line="588" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/src/FrameIStream.cpp" bodystart="716" bodyend="751"/>
      </memberdef>
      <memberdef kind="function" id="classtsa_1_1_frame_i_stream_1a1d57b62edf1783696b7c52120dad9e5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtsa_1_1_frame_i_stream" kindref="compound">FrameIStream</ref> &amp;</type>
        <definition>FrameIStream &amp; tsa::FrameIStream::operator&gt;&gt;</definition>
        <argsstring>(SeqViewDouble &amp;rSeqView)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type><ref refid="namespacetsa_1ac599574bcc094eda25613724b8f3ca9e" kindref="member">SeqViewDouble</ref> &amp;</type>
          <declname>rSeqView</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Read data from the frame file.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rSeqView</parametername>
</parameternamelist>
<parameterdescription>
<para>A list a time view to fill with data. It contains a single channel.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a reference to the instance of the class </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp" line="601" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/src/FrameIStream.cpp" bodystart="688" bodyend="714"/>
      </memberdef>
      <memberdef kind="function" id="classtsa_1_1_frame_i_stream_1a66b4e5b136f07fc3044865908364c913" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tsa::FrameIStream::FillView</definition>
        <argsstring>(SeqViewDouble &amp;rSeqView, double tstart, double tend)</argsstring>
        <name>FillView</name>
        <param>
          <type><ref refid="namespacetsa_1ac599574bcc094eda25613724b8f3ca9e" kindref="member">SeqViewDouble</ref> &amp;</type>
          <declname>rSeqView</declname>
        </param>
        <param>
          <type>double</type>
          <declname>tstart</declname>
        </param>
        <param>
          <type>double</type>
          <declname>tend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp" line="604" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/src/FrameIStream.cpp" bodystart="847" bodyend="849"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Getters</header>
      <memberdef kind="function" id="classtsa_1_1_frame_i_stream_1a3a199e1e8993581115311de3164550cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string tsa::FrameIStream::GetInfo</definition>
        <argsstring>(int gtime=0)</argsstring>
        <name>GetInfo</name>
        <param>
          <type>int</type>
          <declname>gtime</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp" line="615" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/src/FrameIStream.cpp" bodystart="664" bodyend="680"/>
      </memberdef>
      <memberdef kind="function" id="classtsa_1_1_frame_i_stream_1aa5e27458593c788665c737f40c445bf4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; tsa::FrameIStream::GetFileName</definition>
        <argsstring>(void) const</argsstring>
        <name>GetFileName</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the file name of the frame file used.</para><para><simplesect kind="return"><para>the file name of the frame file </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp" line="623" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/src/FrameIStream.cpp" bodystart="753" bodyend="755"/>
      </memberdef>
      <memberdef kind="function" id="classtsa_1_1_frame_i_stream_1a0f65554481bf64cab44c7f5cbddb1987" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; std::string &gt; &amp;</type>
        <definition>const std::vector&lt; std::string &gt; &amp; tsa::FrameIStream::GetChannelNames</definition>
        <argsstring>(void) const</argsstring>
        <name>GetChannelNames</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the list of the channel&apos;s names.</para><para><simplesect kind="return"><para>a list of channel&apos;s names </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp" line="630" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/src/FrameIStream.cpp" bodystart="757" bodyend="759"/>
      </memberdef>
      <memberdef kind="function" id="classtsa_1_1_frame_i_stream_1a88781ac3b80bddcca52e252f416009a6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double tsa::FrameIStream::GetStartTime</definition>
        <argsstring>(void) const</argsstring>
        <name>GetStartTime</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the actual start time, which is the start time of the next data chunk that will be read.</para><para><simplesect kind="return"><para>the actual start time </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp" line="637" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/src/FrameIStream.cpp" bodystart="761" bodyend="763"/>
      </memberdef>
      <memberdef kind="function" id="classtsa_1_1_frame_i_stream_1a2b54726738d6155f6e4ccbae2b4a3f8f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double tsa::FrameIStream::GetEndTime</definition>
        <argsstring>(void) const</argsstring>
        <name>GetEndTime</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the actual end time, which is the end time of the next data chunk that will be read.</para><para><simplesect kind="return"><para>the actual end time </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp" line="644" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/src/FrameIStream.cpp" bodystart="765" bodyend="767"/>
      </memberdef>
      <memberdef kind="function" id="classtsa_1_1_frame_i_stream_1a02a205a02b70055814056216951476a6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double tsa::FrameIStream::GetSampling</definition>
        <argsstring>(unsigned int cn) const</argsstring>
        <name>GetSampling</name>
        <param>
          <type>unsigned int</type>
          <declname>cn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the sampling time of a channel</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cname</parametername>
</parameternamelist>
<parameterdescription>
<para>the channel&apos;s name</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the channel&apos;s sampling time </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp" line="652" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/src/FrameIStream.cpp" bodystart="769" bodyend="771"/>
      </memberdef>
      <memberdef kind="function" id="classtsa_1_1_frame_i_stream_1aa9cae02ea01e99c39ba6a9da12fa8a21" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double tsa::FrameIStream::GetTimeLength</definition>
        <argsstring>()</argsstring>
        <name>GetTimeLength</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the time duration of the next data chunk that will be read.</para><para><simplesect kind="return"><para>the actual time duration. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp" line="660" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp" bodystart="660" bodyend="662"/>
      </memberdef>
      <memberdef kind="function" id="classtsa_1_1_frame_i_stream_1a7719f5fb6f7adc5b96555728489b5df6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>FrameH *</type>
        <definition>FrameH* tsa::FrameIStream::GetFrame</definition>
        <argsstring>()</argsstring>
        <name>GetFrame</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a pointer to the current FrameH structure.</para><para><simplesect kind="return"><para>a pointer to the current FrameH </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp" line="670" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp" bodystart="670" bodyend="672"/>
      </memberdef>
      <memberdef kind="function" id="classtsa_1_1_frame_i_stream_1a9ecf2c1985bf7578f70e0bef5ac993b3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>struct FrFile *</type>
        <definition>struct FrFile* tsa::FrameIStream::GetFrameFile</definition>
        <argsstring>()</argsstring>
        <name>GetFrameFile</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp" line="674" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp" bodystart="674" bodyend="676"/>
      </memberdef>
      <memberdef kind="function" id="classtsa_1_1_frame_i_stream_1abdd07c781d107408f1b3e800e7fab42f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool tsa::FrameIStream::GetDataLossFlag</definition>
        <argsstring>()</argsstring>
        <name>GetDataLossFlag</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the value of the data loss flag. It is true if a data loss event is occurred.</para><para><simplesect kind="return"><para>the data loss flag value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp" line="684" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp" bodystart="684" bodyend="686"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Setters</header>
      <memberdef kind="function" id="classtsa_1_1_frame_i_stream_1a5f23c61f80f232c70717dd2b021fae6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tsa::FrameIStream::SetChannels</definition>
        <argsstring>(const std::vector&lt; std::string &gt; &amp;channelNames)</argsstring>
        <name>SetChannels</name>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>channelNames</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the channels which should be opened</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channelNames</parametername>
</parameternamelist>
<parameterdescription>
<para>vector of names for the channels </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp" line="700" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/src/FrameIStream.cpp" bodystart="773" bodyend="799"/>
      </memberdef>
      <memberdef kind="function" id="classtsa_1_1_frame_i_stream_1a8fb9dea502f55380a8a21e2976efa9b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tsa::FrameIStream::SetTimeLength</definition>
        <argsstring>(double length)</argsstring>
        <name>SetTimeLength</name>
        <param>
          <type>double</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the length of the data buffer that will be returned from now on <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>the new length </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp" line="706" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/src/FrameIStream.cpp" bodystart="801" bodyend="803"/>
      </memberdef>
      <memberdef kind="function" id="classtsa_1_1_frame_i_stream_1a1f12e9321856878c40266cd97890e3d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tsa::FrameIStream::ResetValidationView</definition>
        <argsstring>()</argsstring>
        <name>ResetValidationView</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set to zero the validation view. No validation data are written. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp" line="712" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/src/FrameIStream.cpp" bodystart="839" bodyend="841"/>
      </memberdef>
      <memberdef kind="function" id="classtsa_1_1_frame_i_stream_1a89e7cd73df5fb44c8235166d8b9ccd12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tsa::FrameIStream::SetValidationView</definition>
        <argsstring>(std::vector&lt; SeqViewDouble &gt; *rValidationView)</argsstring>
        <name>SetValidationView</name>
        <param>
          <type>std::vector&lt; <ref refid="namespacetsa_1ac599574bcc094eda25613724b8f3ca9e" kindref="member">SeqViewDouble</ref> &gt; *</type>
          <declname>rValidationView</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the current validation view. From now on the validation data are written on the given views every time some data is read.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rValidationView</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a vector of validation views </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp" line="720" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/src/FrameIStream.cpp" bodystart="843" bodyend="845"/>
      </memberdef>
      <memberdef kind="function" id="classtsa_1_1_frame_i_stream_1a188c2351c1717037f955c959e61629ff" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tsa::FrameIStream::SetDataLossFlag</definition>
        <argsstring>(bool status)</argsstring>
        <name>SetDataLossFlag</name>
        <param>
          <type>bool</type>
          <declname>status</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the value of the data loss flag.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>status</parametername>
</parameternamelist>
<parameterdescription>
<para>new value of the data loss flag </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp" line="727" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp" bodystart="727" bodyend="729"/>
      </memberdef>
      <memberdef kind="function" id="classtsa_1_1_frame_i_stream_1a7a8b3b63fdc352215672bdbdcefdd295" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tsa::FrameIStream::AddException</definition>
        <argsstring>(const std::string &amp;msg, double miss_start, double miss_end, unsigned int channel)</argsstring>
        <name>AddException</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>double</type>
          <declname>miss_start</declname>
        </param>
        <param>
          <type>double</type>
          <declname>miss_end</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Ad an exception to the set of data losses.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>msg</parametername>
</parameternamelist>
<parameterdescription>
<para>exception textual message </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>miss_start</parametername>
</parameternamelist>
<parameterdescription>
<para>start time for data loss </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>miss_end</parametername>
</parameternamelist>
<parameterdescription>
<para>end time for data loss (excluded) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>channel where the data loss occurred </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp" line="739" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp" bodystart="739" bodyend="741"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classtsa_1_1_frame_i_stream_1adad4100c6f0691cf47ca247b7b2f0fc6" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double tsa::FrameIStream::mStartTime</definition>
        <argsstring></argsstring>
        <name>mStartTime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Start time for the data queue </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp" line="774" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp" bodystart="774" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtsa_1_1_frame_i_stream_1abd897050716a0879d2437a7e4f9f6b38" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double tsa::FrameIStream::mTimeLength</definition>
        <argsstring></argsstring>
        <name>mTimeLength</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Time length of the data given at each request </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp" line="775" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp" bodystart="775" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtsa_1_1_frame_i_stream_1acee6c81e135c34abb9501753f8088a91" prot="private" static="no" mutable="no">
        <type>struct FrFile *</type>
        <definition>struct FrFile* tsa::FrameIStream::mpFrameFile</definition>
        <argsstring></argsstring>
        <name>mpFrameFile</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The current frame file </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp" line="776" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp" bodystart="776" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtsa_1_1_frame_i_stream_1a68ac0c21e3c23a219359e177623cf4e9" prot="private" static="no" mutable="no">
        <type>FrameH *</type>
        <definition>FrameH* tsa::FrameIStream::mpFrame</definition>
        <argsstring></argsstring>
        <name>mpFrame</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The current FrameH structure </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp" line="777" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp" bodystart="777" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtsa_1_1_frame_i_stream_1a14bff233330be1d0f995551d55b8eb98" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt;std::string&gt; tsa::FrameIStream::mChannelNames</definition>
        <argsstring></argsstring>
        <name>mChannelNames</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The list of channel names </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp" line="778" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp" bodystart="778" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtsa_1_1_frame_i_stream_1a888a976c4806d295c7ab6731459a0d90" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string tsa::FrameIStream::mFileName</definition>
        <argsstring></argsstring>
        <name>mFileName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The file name </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp" line="779" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp" bodystart="779" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtsa_1_1_frame_i_stream_1aef647c717912f7f4522d98fa967de2a0" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classtsa_1_1_channel_descriptor" kindref="compound">ChannelDescriptor</ref> * &gt;</type>
        <definition>std::vector&lt;ChannelDescriptor*&gt; tsa::FrameIStream::mChannelDescriptors</definition>
        <argsstring></argsstring>
        <name>mChannelDescriptors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>list of channel descriptor </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp" line="780" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp" bodystart="780" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtsa_1_1_frame_i_stream_1a12d9c0c136ca288fc1fd64a660062494" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespacetsa_1ac599574bcc094eda25613724b8f3ca9e" kindref="member">SeqViewDouble</ref> &gt; *</type>
        <definition>std::vector&lt;SeqViewDouble&gt;* tsa::FrameIStream::mValidationView</definition>
        <argsstring></argsstring>
        <name>mValidationView</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to the validation views </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp" line="781" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp" bodystart="781" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtsa_1_1_frame_i_stream_1aef23fdf187cda4ab4a3aaaa0a9ba59ee" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool tsa::FrameIStream::mDataLoss</definition>
        <argsstring></argsstring>
        <name>mDataLoss</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Data loss flag </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp" line="782" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp" bodystart="782" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtsa_1_1_frame_i_stream_1ab0dfc2d31350678af1d0e1abe165ef65" prot="private" static="no" mutable="no">
        <type>std::deque&lt; <ref refid="classtsa_1_1missing__data" kindref="compound">missing_data</ref> &gt;</type>
        <definition>std::deque&lt;missing_data&gt; tsa::FrameIStream::mMissExceptions</definition>
        <argsstring></argsstring>
        <name>mMissExceptions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set of data loss exception </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp" line="783" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp" bodystart="783" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtsa_1_1_frame_i_stream_1a5bd1cb2479b947745f39121ba638d23f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tsa::FrameIStream::FrameIStream</definition>
        <argsstring>(const std::string &amp;fileName, const double &amp;StartTime)</argsstring>
        <name>FrameIStream</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>fileName</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>StartTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fileName</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the frame file (or a ffl file) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>StartTime</parametername>
</parameternamelist>
<parameterdescription>
<para>start time of the data chunk we want </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp" line="545" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/src/FrameIStream.cpp" bodystart="590" bodyend="604"/>
      </memberdef>
      <memberdef kind="function" id="classtsa_1_1_frame_i_stream_1a12f14bd9445709d3f03dcb122dc89889" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tsa::FrameIStream::FrameIStream</definition>
        <argsstring>(const std::string &amp;fileName, const double &amp;StartTime, const double &amp;TimeLength, const std::vector&lt; std::string &gt; &amp;channelNames)</argsstring>
        <name>FrameIStream</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>fileName</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>StartTime</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>TimeLength</declname>
        </param>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>channelNames</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fileName</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the frame file (or a ffl file) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>StartTime</parametername>
</parameternamelist>
<parameterdescription>
<para>start time of the data chunk we want </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>TimeLength</parametername>
</parameternamelist>
<parameterdescription>
<para>time length of requested data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channelNames</parametername>
</parameternamelist>
<parameterdescription>
<para>a list of channel&apos;s names </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp" line="560" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/src/FrameIStream.cpp" bodystart="571" bodyend="588"/>
      </memberdef>
      <memberdef kind="function" id="classtsa_1_1_frame_i_stream_1a867c0e6a3cd0c2405c038026880d268d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tsa::FrameIStream::~FrameIStream</definition>
        <argsstring>()</argsstring>
        <name>~FrameIStream</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destructor </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp" line="570" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/src/FrameIStream.cpp" bodystart="655" bodyend="662"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classtsa_1_1_frame_i_stream_1a6a3a7e4523fed47c0055cb7ae1fd9435" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtsa_1_1_channel_descriptor" kindref="compound">ChannelDescriptor</ref> *</type>
        <definition>ChannelDescriptor * tsa::FrameIStream::CreateChannelDescriptor</definition>
        <argsstring>(const std::string &amp;cname, unsigned int id)</argsstring>
        <name>CreateChannelDescriptor</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>cname</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new channel descriptor.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cname</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the requested channel descriptor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the desired channel descriptor</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a pointer to the new channel descriptor structure, or null </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp" line="757" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/src/FrameIStream.cpp" bodystart="9" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="classtsa_1_1_frame_i_stream_1af13e8a06bafa6e63bde6871d763425f1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tsa::FrameIStream::DataRequired</definition>
        <argsstring>()</argsstring>
        <name>DataRequired</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Test if some data are required.</para><para><simplesect kind="return"><para>true if soem data are required </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp" line="765" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/src/FrameIStream.cpp" bodystart="823" bodyend="837"/>
      </memberdef>
      <memberdef kind="function" id="classtsa_1_1_frame_i_stream_1a2f95f7fcf1e17f2d1b4a6b3dca976e76" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tsa::FrameIStream::GetData</definition>
        <argsstring>()</argsstring>
        <name>GetData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get new data from the file </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp" line="771" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/src/FrameIStream.cpp" bodystart="805" bodyend="821"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A source of data taken from a Frame file. </para>    </briefdescription>
    <detaileddescription>
<para>This class can be used to read data from a frame file. A set of channels can be specified, which are returned together.</para><para>Ser data:</para><para>Channel:Parameter:Frequency:Default </para>    </detaileddescription>
    <inheritancegraph>
      <node id="258">
        <label>tsa::FrameIStream</label>
        <link refid="classtsa_1_1_frame_i_stream"/>
        <childnode refid="259" relation="public-inheritance">
        </childnode>
      </node>
      <node id="259">
        <label>tsa::AlgoBase</label>
        <link refid="classtsa_1_1_algo_base"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="260">
        <label>tsa::FrameIStream</label>
        <link refid="classtsa_1_1_frame_i_stream"/>
        <childnode refid="261" relation="public-inheritance">
        </childnode>
      </node>
      <node id="261">
        <label>tsa::AlgoBase</label>
        <link refid="classtsa_1_1_algo_base"/>
      </node>
    </collaborationgraph>
    <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp" line="536" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp" bodystart="536" bodyend="784"/>
    <listofallmembers>
      <member refid="classtsa_1_1_frame_i_stream_1a7a8b3b63fdc352215672bdbdcefdd295" prot="public" virt="non-virtual"><scope>tsa::FrameIStream</scope><name>AddException</name></member>
      <member refid="classtsa_1_1_frame_i_stream_1a6a3a7e4523fed47c0055cb7ae1fd9435" prot="private" virt="non-virtual"><scope>tsa::FrameIStream</scope><name>CreateChannelDescriptor</name></member>
      <member refid="classtsa_1_1_frame_i_stream_1af13e8a06bafa6e63bde6871d763425f1" prot="private" virt="non-virtual"><scope>tsa::FrameIStream</scope><name>DataRequired</name></member>
      <member refid="classtsa_1_1_frame_i_stream_1a66b4e5b136f07fc3044865908364c913" prot="public" virt="non-virtual"><scope>tsa::FrameIStream</scope><name>FillView</name></member>
      <member refid="classtsa_1_1_frame_i_stream_1a5bd1cb2479b947745f39121ba638d23f" prot="public" virt="non-virtual"><scope>tsa::FrameIStream</scope><name>FrameIStream</name></member>
      <member refid="classtsa_1_1_frame_i_stream_1a12f14bd9445709d3f03dcb122dc89889" prot="public" virt="non-virtual"><scope>tsa::FrameIStream</scope><name>FrameIStream</name></member>
      <member refid="classtsa_1_1_frame_i_stream_1a0f65554481bf64cab44c7f5cbddb1987" prot="public" virt="non-virtual"><scope>tsa::FrameIStream</scope><name>GetChannelNames</name></member>
      <member refid="classtsa_1_1_frame_i_stream_1a2f95f7fcf1e17f2d1b4a6b3dca976e76" prot="private" virt="non-virtual"><scope>tsa::FrameIStream</scope><name>GetData</name></member>
      <member refid="classtsa_1_1_frame_i_stream_1abdd07c781d107408f1b3e800e7fab42f" prot="public" virt="non-virtual"><scope>tsa::FrameIStream</scope><name>GetDataLossFlag</name></member>
      <member refid="classtsa_1_1_frame_i_stream_1a2b54726738d6155f6e4ccbae2b4a3f8f" prot="public" virt="non-virtual"><scope>tsa::FrameIStream</scope><name>GetEndTime</name></member>
      <member refid="classtsa_1_1_frame_i_stream_1aa5e27458593c788665c737f40c445bf4" prot="public" virt="non-virtual"><scope>tsa::FrameIStream</scope><name>GetFileName</name></member>
      <member refid="classtsa_1_1_frame_i_stream_1a7719f5fb6f7adc5b96555728489b5df6" prot="public" virt="non-virtual"><scope>tsa::FrameIStream</scope><name>GetFrame</name></member>
      <member refid="classtsa_1_1_frame_i_stream_1a9ecf2c1985bf7578f70e0bef5ac993b3" prot="public" virt="non-virtual"><scope>tsa::FrameIStream</scope><name>GetFrameFile</name></member>
      <member refid="classtsa_1_1_frame_i_stream_1a3a199e1e8993581115311de3164550cc" prot="public" virt="non-virtual"><scope>tsa::FrameIStream</scope><name>GetInfo</name></member>
      <member refid="classtsa_1_1_frame_i_stream_1a02a205a02b70055814056216951476a6" prot="public" virt="non-virtual"><scope>tsa::FrameIStream</scope><name>GetSampling</name></member>
      <member refid="classtsa_1_1_frame_i_stream_1a88781ac3b80bddcca52e252f416009a6" prot="public" virt="non-virtual"><scope>tsa::FrameIStream</scope><name>GetStartTime</name></member>
      <member refid="classtsa_1_1_frame_i_stream_1aa9cae02ea01e99c39ba6a9da12fa8a21" prot="public" virt="non-virtual"><scope>tsa::FrameIStream</scope><name>GetTimeLength</name></member>
      <member refid="classtsa_1_1_frame_i_stream_1a9c53d0d13f4fe78ce0eef01af69e3f22" prot="public" virt="non-virtual"><scope>tsa::FrameIStream</scope><name>Init</name></member>
      <member refid="classtsa_1_1_frame_i_stream_1aef647c717912f7f4522d98fa967de2a0" prot="private" virt="non-virtual"><scope>tsa::FrameIStream</scope><name>mChannelDescriptors</name></member>
      <member refid="classtsa_1_1_frame_i_stream_1a14bff233330be1d0f995551d55b8eb98" prot="private" virt="non-virtual"><scope>tsa::FrameIStream</scope><name>mChannelNames</name></member>
      <member refid="classtsa_1_1_frame_i_stream_1aef23fdf187cda4ab4a3aaaa0a9ba59ee" prot="private" virt="non-virtual"><scope>tsa::FrameIStream</scope><name>mDataLoss</name></member>
      <member refid="classtsa_1_1_frame_i_stream_1a888a976c4806d295c7ab6731459a0d90" prot="private" virt="non-virtual"><scope>tsa::FrameIStream</scope><name>mFileName</name></member>
      <member refid="classtsa_1_1_frame_i_stream_1ab0dfc2d31350678af1d0e1abe165ef65" prot="private" virt="non-virtual"><scope>tsa::FrameIStream</scope><name>mMissExceptions</name></member>
      <member refid="classtsa_1_1_frame_i_stream_1a68ac0c21e3c23a219359e177623cf4e9" prot="private" virt="non-virtual"><scope>tsa::FrameIStream</scope><name>mpFrame</name></member>
      <member refid="classtsa_1_1_frame_i_stream_1acee6c81e135c34abb9501753f8088a91" prot="private" virt="non-virtual"><scope>tsa::FrameIStream</scope><name>mpFrameFile</name></member>
      <member refid="classtsa_1_1_frame_i_stream_1adad4100c6f0691cf47ca247b7b2f0fc6" prot="private" virt="non-virtual"><scope>tsa::FrameIStream</scope><name>mStartTime</name></member>
      <member refid="classtsa_1_1_frame_i_stream_1abd897050716a0879d2437a7e4f9f6b38" prot="private" virt="non-virtual"><scope>tsa::FrameIStream</scope><name>mTimeLength</name></member>
      <member refid="classtsa_1_1_frame_i_stream_1a12d9c0c136ca288fc1fd64a660062494" prot="private" virt="non-virtual"><scope>tsa::FrameIStream</scope><name>mValidationView</name></member>
      <member refid="classtsa_1_1_frame_i_stream_1ad2ad3c75a6448ce8ce8f119aee4609e5" prot="public" virt="non-virtual"><scope>tsa::FrameIStream</scope><name>operator&gt;&gt;</name></member>
      <member refid="classtsa_1_1_frame_i_stream_1a1d57b62edf1783696b7c52120dad9e5a" prot="public" virt="non-virtual"><scope>tsa::FrameIStream</scope><name>operator&gt;&gt;</name></member>
      <member refid="classtsa_1_1_frame_i_stream_1a1f12e9321856878c40266cd97890e3d4" prot="public" virt="non-virtual"><scope>tsa::FrameIStream</scope><name>ResetValidationView</name></member>
      <member refid="classtsa_1_1_frame_i_stream_1a5f23c61f80f232c70717dd2b021fae6d" prot="public" virt="non-virtual"><scope>tsa::FrameIStream</scope><name>SetChannels</name></member>
      <member refid="classtsa_1_1_frame_i_stream_1a188c2351c1717037f955c959e61629ff" prot="public" virt="non-virtual"><scope>tsa::FrameIStream</scope><name>SetDataLossFlag</name></member>
      <member refid="classtsa_1_1_frame_i_stream_1a8fb9dea502f55380a8a21e2976efa9b2" prot="public" virt="non-virtual"><scope>tsa::FrameIStream</scope><name>SetTimeLength</name></member>
      <member refid="classtsa_1_1_frame_i_stream_1a89e7cd73df5fb44c8235166d8b9ccd12" prot="public" virt="non-virtual"><scope>tsa::FrameIStream</scope><name>SetValidationView</name></member>
      <member refid="classtsa_1_1_frame_i_stream_1a867c0e6a3cd0c2405c038026880d268d" prot="public" virt="non-virtual"><scope>tsa::FrameIStream</scope><name>~FrameIStream</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
