<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classtsa_1_1_v_arma2_t_f" kind="class" language="C++" prot="public">
    <compoundname>tsa::VArma2TF</compoundname>
    <basecompoundref refid="classtsa_1_1_algo_base" prot="public" virt="non-virtual">tsa::AlgoBase</basecompoundref>
    <includes refid="_v_arma2_t_f_8hpp" local="no">VArma2TF.hpp</includes>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <memberdef kind="function" id="classtsa_1_1_v_arma2_t_f_1ab67f580ca661de7c0b495a0f36a4e205" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tsa::VArma2TF::execute</definition>
        <argsstring>(VDmatrix &amp;AR, VDmatrix &amp;MA, Cmatrix &amp;TF)</argsstring>
        <name>execute</name>
        <param>
          <type><ref refid="namespacetsa_1a6dd7105c3202ef00a213d7c029f5b248" kindref="member">VDmatrix</ref> &amp;</type>
          <declname>AR</declname>
        </param>
        <param>
          <type><ref refid="namespacetsa_1a6dd7105c3202ef00a213d7c029f5b248" kindref="member">VDmatrix</ref> &amp;</type>
          <declname>MA</declname>
        </param>
        <param>
          <type><ref refid="namespacetsa_1a86348fef1603a135fe5fba9e5f5486ee" kindref="member">Cmatrix</ref> &amp;</type>
          <declname>TF</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>AR</parametername>
</parameternamelist>
<parameterdescription>
<para>autoregressive part </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>MA</parametername>
</parameternamelist>
<parameterdescription>
<para>moving average part </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>TF</parametername>
</parameternamelist>
<parameterdescription>
<para>transfer function </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/VArma2TF.hpp" line="109" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classtsa_1_1_v_arma2_t_f_1a140ef6079dc2bc152a9a8b220c278fd8" prot="private" static="no" mutable="no">
        <type>LUComplexSolve</type>
        <definition>LUComplexSolve tsa::VArma2TF::mLUsolver</definition>
        <argsstring></argsstring>
        <name>mLUsolver</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/VArma2TF.hpp" line="132" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/VArma2TF.hpp" bodystart="132" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtsa_1_1_v_arma2_t_f_1a70dbd25e305c6dc002b56994e249fb7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tsa::VArma2TF::VArma2TF</definition>
        <argsstring>()</argsstring>
        <name>VArma2TF</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/VArma2TF.hpp" line="75" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtsa_1_1_v_arma2_t_f_1acb49999f01a40c655b7a29aac47024fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tsa::VArma2TF::VArma2TF</definition>
        <argsstring>(const VArma2TF &amp;from)</argsstring>
        <name>VArma2TF</name>
        <param>
          <type>const <ref refid="classtsa_1_1_v_arma2_t_f" kindref="compound">VArma2TF</ref> &amp;</type>
          <declname>from</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy constructor</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>from</parametername>
</parameternamelist>
<parameterdescription>
<para>The instance that must be copied </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/VArma2TF.hpp" line="82" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtsa_1_1_v_arma2_t_f_1a04c81fb435781fe74cb6108f64761b0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual tsa::VArma2TF::~VArma2TF</definition>
        <argsstring>()</argsstring>
        <name>~VArma2TF</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destructor </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/VArma2TF.hpp" line="87" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtsa_1_1_v_arma2_t_f_1a8e3f21b2a104259f2b27e5ea03bc500e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtsa_1_1_v_arma2_t_f" kindref="compound">VArma2TF</ref> &amp;</type>
        <definition>VArma2TF&amp; tsa::VArma2TF::operator=</definition>
        <argsstring>(const VArma2TF &amp;from)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classtsa_1_1_v_arma2_t_f" kindref="compound">VArma2TF</ref> &amp;</type>
          <declname>from</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Assignement operator</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>from</parametername>
</parameternamelist>
<parameterdescription>
<para>The instance to be assigned from</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a reference to a new object </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/VArma2TF.hpp" line="96" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Estimate the Transfer function using the ARMA parametrization. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="445">
        <label>tsa::VArma2TF</label>
        <link refid="classtsa_1_1_v_arma2_t_f"/>
        <childnode refid="446" relation="public-inheritance">
        </childnode>
      </node>
      <node id="446">
        <label>tsa::AlgoBase</label>
        <link refid="classtsa_1_1_algo_base"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="447">
        <label>tsa::VArma2TF</label>
        <link refid="classtsa_1_1_v_arma2_t_f"/>
        <childnode refid="448" relation="public-inheritance">
        </childnode>
      </node>
      <node id="448">
        <label>tsa::AlgoBase</label>
        <link refid="classtsa_1_1_algo_base"/>
      </node>
    </collaborationgraph>
    <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/VArma2TF.hpp" line="69" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/VArma2TF.hpp" bodystart="69" bodyend="134"/>
    <listofallmembers>
      <member refid="classtsa_1_1_v_arma2_t_f_1ab67f580ca661de7c0b495a0f36a4e205" prot="public" virt="non-virtual"><scope>tsa::VArma2TF</scope><name>execute</name></member>
      <member refid="classtsa_1_1_v_arma2_t_f_1a140ef6079dc2bc152a9a8b220c278fd8" prot="private" virt="non-virtual"><scope>tsa::VArma2TF</scope><name>mLUsolver</name></member>
      <member refid="classtsa_1_1_v_arma2_t_f_1a8e3f21b2a104259f2b27e5ea03bc500e" prot="public" virt="non-virtual"><scope>tsa::VArma2TF</scope><name>operator=</name></member>
      <member refid="classtsa_1_1_v_arma2_t_f_1a70dbd25e305c6dc002b56994e249fb7e" prot="public" virt="non-virtual"><scope>tsa::VArma2TF</scope><name>VArma2TF</name></member>
      <member refid="classtsa_1_1_v_arma2_t_f_1acb49999f01a40c655b7a29aac47024fc" prot="public" virt="non-virtual"><scope>tsa::VArma2TF</scope><name>VArma2TF</name></member>
      <member refid="classtsa_1_1_v_arma2_t_f_1a04c81fb435781fe74cb6108f64761b0d" prot="public" virt="virtual"><scope>tsa::VArma2TF</scope><name>~VArma2TF</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
