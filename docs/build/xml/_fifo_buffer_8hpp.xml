<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="_fifo_buffer_8hpp" kind="file" language="C++">
    <compoundname>FifoBuffer.hpp</compoundname>
    <includes local="no">queue</includes>
    <includes local="no">deque</includes>
    <includes refid="eternity_8hpp" local="no">eternity.hpp</includes>
    <includes refid="tsa_types_8hpp" local="no">tsaTypes.hpp</includes>
    <includes refid="tsa_serialize_8hpp" local="no">tsaSerialize.hpp</includes>
    <includedby refid="_fifo_buffer_8cpp" local="no">/home/filip/PhD/WDFPipe_test/p4TSA/src/FifoBuffer.cpp</includedby>
    <includedby refid="_double_whitening_8hpp" local="no">/home/filip/PhD/WDFPipe_test/p4TSA/include/DoubleWhitening.hpp</includedby>
    <includedby refid="_l_s_lfilter_8hpp" local="no">/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp</includedby>
    <includedby refid="_w_d_f2_classify_8hpp" local="no">/home/filip/PhD/WDFPipe_test/p4TSA/include/WDF2Classify.hpp</includedby>
    <includedby refid="_w_d_f2_reconstruct_8hpp" local="no">/home/filip/PhD/WDFPipe_test/p4TSA/include/WDF2Reconstruct.hpp</includedby>
    <incdepgraph>
      <node id="2316">
        <label>queue</label>
      </node>
      <node id="2318">
        <label>eternity.hpp</label>
        <link refid="eternity_8hpp"/>
        <childnode refid="2319" relation="include">
        </childnode>
        <childnode refid="2323" relation="include">
        </childnode>
        <childnode refid="2329" relation="include">
        </childnode>
        <childnode refid="2333" relation="include">
        </childnode>
      </node>
      <node id="2325">
        <label>stdlib.h</label>
      </node>
      <node id="2340">
        <label>stdexcept</label>
      </node>
      <node id="2335">
        <label>tsaTypes.hpp</label>
        <link refid="tsa_types_8hpp"/>
        <childnode refid="2328" relation="include">
        </childnode>
        <childnode refid="2336" relation="include">
        </childnode>
        <childnode refid="2337" relation="include">
        </childnode>
        <childnode refid="2338" relation="include">
        </childnode>
        <childnode refid="2318" relation="include">
        </childnode>
      </node>
      <node id="2322">
        <label>string</label>
      </node>
      <node id="2319">
        <label>eternity/dynamic.hpp</label>
        <link refid="dynamic_8hpp"/>
        <childnode refid="2320" relation="include">
        </childnode>
        <childnode refid="2321" relation="include">
        </childnode>
        <childnode refid="2322" relation="include">
        </childnode>
      </node>
      <node id="2331">
        <label>map</label>
      </node>
      <node id="2328">
        <label>fstream</label>
      </node>
      <node id="2330">
        <label>xmlscanner.hpp</label>
        <link refid="xmlscanner_8hpp"/>
        <childnode refid="2324" relation="include">
        </childnode>
        <childnode refid="2325" relation="include">
        </childnode>
        <childnode refid="2326" relation="include">
        </childnode>
        <childnode refid="2331" relation="include">
        </childnode>
        <childnode refid="2327" relation="include">
        </childnode>
        <childnode refid="2328" relation="include">
        </childnode>
        <childnode refid="2322" relation="include">
        </childnode>
        <childnode refid="2332" relation="include">
        </childnode>
      </node>
      <node id="2339">
        <label>tsaSerialize.hpp</label>
        <link refid="tsa_serialize_8hpp"/>
        <childnode refid="2340" relation="include">
        </childnode>
        <childnode refid="2332" relation="include">
        </childnode>
        <childnode refid="2328" relation="include">
        </childnode>
        <childnode refid="2318" relation="include">
        </childnode>
        <childnode refid="2335" relation="include">
        </childnode>
      </node>
      <node id="2323">
        <label>eternity/persist.hpp</label>
        <link refid="persist_8hpp"/>
        <childnode refid="2319" relation="include">
        </childnode>
        <childnode refid="2324" relation="include">
        </childnode>
        <childnode refid="2325" relation="include">
        </childnode>
        <childnode refid="2326" relation="include">
        </childnode>
        <childnode refid="2327" relation="include">
        </childnode>
        <childnode refid="2328" relation="include">
        </childnode>
      </node>
      <node id="2315">
        <label>/home/filip/PhD/WDFPipe_test/p4TSA/include/FifoBuffer.hpp</label>
        <link refid="_fifo_buffer_8hpp"/>
        <childnode refid="2316" relation="include">
        </childnode>
        <childnode refid="2317" relation="include">
        </childnode>
        <childnode refid="2318" relation="include">
        </childnode>
        <childnode refid="2335" relation="include">
        </childnode>
        <childnode refid="2339" relation="include">
        </childnode>
      </node>
      <node id="2321">
        <label>typeinfo</label>
      </node>
      <node id="2338">
        <label>boost/numeric/ublas/io.hpp</label>
      </node>
      <node id="2326">
        <label>vector</label>
      </node>
      <node id="2337">
        <label>boost/numeric/ublas/matrix_proxy.hpp</label>
      </node>
      <node id="2334">
        <label>sstream</label>
      </node>
      <node id="2324">
        <label>math.h</label>
      </node>
      <node id="2336">
        <label>boost/numeric/ublas/matrix.hpp</label>
      </node>
      <node id="2332">
        <label>iostream</label>
      </node>
      <node id="2317">
        <label>deque</label>
      </node>
      <node id="2329">
        <label>eternity/persist_xml.hpp</label>
        <link refid="persist__xml_8hpp"/>
        <childnode refid="2323" relation="include">
        </childnode>
        <childnode refid="2330" relation="include">
        </childnode>
        <childnode refid="2317" relation="include">
        </childnode>
      </node>
      <node id="2333">
        <label>eternity/algorithms.hpp</label>
        <link refid="algorithms_8hpp"/>
        <childnode refid="2323" relation="include">
        </childnode>
        <childnode refid="2329" relation="include">
        </childnode>
        <childnode refid="2330" relation="include">
        </childnode>
        <childnode refid="2334" relation="include">
        </childnode>
      </node>
      <node id="2327">
        <label>algorithm</label>
      </node>
      <node id="2320">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2348">
        <label>/home/filip/PhD/WDFPipe_test/p4TSA/include/WDF2Classify.hpp</label>
        <link refid="_w_d_f2_classify_8hpp"/>
        <childnode refid="2349" relation="include">
        </childnode>
        <childnode refid="2345" relation="include">
        </childnode>
      </node>
      <node id="2346">
        <label>/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp</label>
        <link refid="_l_s_lfilter_8hpp"/>
        <childnode refid="2347" relation="include">
        </childnode>
        <childnode refid="2345" relation="include">
        </childnode>
      </node>
      <node id="2343">
        <label>/home/filip/PhD/WDFPipe_test/p4TSA/include/DoubleWhitening.hpp</label>
        <link refid="_double_whitening_8hpp"/>
        <childnode refid="2344" relation="include">
        </childnode>
        <childnode refid="2345" relation="include">
        </childnode>
      </node>
      <node id="2344">
        <label>/home/filip/PhD/WDFPipe_test/p4TSA/src/DoubleWhitening.cpp</label>
        <link refid="_double_whitening_8cpp"/>
      </node>
      <node id="2349">
        <label>/home/filip/PhD/WDFPipe_test/p4TSA/src/WDF2Classify.cpp</label>
        <link refid="_w_d_f2_classify_8cpp"/>
      </node>
      <node id="2342">
        <label>/home/filip/PhD/WDFPipe_test/p4TSA/src/FifoBuffer.cpp</label>
        <link refid="_fifo_buffer_8cpp"/>
      </node>
      <node id="2345">
        <label>/home/filip/PhD/WDFPipe_test/p4TSA/include/tsa.hpp</label>
        <link refid="tsa_8hpp"/>
      </node>
      <node id="2341">
        <label>/home/filip/PhD/WDFPipe_test/p4TSA/include/FifoBuffer.hpp</label>
        <link refid="_fifo_buffer_8hpp"/>
        <childnode refid="2342" relation="include">
        </childnode>
        <childnode refid="2343" relation="include">
        </childnode>
        <childnode refid="2346" relation="include">
        </childnode>
        <childnode refid="2348" relation="include">
        </childnode>
        <childnode refid="2350" relation="include">
        </childnode>
      </node>
      <node id="2350">
        <label>/home/filip/PhD/WDFPipe_test/p4TSA/include/WDF2Reconstruct.hpp</label>
        <link refid="_w_d_f2_reconstruct_8hpp"/>
        <childnode refid="2351" relation="include">
        </childnode>
        <childnode refid="2345" relation="include">
        </childnode>
      </node>
      <node id="2351">
        <label>/home/filip/PhD/WDFPipe_test/p4TSA/src/WDF2Reconstruct.cpp</label>
        <link refid="_w_d_f2_reconstruct_8cpp"/>
      </node>
      <node id="2347">
        <label>/home/filip/PhD/WDFPipe_test/p4TSA/src/LSLfilter.cpp</label>
        <link refid="_l_s_lfilter_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classtsa_1_1_fifo_buffer" prot="public">tsa::FifoBuffer</innerclass>
    <innernamespace refid="namespacetsa">tsa</innernamespace>
    <briefdescription>
<para>Band limited interpolation. </para>    </briefdescription>
    <detaileddescription>
<para>Copyright (C) 2004 by Giancarlo Cella <ulink url="mailto:giancarlo.cella@pi.infn.it">giancarlo.cella@pi.infn.it</ulink></para><para>This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.</para><para>This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.</para><para>You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.</para><para><simplesect kind="author"><para>Giancarlo Cella <ulink url="mailto:giancarlo.cella@pi.infn.it">giancarlo.cella@pi.infn.it</ulink> </para></simplesect>
<simplesect kind="date"><para>Sat Nov 13 17:21:06 2004 </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="preprocessor">#ifndef<sp/>__FIFOBUFFER_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__FIFOBUFFER_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="preprocessor">#include<sp/>&lt;queue&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;deque&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"></codeline>
<codeline lineno="45"><highlight class="preprocessor">#include<sp/>&lt;<ref refid="eternity_8hpp" kindref="compound">eternity.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="tsa_types_8hpp" kindref="compound">tsaTypes.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="tsa_serialize_8hpp" kindref="compound">tsaSerialize.hpp</ref>&gt;</highlight></codeline>
<codeline lineno="49"></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"></codeline>
<codeline lineno="69"><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetsa" kindref="compound">tsa</ref><sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="classtsa_1_1_fifo_buffer" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtsa_1_1_fifo_buffer" kindref="compound">FifoBuffer</ref><sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtsa_1_1_fifo_buffer_1ad30fe947e5c2b34614859cbf12d749f1" kindref="member">FifoBuffer</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channels);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtsa_1_1_fifo_buffer_1ad30fe947e5c2b34614859cbf12d749f1" kindref="member">FifoBuffer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtsa_1_1_fifo_buffer" kindref="compound">FifoBuffer</ref>&amp;<sp/>from);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtsa_1_1_fifo_buffer_1ad7bec7c4fc528a12763f29c8f6a8e460" kindref="member">~FifoBuffer</ref>();</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtsa_1_1_fifo_buffer" kindref="compound">FifoBuffer</ref>&amp;<sp/><ref refid="classtsa_1_1_fifo_buffer_1ad3c89a0f4aa3e475e136ec8c47f2165e" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtsa_1_1_fifo_buffer" kindref="compound">FifoBuffer</ref>&amp;<sp/>from);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtsa_1_1_fifo_buffer_1ab70c4b3ba1a5356ab5384cd7f8638b0d" kindref="member">AddPoints</ref>(<ref refid="namespacetsa_1ad260cd21c1891c4ed391fe788569aba4" kindref="member">Dmatrix</ref>&amp;<sp/>data,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scale,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtsa_1_1_fifo_buffer_1a5cec8568b62047b4fb5b19c3fb44d28b" kindref="member">AddPoint</ref>(<ref refid="namespacetsa_1a8900fb03d849baf447a1a0efe2561fb2" kindref="member">Dvector</ref>&amp;<sp/>data,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scale);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtsa_1_1_fifo_buffer_1a5cec8568b62047b4fb5b19c3fb44d28b" kindref="member">AddPoint</ref>();</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="158" refid="classtsa_1_1_fifo_buffer_1a4a799676b78f5bc80d48db4fe7d64853" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/><ref refid="classtsa_1_1_fifo_buffer_1a4a799676b78f5bc80d48db4fe7d64853" kindref="member">Back</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*(<ref refid="classtsa_1_1_fifo_buffer_1aa8039b60b66e4e6bedd661352fff095f" kindref="member">mBuffer</ref>.back()))(i);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtsa_1_1_fifo_buffer_1a17acb27e83ab4af3667974660b58cb4e" kindref="member">DelPoints</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="176" refid="classtsa_1_1_fifo_buffer_1a7c14d2ae86c581d1ccc427dccb3f1213" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtsa_1_1_fifo_buffer_1a7c14d2ae86c581d1ccc427dccb3f1213" kindref="member">Size</ref>()<sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtsa_1_1_fifo_buffer_1aa8039b60b66e4e6bedd661352fff095f" kindref="member">mBuffer</ref>.size();</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="188" refid="classtsa_1_1_fifo_buffer_1a78f313804a23e61fa57329b6a1f3df02" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/><ref refid="classtsa_1_1_fifo_buffer_1a78f313804a23e61fa57329b6a1f3df02" kindref="member">operator()</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c)<sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*<ref refid="classtsa_1_1_fifo_buffer_1aa8039b60b66e4e6bedd661352fff095f" kindref="member">mBuffer</ref>[c])(r);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192" refid="classtsa_1_1_fifo_buffer_1a597548e1842c157dfe1ade0f9e5cd121" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtsa_1_1_fifo_buffer_1a597548e1842c157dfe1ade0f9e5cd121" kindref="member">Load</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fmt<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;txt&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classeternity_1_1xml__archive" kindref="compound">eternity::xml_archive</ref><sp/>fa;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fa.<ref refid="classeternity_1_1xml__archive_1acd5ef97a7b6a113e64e735270634bea1" kindref="member">open</ref>(filename,<sp/><ref refid="classeternity_1_1archive_1a8881f9ce8dbed2ee600c64b7925afef0a5b952c27ebe4ca2612e939a1aa19baf5" kindref="member">eternity::archive::load</ref>);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtsa_1_1_fifo_buffer_1a8ad8bf7c3935bf645b6cda8be7de441a" kindref="member">xml_serialize</ref>(fa,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fa.<ref refid="classeternity_1_1xml__archive_1a9f27feeac62aa0c3370ef9bcc60d86c6" kindref="member">close</ref>();</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199" refid="classtsa_1_1_fifo_buffer_1aeb760c1c71644dc850395b838e47bcfb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtsa_1_1_fifo_buffer_1aeb760c1c71644dc850395b838e47bcfb" kindref="member">Save</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fmt<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;txt&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classeternity_1_1xml__archive" kindref="compound">eternity::xml_archive</ref><sp/>fa;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fa.<ref refid="classeternity_1_1xml__archive_1acd5ef97a7b6a113e64e735270634bea1" kindref="member">open</ref>(filename,<sp/><ref refid="classeternity_1_1archive_1a8881f9ce8dbed2ee600c64b7925afef0a06c18c297779389cb1cb03a2a7590ca8" kindref="member">eternity::archive::store</ref>);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtsa_1_1_fifo_buffer_1a8ad8bf7c3935bf645b6cda8be7de441a" kindref="member">xml_serialize</ref>(fa,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fa.<ref refid="classeternity_1_1xml__archive_1a9f27feeac62aa0c3370ef9bcc60d86c6" kindref="member">close</ref>();</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206" refid="classtsa_1_1_fifo_buffer_1a8ad8bf7c3935bf645b6cda8be7de441a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtsa_1_1_fifo_buffer_1a8ad8bf7c3935bf645b6cda8be7de441a" kindref="member">xml_serialize</ref>(<ref refid="classeternity_1_1xml__archive" kindref="compound">eternity::xml_archive</ref>&amp;<sp/>xml,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>prefix)<sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buffer[1024];</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xml.<ref refid="classeternity_1_1archive_1af1ced5c2f5cd028d88033c40ac98cc71" kindref="member">is_loading</ref>())<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sz<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snprintf(buffer,<sp/>1024,<sp/></highlight><highlight class="stringliteral">&quot;%s.sz&quot;</highlight><highlight class="normal">,<sp/>prefix);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml.<ref refid="classeternity_1_1xml__archive_1a2e0b9a16f4b02b391967718f18175fc2" kindref="member">read</ref>(buffer,<sp/>sz,<sp/>0);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snprintf(buffer,<sp/>1024,<sp/></highlight><highlight class="stringliteral">&quot;%s.mChannels&quot;</highlight><highlight class="normal">,<sp/>prefix);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml.<ref refid="classeternity_1_1xml__archive_1a2e0b9a16f4b02b391967718f18175fc2" kindref="member">read</ref>(buffer,<sp/><ref refid="classtsa_1_1_fifo_buffer_1add6db36d6910a8b1efba4b2439f4b9c5" kindref="member">mChannels</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtsa_1_1_fifo_buffer_1a17acb27e83ab4af3667974660b58cb4e" kindref="member">DelPoints</ref>(sz);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>sz;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snprintf(buffer,<sp/>1024,<sp/></highlight><highlight class="stringliteral">&quot;%s.mBuffer.%d&quot;</highlight><highlight class="normal">,<sp/>prefix,<sp/>i);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtsa_1_1_fifo_buffer_1a5cec8568b62047b4fb5b19c3fb44d28b" kindref="member">AddPoint</ref>();</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tsa_serialize_8hpp_1aaf0498af65933356e879bfe5cb36f088" kindref="member">DVECTOR_XML_SERIALIZE</ref>(*(<ref refid="classtsa_1_1_fifo_buffer_1aa8039b60b66e4e6bedd661352fff095f" kindref="member">mBuffer</ref>.back()),<sp/>xml,<sp/>buffer);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sz<sp/>=<sp/><ref refid="classtsa_1_1_fifo_buffer_1aa8039b60b66e4e6bedd661352fff095f" kindref="member">mBuffer</ref>.size();</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snprintf(buffer,<sp/>1024,<sp/></highlight><highlight class="stringliteral">&quot;%s.sz&quot;</highlight><highlight class="normal">,<sp/>prefix);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml.<ref refid="classeternity_1_1xml__archive_1ab64fb09677fff76fb2935930f73365a6" kindref="member">write</ref>(buffer,<sp/>sz);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snprintf(buffer,<sp/>1024,<sp/></highlight><highlight class="stringliteral">&quot;%s.mChannels&quot;</highlight><highlight class="normal">,<sp/>prefix);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml.<ref refid="classeternity_1_1xml__archive_1ab64fb09677fff76fb2935930f73365a6" kindref="member">write</ref>(buffer,<sp/><ref refid="classtsa_1_1_fifo_buffer_1add6db36d6910a8b1efba4b2439f4b9c5" kindref="member">mChannels</ref>);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>sz;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snprintf(buffer,<sp/>1024,<sp/></highlight><highlight class="stringliteral">&quot;%s.mBuffer.%d&quot;</highlight><highlight class="normal">,<sp/>prefix,<sp/>i);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tsa_serialize_8hpp_1aaf0498af65933356e879bfe5cb36f088" kindref="member">DVECTOR_XML_SERIALIZE</ref>(*<ref refid="classtsa_1_1_fifo_buffer_1aa8039b60b66e4e6bedd661352fff095f" kindref="member">mBuffer</ref>[i],<sp/>xml,<sp/>buffer);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266" refid="classtsa_1_1_fifo_buffer_1add6db36d6910a8b1efba4b2439f4b9c5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtsa_1_1_fifo_buffer_1add6db36d6910a8b1efba4b2439f4b9c5" kindref="member">mChannels</ref>;<sp/></highlight></codeline>
<codeline lineno="267" refid="classtsa_1_1_fifo_buffer_1a538034e48a1c598fbbde1fefb9e92f91" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::queue&lt;Dvector*&gt;<sp/><ref refid="classtsa_1_1_fifo_buffer_1a538034e48a1c598fbbde1fefb9e92f91" kindref="member">mRepository</ref>;<sp/></highlight></codeline>
<codeline lineno="268" refid="classtsa_1_1_fifo_buffer_1aa8039b60b66e4e6bedd661352fff095f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::deque&lt;Dvector*&gt;<sp/><ref refid="classtsa_1_1_fifo_buffer_1aa8039b60b66e4e6bedd661352fff095f" kindref="member">mBuffer</ref>;<sp/></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>namespace<sp/>tsa</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>__FIFOBUFFER_HPP</highlight></codeline>
    </programlisting>
    <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/FifoBuffer.hpp"/>
  </compounddef>
</doxygen>
