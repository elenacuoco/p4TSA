<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classtsa_1_1_l_s_lfilter" kind="class" language="C++" prot="public">
    <compoundname>tsa::LSLfilter</compoundname>
    <basecompoundref refid="classtsa_1_1_algo_base" prot="public" virt="non-virtual">tsa::AlgoBase</basecompoundref>
    <includes refid="_l_s_lfilter_8hpp" local="no">LSLfilter.hpp</includes>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <memberdef kind="function" id="classtsa_1_1_l_s_lfilter_1a4308a18bd0ecc82242c4df0529c1f573" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tsa::LSLfilter::operator&lt;&lt;</definition>
        <argsstring>(SeqViewDouble &amp;Data)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type><ref refid="namespacetsa_1ac599574bcc094eda25613724b8f3ca9e" kindref="member">SeqViewDouble</ref> &amp;</type>
          <declname>Data</declname>
        </param>
        <briefdescription>
<para>to be used only when data are contiguos (offline analysis) </para>        </briefdescription>
        <detaileddescription>
<para>Declaration of execute operation</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>InputData</parametername>
</parameternamelist>
<parameterdescription>
<para>Matrix containing Time Series </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>WhitenedData</parametername>
</parameternamelist>
<parameterdescription>
<para>Matrix containing the WhitenedData </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp" line="210" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp" bodystart="210" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="classtsa_1_1_l_s_lfilter_1a8b0ecd9fa51d407daf718ac91776ebed" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tsa::LSLfilter::operator&gt;&gt;</definition>
        <argsstring>(SeqViewDouble &amp;outdata)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type><ref refid="namespacetsa_1ac599574bcc094eda25613724b8f3ca9e" kindref="member">SeqViewDouble</ref> &amp;</type>
          <declname>outdata</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp" line="227" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp" bodystart="227" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="classtsa_1_1_l_s_lfilter_1a7a6f64f53279b310e23cb034ab1d9a99" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tsa::LSLfilter::operator()</definition>
        <argsstring>(SeqViewDouble &amp;Data, SeqViewDouble &amp;outdata)</argsstring>
        <name>operator()</name>
        <param>
          <type><ref refid="namespacetsa_1ac599574bcc094eda25613724b8f3ca9e" kindref="member">SeqViewDouble</ref> &amp;</type>
          <declname>Data</declname>
        </param>
        <param>
          <type><ref refid="namespacetsa_1ac599574bcc094eda25613724b8f3ca9e" kindref="member">SeqViewDouble</ref> &amp;</type>
          <declname>outdata</declname>
        </param>
        <briefdescription>
<para>for online process </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Data</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outdata</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp" line="247" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp" bodystart="247" bodyend="268"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Getters</header>
      <memberdef kind="function" id="classtsa_1_1_l_s_lfilter_1ad577b856b131f49de4e29eb2406560e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tsa::LSLfilter::GetData</definition>
        <argsstring>(Dmatrix &amp;DWOutput)</argsstring>
        <name>GetData</name>
        <param>
          <type><ref refid="namespacetsa_1ad260cd21c1891c4ed391fe788569aba4" kindref="member">Dmatrix</ref> &amp;</type>
          <declname>DWOutput</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp" line="278" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/src/LSLfilter.cpp" bodystart="63" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="classtsa_1_1_l_s_lfilter_1a4b15685dc591ec522e2a34edcf87082b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacetsa_1ad260cd21c1891c4ed391fe788569aba4" kindref="member">Dmatrix</ref> *</type>
        <definition>Dmatrix* tsa::LSLfilter::GetWhitenedMatrix</definition>
        <argsstring>()</argsstring>
        <name>GetWhitenedMatrix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the whitened buffer </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp" line="284" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp" bodystart="284" bodyend="286"/>
      </memberdef>
      <memberdef kind="function" id="classtsa_1_1_l_s_lfilter_1af7e46359752bd2839f4ed510ef625ce5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int tsa::LSLfilter::GetOrder</definition>
        <argsstring>()</argsstring>
        <name>GetOrder</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp" line="311" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp" bodystart="311" bodyend="313"/>
      </memberdef>
      <memberdef kind="function" id="classtsa_1_1_l_s_lfilter_1a3a04a948854ddde91e3aa4bd8a5bf0eb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double tsa::LSLfilter::GetParcorForward</definition>
        <argsstring>(unsigned int j)</argsstring>
        <name>GetParcorForward</name>
        <param>
          <type>unsigned int</type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp" line="315" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp" bodystart="315" bodyend="317"/>
      </memberdef>
      <memberdef kind="function" id="classtsa_1_1_l_s_lfilter_1a21f41a8a1cbb800d0a1d4c3e474cc51e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double tsa::LSLfilter::GetParcorBackward</definition>
        <argsstring>(unsigned int j)</argsstring>
        <name>GetParcorBackward</name>
        <param>
          <type>unsigned int</type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp" line="322" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp" bodystart="322" bodyend="324"/>
      </memberdef>
      <memberdef kind="function" id="classtsa_1_1_l_s_lfilter_1a94d29deb2900d3be889b1288730112df" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double tsa::LSLfilter::GetEpf</definition>
        <argsstring>(unsigned int j)</argsstring>
        <name>GetEpf</name>
        <param>
          <type>unsigned int</type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp" line="326" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp" bodystart="326" bodyend="328"/>
      </memberdef>
      <memberdef kind="function" id="classtsa_1_1_l_s_lfilter_1aad172e3d7c8743ea64b0dd32d9017bbd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double tsa::LSLfilter::GetErrorForward</definition>
        <argsstring>(unsigned int j)</argsstring>
        <name>GetErrorForward</name>
        <param>
          <type>unsigned int</type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp" line="330" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp" bodystart="330" bodyend="332"/>
      </memberdef>
      <memberdef kind="function" id="classtsa_1_1_l_s_lfilter_1ad9c27bb102a3cd25ceda75ab5bed4a7a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double tsa::LSLfilter::GetErrorBackward</definition>
        <argsstring>(unsigned int j)</argsstring>
        <name>GetErrorBackward</name>
        <param>
          <type>unsigned int</type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp" line="336" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp" bodystart="336" bodyend="338"/>
      </memberdef>
      <memberdef kind="function" id="classtsa_1_1_l_s_lfilter_1a06bbde7bf7ba9deed211b3a05ba82890" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double tsa::LSLfilter::GetSigma</definition>
        <argsstring>(unsigned int j)</argsstring>
        <name>GetSigma</name>
        <param>
          <type>unsigned int</type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp" line="342" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp" bodystart="342" bodyend="344"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Setters</header>
      <memberdef kind="function" id="classtsa_1_1_l_s_lfilter_1ab01da31972cf54c49a28920c8235e8c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tsa::LSLfilter::SetData</definition>
        <argsstring>(Dmatrix &amp;Data, double scale)</argsstring>
        <name>SetData</name>
        <param>
          <type><ref refid="namespacetsa_1ad260cd21c1891c4ed391fe788569aba4" kindref="member">Dmatrix</ref> &amp;</type>
          <declname>Data</declname>
        </param>
        <param>
          <type>double</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp" line="301" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/src/LSLfilter.cpp" bodystart="52" bodyend="54"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classtsa_1_1_l_s_lfilter_1a95e5134738dd70857cf6c7ac52b11639" prot="private" static="no" mutable="no">
        <type><ref refid="classtsa_1_1_fifo_buffer" kindref="compound">FifoBuffer</ref></type>
        <definition>FifoBuffer tsa::LSLfilter::mBuffer</definition>
        <argsstring></argsstring>
        <name>mBuffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp" line="359" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp" bodystart="359" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtsa_1_1_l_s_lfilter_1a015aba5b8378277ee5cda011ba6b4fe1" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int tsa::LSLfilter::mWinSize</definition>
        <argsstring></argsstring>
        <name>mWinSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp" line="360" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp" bodystart="360" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtsa_1_1_l_s_lfilter_1aa25b337e262a868101f68d8437f162c1" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int tsa::LSLfilter::mOrder</definition>
        <argsstring></argsstring>
        <name>mOrder</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Order of the filter </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp" line="361" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp" bodystart="361" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtsa_1_1_l_s_lfilter_1aeae300f77e90ba968cc9c5c0eea38a96" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double tsa::LSLfilter::mLambda</definition>
        <argsstring></argsstring>
        <name>mLambda</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Forgetting Factor </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp" line="362" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp" bodystart="362" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtsa_1_1_l_s_lfilter_1aa620a0738568ad5360806ad189aa70c2" prot="private" static="no" mutable="no">
        <type><ref refid="namespacetsa_1a8900fb03d849baf447a1a0efe2561fb2" kindref="member">Dvector</ref></type>
        <definition>Dvector tsa::LSLfilter::mSigma</definition>
        <argsstring></argsstring>
        <name>mSigma</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The estimated rms </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp" line="363" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp" bodystart="363" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtsa_1_1_l_s_lfilter_1a68dda41fd3d7be90171213425541ea2a" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool tsa::LSLfilter::mNorm</definition>
        <argsstring></argsstring>
        <name>mNorm</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp" line="364" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp" bodystart="364" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtsa_1_1_l_s_lfilter_1a9898a4187911d742deb802e51ec1883f" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double tsa::LSLfilter::mSigma0</definition>
        <argsstring></argsstring>
        <name>mSigma0</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp" line="365" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp" bodystart="365" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtsa_1_1_l_s_lfilter_1a6e679e1858ec5cab2c2ab00d9ad17a4b" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double tsa::LSLfilter::mStartTime</definition>
        <argsstring></argsstring>
        <name>mStartTime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp" line="366" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp" bodystart="366" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtsa_1_1_l_s_lfilter_1a7d7cc212e5c6a963560a6f18eff72497" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double tsa::LSLfilter::mSampling</definition>
        <argsstring></argsstring>
        <name>mSampling</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp" line="367" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp" bodystart="367" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtsa_1_1_l_s_lfilter_1a23612cc3cfdb9a0dfb38743f54e4d076" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool tsa::LSLfilter::mFirstCall</definition>
        <argsstring></argsstring>
        <name>mFirstCall</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp" line="368" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp" bodystart="368" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtsa_1_1_l_s_lfilter_1a980bad9cc152c400df6f4e1e8c25c111" prot="private" static="no" mutable="no">
        <type><ref refid="namespacetsa_1ad260cd21c1891c4ed391fe788569aba4" kindref="member">Dmatrix</ref></type>
        <definition>Dmatrix tsa::LSLfilter::mEF</definition>
        <argsstring></argsstring>
        <name>mEF</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>ErrorForward </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp" line="369" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp" bodystart="369" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtsa_1_1_l_s_lfilter_1a24ad0a2f6a2b79b01b1e99ef9c663d1e" prot="private" static="no" mutable="no">
        <type><ref refid="namespacetsa_1ad260cd21c1891c4ed391fe788569aba4" kindref="member">Dmatrix</ref></type>
        <definition>Dmatrix tsa::LSLfilter::mEB</definition>
        <argsstring></argsstring>
        <name>mEB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>ErrorBackward </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp" line="370" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp" bodystart="370" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtsa_1_1_l_s_lfilter_1a571c1d1b411aad2417ce23579a8da9ac" prot="private" static="no" mutable="no">
        <type><ref refid="namespacetsa_1ad260cd21c1891c4ed391fe788569aba4" kindref="member">Dmatrix</ref></type>
        <definition>Dmatrix tsa::LSLfilter::mEpf</definition>
        <argsstring></argsstring>
        <name>mEpf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Mean <ref refid="classtsa_1_1_square" kindref="compound">Square</ref> Error Forward </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp" line="371" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp" bodystart="371" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtsa_1_1_l_s_lfilter_1a067ccd52ecffc15945fdcb73fa515244" prot="private" static="no" mutable="no">
        <type><ref refid="namespacetsa_1ad260cd21c1891c4ed391fe788569aba4" kindref="member">Dmatrix</ref></type>
        <definition>Dmatrix tsa::LSLfilter::mEpb</definition>
        <argsstring></argsstring>
        <name>mEpb</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Mean <ref refid="classtsa_1_1_square" kindref="compound">Square</ref> Error Backward </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp" line="372" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp" bodystart="372" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtsa_1_1_l_s_lfilter_1a83a3095a513fda5efd6b75aaa77495df" prot="private" static="no" mutable="no">
        <type><ref refid="namespacetsa_1a8900fb03d849baf447a1a0efe2561fb2" kindref="member">Dvector</ref></type>
        <definition>Dvector tsa::LSLfilter::mKf</definition>
        <argsstring></argsstring>
        <name>mKf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Forward Parcor </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp" line="373" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp" bodystart="373" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtsa_1_1_l_s_lfilter_1ae3b9ac48debc547e1aa69ae0ade36408" prot="private" static="no" mutable="no">
        <type><ref refid="namespacetsa_1a8900fb03d849baf447a1a0efe2561fb2" kindref="member">Dvector</ref></type>
        <definition>Dvector tsa::LSLfilter::mKb</definition>
        <argsstring></argsstring>
        <name>mKb</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Backward Parcor </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp" line="374" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp" bodystart="374" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtsa_1_1_l_s_lfilter_1a0a2ad9e25528879045483500ff6401b0" prot="private" static="no" mutable="no">
        <type><ref refid="namespacetsa_1a8900fb03d849baf447a1a0efe2561fb2" kindref="member">Dvector</ref></type>
        <definition>Dvector tsa::LSLfilter::mG</definition>
        <argsstring></argsstring>
        <name>mG</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Angle parameter </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp" line="375" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp" bodystart="375" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtsa_1_1_l_s_lfilter_1a490187ff893b2ff71a5f36f9b4efe7f3" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int tsa::LSLfilter::mF0</definition>
        <argsstring></argsstring>
        <name>mF0</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>index for the status of the Lattice filter </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp" line="376" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp" bodystart="376" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtsa_1_1_l_s_lfilter_1a7f49b52bb9e1b935f957e04166bf7c8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tsa::LSLfilter::LSLfilter</definition>
        <argsstring>(LSLLearning &amp;LSL, double lambda=1.0, unsigned int size=1, bool Norm=false)</argsstring>
        <name>LSLfilter</name>
        <param>
          <type><ref refid="classtsa_1_1_l_s_l_learning" kindref="compound">LSLLearning</ref> &amp;</type>
          <declname>LSL</declname>
        </param>
        <param>
          <type>double</type>
          <declname>lambda</declname>
          <defval>1.0</defval>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>size</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>Norm</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Order</parametername>
</parameternamelist>
<parameterdescription>
<para>Order of the filter </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sigma</parametername>
</parameternamelist>
<parameterdescription>
<para>guessed value for the initial sigma </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Lwsp</parametername>
</parameternamelist>
<parameterdescription>
<para>Lenght of workspace </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lambda</parametername>
</parameternamelist>
<parameterdescription>
<para>forgetting factor </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp" line="88" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/src/LSLfilter.cpp" bodystart="20" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="classtsa_1_1_l_s_lfilter_1addf16b957be6c848ad1c59ee7cb4dd4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tsa::LSLfilter::~LSLfilter</definition>
        <argsstring>()</argsstring>
        <name>~LSLfilter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destructor </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp" line="95" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/src/LSLfilter.cpp" bodystart="49" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classtsa_1_1_l_s_lfilter_1a737d772a9b51efdd71a01178ec83597f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tsa::LSLfilter::Load</definition>
        <argsstring>(const char *filename, const char *fmt=&quot;txt&quot;)</argsstring>
        <name>Load</name>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
          <defval>&quot;txt&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp" line="97" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp" bodystart="97" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classtsa_1_1_l_s_lfilter_1ae8aa6f5275313f49e88bf4f6361092f9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tsa::LSLfilter::Save</definition>
        <argsstring>(const char *filename, const char *fmt=&quot;txt&quot;)</argsstring>
        <name>Save</name>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
          <defval>&quot;txt&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp" line="104" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp" bodystart="104" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="classtsa_1_1_l_s_lfilter_1a1adaa3058f09e50b73a88520844d2b90" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tsa::LSLfilter::xml_serialize</definition>
        <argsstring>(eternity::xml_archive &amp;xml, const char *p)</argsstring>
        <name>xml_serialize</name>
        <param>
          <type><ref refid="classeternity_1_1xml__archive" kindref="compound">eternity::xml_archive</ref> &amp;</type>
          <declname>xml</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp" line="111" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp" bodystart="111" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="classtsa_1_1_l_s_lfilter_1a236a35327bce862b6c4f8a9245af7b9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tsa::LSLfilter::GetDataNeeded</definition>
        <argsstring>()</argsstring>
        <name>GetDataNeeded</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the number of data needed in order to be able to call GetData successfully. If the returned value is less or equal than zero no data are needed.</para><para><simplesect kind="return"><para>the needed data </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp" line="295" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/src/LSLfilter.cpp" bodystart="57" bodyend="59"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Algorithm for the filter phase of the Adaptive Least Squares Lattice. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="315">
        <label>tsa::LSLfilter</label>
        <link refid="classtsa_1_1_l_s_lfilter"/>
        <childnode refid="316" relation="public-inheritance">
        </childnode>
      </node>
      <node id="316">
        <label>tsa::AlgoBase</label>
        <link refid="classtsa_1_1_algo_base"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="319">
        <label>tsa::FifoBuffer</label>
        <link refid="classtsa_1_1_fifo_buffer"/>
      </node>
      <node id="317">
        <label>tsa::LSLfilter</label>
        <link refid="classtsa_1_1_l_s_lfilter"/>
        <childnode refid="318" relation="public-inheritance">
        </childnode>
        <childnode refid="319" relation="usage">
          <edgelabel>mBuffer</edgelabel>
        </childnode>
      </node>
      <node id="318">
        <label>tsa::AlgoBase</label>
        <link refid="classtsa_1_1_algo_base"/>
      </node>
    </collaborationgraph>
    <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp" line="76" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp" bodystart="76" bodyend="378"/>
    <listofallmembers>
      <member refid="classtsa_1_1_l_s_lfilter_1ad577b856b131f49de4e29eb2406560e9" prot="public" virt="non-virtual"><scope>tsa::LSLfilter</scope><name>GetData</name></member>
      <member refid="classtsa_1_1_l_s_lfilter_1a236a35327bce862b6c4f8a9245af7b9c" prot="public" virt="non-virtual"><scope>tsa::LSLfilter</scope><name>GetDataNeeded</name></member>
      <member refid="classtsa_1_1_l_s_lfilter_1a94d29deb2900d3be889b1288730112df" prot="public" virt="non-virtual"><scope>tsa::LSLfilter</scope><name>GetEpf</name></member>
      <member refid="classtsa_1_1_l_s_lfilter_1ad9c27bb102a3cd25ceda75ab5bed4a7a" prot="public" virt="non-virtual"><scope>tsa::LSLfilter</scope><name>GetErrorBackward</name></member>
      <member refid="classtsa_1_1_l_s_lfilter_1aad172e3d7c8743ea64b0dd32d9017bbd" prot="public" virt="non-virtual"><scope>tsa::LSLfilter</scope><name>GetErrorForward</name></member>
      <member refid="classtsa_1_1_l_s_lfilter_1af7e46359752bd2839f4ed510ef625ce5" prot="public" virt="non-virtual"><scope>tsa::LSLfilter</scope><name>GetOrder</name></member>
      <member refid="classtsa_1_1_l_s_lfilter_1a21f41a8a1cbb800d0a1d4c3e474cc51e" prot="public" virt="non-virtual"><scope>tsa::LSLfilter</scope><name>GetParcorBackward</name></member>
      <member refid="classtsa_1_1_l_s_lfilter_1a3a04a948854ddde91e3aa4bd8a5bf0eb" prot="public" virt="non-virtual"><scope>tsa::LSLfilter</scope><name>GetParcorForward</name></member>
      <member refid="classtsa_1_1_l_s_lfilter_1a06bbde7bf7ba9deed211b3a05ba82890" prot="public" virt="non-virtual"><scope>tsa::LSLfilter</scope><name>GetSigma</name></member>
      <member refid="classtsa_1_1_l_s_lfilter_1a4b15685dc591ec522e2a34edcf87082b" prot="public" virt="non-virtual"><scope>tsa::LSLfilter</scope><name>GetWhitenedMatrix</name></member>
      <member refid="classtsa_1_1_l_s_lfilter_1a737d772a9b51efdd71a01178ec83597f" prot="public" virt="non-virtual"><scope>tsa::LSLfilter</scope><name>Load</name></member>
      <member refid="classtsa_1_1_l_s_lfilter_1a7f49b52bb9e1b935f957e04166bf7c8c" prot="public" virt="non-virtual"><scope>tsa::LSLfilter</scope><name>LSLfilter</name></member>
      <member refid="classtsa_1_1_l_s_lfilter_1a95e5134738dd70857cf6c7ac52b11639" prot="private" virt="non-virtual"><scope>tsa::LSLfilter</scope><name>mBuffer</name></member>
      <member refid="classtsa_1_1_l_s_lfilter_1a24ad0a2f6a2b79b01b1e99ef9c663d1e" prot="private" virt="non-virtual"><scope>tsa::LSLfilter</scope><name>mEB</name></member>
      <member refid="classtsa_1_1_l_s_lfilter_1a980bad9cc152c400df6f4e1e8c25c111" prot="private" virt="non-virtual"><scope>tsa::LSLfilter</scope><name>mEF</name></member>
      <member refid="classtsa_1_1_l_s_lfilter_1a067ccd52ecffc15945fdcb73fa515244" prot="private" virt="non-virtual"><scope>tsa::LSLfilter</scope><name>mEpb</name></member>
      <member refid="classtsa_1_1_l_s_lfilter_1a571c1d1b411aad2417ce23579a8da9ac" prot="private" virt="non-virtual"><scope>tsa::LSLfilter</scope><name>mEpf</name></member>
      <member refid="classtsa_1_1_l_s_lfilter_1a490187ff893b2ff71a5f36f9b4efe7f3" prot="private" virt="non-virtual"><scope>tsa::LSLfilter</scope><name>mF0</name></member>
      <member refid="classtsa_1_1_l_s_lfilter_1a23612cc3cfdb9a0dfb38743f54e4d076" prot="private" virt="non-virtual"><scope>tsa::LSLfilter</scope><name>mFirstCall</name></member>
      <member refid="classtsa_1_1_l_s_lfilter_1a0a2ad9e25528879045483500ff6401b0" prot="private" virt="non-virtual"><scope>tsa::LSLfilter</scope><name>mG</name></member>
      <member refid="classtsa_1_1_l_s_lfilter_1ae3b9ac48debc547e1aa69ae0ade36408" prot="private" virt="non-virtual"><scope>tsa::LSLfilter</scope><name>mKb</name></member>
      <member refid="classtsa_1_1_l_s_lfilter_1a83a3095a513fda5efd6b75aaa77495df" prot="private" virt="non-virtual"><scope>tsa::LSLfilter</scope><name>mKf</name></member>
      <member refid="classtsa_1_1_l_s_lfilter_1aeae300f77e90ba968cc9c5c0eea38a96" prot="private" virt="non-virtual"><scope>tsa::LSLfilter</scope><name>mLambda</name></member>
      <member refid="classtsa_1_1_l_s_lfilter_1a68dda41fd3d7be90171213425541ea2a" prot="private" virt="non-virtual"><scope>tsa::LSLfilter</scope><name>mNorm</name></member>
      <member refid="classtsa_1_1_l_s_lfilter_1aa25b337e262a868101f68d8437f162c1" prot="private" virt="non-virtual"><scope>tsa::LSLfilter</scope><name>mOrder</name></member>
      <member refid="classtsa_1_1_l_s_lfilter_1a7d7cc212e5c6a963560a6f18eff72497" prot="private" virt="non-virtual"><scope>tsa::LSLfilter</scope><name>mSampling</name></member>
      <member refid="classtsa_1_1_l_s_lfilter_1aa620a0738568ad5360806ad189aa70c2" prot="private" virt="non-virtual"><scope>tsa::LSLfilter</scope><name>mSigma</name></member>
      <member refid="classtsa_1_1_l_s_lfilter_1a9898a4187911d742deb802e51ec1883f" prot="private" virt="non-virtual"><scope>tsa::LSLfilter</scope><name>mSigma0</name></member>
      <member refid="classtsa_1_1_l_s_lfilter_1a6e679e1858ec5cab2c2ab00d9ad17a4b" prot="private" virt="non-virtual"><scope>tsa::LSLfilter</scope><name>mStartTime</name></member>
      <member refid="classtsa_1_1_l_s_lfilter_1a015aba5b8378277ee5cda011ba6b4fe1" prot="private" virt="non-virtual"><scope>tsa::LSLfilter</scope><name>mWinSize</name></member>
      <member refid="classtsa_1_1_l_s_lfilter_1a7a6f64f53279b310e23cb034ab1d9a99" prot="public" virt="non-virtual"><scope>tsa::LSLfilter</scope><name>operator()</name></member>
      <member refid="classtsa_1_1_l_s_lfilter_1a4308a18bd0ecc82242c4df0529c1f573" prot="public" virt="non-virtual"><scope>tsa::LSLfilter</scope><name>operator&lt;&lt;</name></member>
      <member refid="classtsa_1_1_l_s_lfilter_1a8b0ecd9fa51d407daf718ac91776ebed" prot="public" virt="non-virtual"><scope>tsa::LSLfilter</scope><name>operator&gt;&gt;</name></member>
      <member refid="classtsa_1_1_l_s_lfilter_1ae8aa6f5275313f49e88bf4f6361092f9" prot="public" virt="non-virtual"><scope>tsa::LSLfilter</scope><name>Save</name></member>
      <member refid="classtsa_1_1_l_s_lfilter_1ab01da31972cf54c49a28920c8235e8c9" prot="public" virt="non-virtual"><scope>tsa::LSLfilter</scope><name>SetData</name></member>
      <member refid="classtsa_1_1_l_s_lfilter_1a1adaa3058f09e50b73a88520844d2b90" prot="public" virt="non-virtual"><scope>tsa::LSLfilter</scope><name>xml_serialize</name></member>
      <member refid="classtsa_1_1_l_s_lfilter_1addf16b957be6c848ad1c59ee7cb4dd4e" prot="public" virt="non-virtual"><scope>tsa::LSLfilter</scope><name>~LSLfilter</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
