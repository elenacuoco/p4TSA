<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structeternity_1_1sequence" kind="struct" language="C++" prot="public">
    <compoundname>eternity::sequence</compoundname>
    <includes refid="algorithms_8hpp" local="no">algorithms.hpp</includes>
    <templateparamlist>
      <param>
        <type>class CollectionContent</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structeternity_1_1sequence_1a4e7cf210d285c8b3f72faa3d81ef9bad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class InputIterator</type>
          </param>
          <param>
            <type>class Archive</type>
          </param>
        </templateparamlist>
        <type>size_t</type>
        <definition>size_t eternity::sequence&lt; CollectionContent &gt;::xml_write</definition>
        <argsstring>(InputIterator first, InputIterator last, Archive &amp;archive)</argsstring>
        <name>xml_write</name>
        <param>
          <type>InputIterator</type>
          <declname>first</declname>
        </param>
        <param>
          <type>InputIterator</type>
          <declname>last</declname>
        </param>
        <param>
          <type>Archive &amp;</type>
          <declname>archive</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/algorithms.hpp" line="160" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/algorithms.hpp" bodystart="173" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="structeternity_1_1sequence_1ae510997cf3ed034443737ca0f05e9a34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Container</type>
          </param>
          <param>
            <type>class InputIterator</type>
          </param>
          <param>
            <type>class Archive</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void eternity::sequence&lt; CollectionContent &gt;::xml_read</definition>
        <argsstring>(Container &amp;container, InputIterator insert, size_t len, Archive &amp;archive)</argsstring>
        <name>xml_read</name>
        <param>
          <type>Container &amp;</type>
          <declname>container</declname>
        </param>
        <param>
          <type>InputIterator</type>
          <declname>insert</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>Archive &amp;</type>
          <declname>archive</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/algorithms.hpp" line="163" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/algorithms.hpp" bodystart="185" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="structeternity_1_1sequence_1a5339872e64fcb9636ef080e5b932658a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class InputIterator</type>
          </param>
          <param>
            <type>class Archive</type>
          </param>
        </templateparamlist>
        <type>size_t</type>
        <definition>size_t eternity::sequence&lt; CollectionContent &gt;::write</definition>
        <argsstring>(InputIterator first, InputIterator last, Archive &amp;archive)</argsstring>
        <name>write</name>
        <param>
          <type>InputIterator</type>
          <declname>first</declname>
        </param>
        <param>
          <type>InputIterator</type>
          <declname>last</declname>
        </param>
        <param>
          <type>Archive &amp;</type>
          <declname>archive</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/algorithms.hpp" line="166" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/algorithms.hpp" bodystart="197" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="structeternity_1_1sequence_1ac0bc259640bda1d30744b14c59539d20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Container</type>
          </param>
          <param>
            <type>class InputIterator</type>
          </param>
          <param>
            <type>class Archive</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void eternity::sequence&lt; CollectionContent &gt;::read</definition>
        <argsstring>(Container &amp;container, InputIterator insert, size_t len, Archive &amp;archive)</argsstring>
        <name>read</name>
        <param>
          <type>Container &amp;</type>
          <declname>container</declname>
        </param>
        <param>
          <type>InputIterator</type>
          <declname>insert</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>Archive &amp;</type>
          <declname>archive</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/algorithms.hpp" line="169" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/algorithms.hpp" bodystart="209" bodyend="218"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Manage persistence of sequence containers (e.g. vector, list). Use template parameter to specify contents type (e.g. primitives, objects or pointers). This struct is not intended to direct use but must be passed as template parameter of xml_serialize() or serialize() algorithms. </para>    </detaileddescription>
    <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/algorithms.hpp" line="158" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/algorithms.hpp" bodystart="158" bodyend="170"/>
    <listofallmembers>
      <member refid="structeternity_1_1sequence_1ac0bc259640bda1d30744b14c59539d20" prot="public" virt="non-virtual"><scope>eternity::sequence</scope><name>read</name></member>
      <member refid="structeternity_1_1sequence_1a5339872e64fcb9636ef080e5b932658a" prot="public" virt="non-virtual"><scope>eternity::sequence</scope><name>write</name></member>
      <member refid="structeternity_1_1sequence_1ae510997cf3ed034443737ca0f05e9a34" prot="public" virt="non-virtual"><scope>eternity::sequence</scope><name>xml_read</name></member>
      <member refid="structeternity_1_1sequence_1a4e7cf210d285c8b3f72faa3d81ef9bad" prot="public" virt="non-virtual"><scope>eternity::sequence</scope><name>xml_write</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
