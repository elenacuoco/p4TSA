<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classtsa_1_1_base_window" kind="class" language="C++" prot="public">
    <compoundname>tsa::BaseWindow</compoundname>
    <basecompoundref refid="classtsa_1_1_algo_base" prot="public" virt="non-virtual">tsa::AlgoBase</basecompoundref>
    <derivedcompoundref refid="classtsa_1_1_bartlett_window" prot="public" virt="non-virtual">tsa::BartlettWindow</derivedcompoundref>
    <derivedcompoundref refid="classtsa_1_1_bisquare_window" prot="public" virt="non-virtual">tsa::BisquareWindow</derivedcompoundref>
    <derivedcompoundref refid="classtsa_1_1_cs2_hamming_window" prot="public" virt="non-virtual">tsa::Cs2HammingWindow</derivedcompoundref>
    <derivedcompoundref refid="classtsa_1_1_cs2_hann_window" prot="public" virt="non-virtual">tsa::Cs2HannWindow</derivedcompoundref>
    <derivedcompoundref refid="classtsa_1_1_kaiser_window" prot="public" virt="non-virtual">tsa::KaiserWindow</derivedcompoundref>
    <derivedcompoundref refid="classtsa_1_1_tukey_hann_window" prot="public" virt="non-virtual">tsa::TukeyHannWindow</derivedcompoundref>
    <derivedcompoundref refid="classtsa_1_1_tukey_window" prot="public" virt="non-virtual">tsa::TukeyWindow</derivedcompoundref>
    <derivedcompoundref refid="classtsa_1_1_welch_window" prot="public" virt="non-virtual">tsa::WelchWindow</derivedcompoundref>
    <includes refid="_base_window_8hpp" local="no">BaseWindow.hpp</includes>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <memberdef kind="function" id="classtsa_1_1_base_window_1a05d9edb95dc01840a1b2df78dfa3a8c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void tsa::BaseWindow::operator()</definition>
        <argsstring>(SeqViewDouble &amp;v1)</argsstring>
        <name>operator()</name>
        <reimplementedby refid="classtsa_1_1_bartlett_window_1a9bad239fb8fbaa295713c904e3d9d92e">operator()</reimplementedby>
        <reimplementedby refid="classtsa_1_1_bisquare_window_1a8ad862435b17d306997adbb8be9c9b4f">operator()</reimplementedby>
        <reimplementedby refid="classtsa_1_1_cs2_hann_window_1af896b6c2dc55a283b67c2b694926918a">operator()</reimplementedby>
        <reimplementedby refid="classtsa_1_1_cs2_hamming_window_1a41281794f2587c56ed52459fe0a106a2">operator()</reimplementedby>
        <reimplementedby refid="classtsa_1_1_tukey_hann_window_1a2a10c0c94b2c5ebbc1db201371074295">operator()</reimplementedby>
        <reimplementedby refid="classtsa_1_1_kaiser_window_1a02d18a272d16d54fa4f7c9e8b227356e">operator()</reimplementedby>
        <reimplementedby refid="classtsa_1_1_welch_window_1a4a3b7999c9d75b916d682dc0f94c87db">operator()</reimplementedby>
        <reimplementedby refid="classtsa_1_1_tukey_window_1a3a68173adce5cbbebefbadb0d7084847">operator()</reimplementedby>
        <param>
          <type><ref refid="namespacetsa_1ac599574bcc094eda25613724b8f3ca9e" kindref="member">SeqViewDouble</ref> &amp;</type>
          <declname>v1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/BaseWindow.hpp" line="97" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/src/BaseWindow.cpp" bodystart="14" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="classtsa_1_1_base_window_1afda50daa943527e09792b06e5ba69bcb" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void tsa::BaseWindow::operator()</definition>
        <argsstring>(SeqViewDouble &amp;v1, SeqViewDouble &amp;v2)</argsstring>
        <name>operator()</name>
        <reimplementedby refid="classtsa_1_1_bartlett_window_1a44d722552ca5281e28a28eadbed2099e">operator()</reimplementedby>
        <reimplementedby refid="classtsa_1_1_bisquare_window_1a18002b225ed630af739a983da72a4006">operator()</reimplementedby>
        <reimplementedby refid="classtsa_1_1_cs2_hann_window_1adc0b74ee1e5173f5de7f86cf714fe47f">operator()</reimplementedby>
        <reimplementedby refid="classtsa_1_1_cs2_hamming_window_1a98046f7488d9126a9041b16852491dd9">operator()</reimplementedby>
        <reimplementedby refid="classtsa_1_1_tukey_hann_window_1af889453b564781f9eca6993f2fd95646">operator()</reimplementedby>
        <reimplementedby refid="classtsa_1_1_kaiser_window_1a94b99f1c961eadad783e44ccce9629e7">operator()</reimplementedby>
        <reimplementedby refid="classtsa_1_1_welch_window_1af6d14e181526f94d8ad6f1a2176db98a">operator()</reimplementedby>
        <reimplementedby refid="classtsa_1_1_tukey_window_1ad38a8c9b6fa12b65d3f7c7b37f4b19a8">operator()</reimplementedby>
        <param>
          <type><ref refid="namespacetsa_1ac599574bcc094eda25613724b8f3ca9e" kindref="member">SeqViewDouble</ref> &amp;</type>
          <declname>v1</declname>
        </param>
        <param>
          <type><ref refid="namespacetsa_1ac599574bcc094eda25613724b8f3ca9e" kindref="member">SeqViewDouble</ref> &amp;</type>
          <declname>v2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/BaseWindow.hpp" line="99" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/src/BaseWindow.cpp" bodystart="18" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="classtsa_1_1_base_window_1a15647cb85344c7e82ecde50675b07efd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tsa::BaseWindow::execute</definition>
        <argsstring>(Dmatrix &amp;in, Dmatrix &amp;out)</argsstring>
        <name>execute</name>
        <param>
          <type><ref refid="namespacetsa_1ad260cd21c1891c4ed391fe788569aba4" kindref="member">Dmatrix</ref> &amp;</type>
          <declname>in</declname>
        </param>
        <param>
          <type><ref refid="namespacetsa_1ad260cd21c1891c4ed391fe788569aba4" kindref="member">Dmatrix</ref> &amp;</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Apply the window to each row of the input data matrix, writing the result on the output data matrix.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>input matrix of data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>output matrix of data </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/BaseWindow.hpp" line="109" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/src/BaseWindow.cpp" bodystart="22" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="classtsa_1_1_base_window_1a7e4b5f7d87bbe397332b4e506b0681c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tsa::BaseWindow::execute</definition>
        <argsstring>(Dmatrix &amp;in, Dmatrix &amp;out, unsigned int offset)</argsstring>
        <name>execute</name>
        <param>
          <type><ref refid="namespacetsa_1ad260cd21c1891c4ed391fe788569aba4" kindref="member">Dmatrix</ref> &amp;</type>
          <declname>in</declname>
        </param>
        <param>
          <type><ref refid="namespacetsa_1ad260cd21c1891c4ed391fe788569aba4" kindref="member">Dmatrix</ref> &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/BaseWindow.hpp" line="111" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/src/BaseWindow.cpp" bodystart="31" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="classtsa_1_1_base_window_1a34b933da998ba8137d0e0def7514d2cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tsa::BaseWindow::execute</definition>
        <argsstring>(Dmatrix &amp;inout)</argsstring>
        <name>execute</name>
        <param>
          <type><ref refid="namespacetsa_1ad260cd21c1891c4ed391fe788569aba4" kindref="member">Dmatrix</ref> &amp;</type>
          <declname>inout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Apply the window to each row of the data matrix, writing the result on the matrix itself.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inout</parametername>
</parameternamelist>
<parameterdescription>
<para>data matrix </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/BaseWindow.hpp" line="120" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/src/BaseWindow.cpp" bodystart="40" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="classtsa_1_1_base_window_1abadd3d1ef579310ab440a70d77e1d46d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tsa::BaseWindow::execute</definition>
        <argsstring>(Dvector &amp;inout)</argsstring>
        <name>execute</name>
        <param>
          <type><ref refid="namespacetsa_1a8900fb03d849baf447a1a0efe2561fb2" kindref="member">Dvector</ref> &amp;</type>
          <declname>inout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/BaseWindow.hpp" line="122" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/src/BaseWindow.cpp" bodystart="49" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classtsa_1_1_base_window_1ab9dc5e39e09701b60b9e160837f059df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double tsa::BaseWindow::operator()</definition>
        <argsstring>(int i)</argsstring>
        <name>operator()</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the value of the window at a given index.</para><para><simplesect kind="return"><para>the value of the window at the given plage </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/BaseWindow.hpp" line="130" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/src/BaseWindow.cpp" bodystart="55" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classtsa_1_1_base_window_1a8a2a3425f2915762d50fa57dd0e04f22" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void tsa::BaseWindow::Resize</definition>
        <argsstring>(unsigned int size)</argsstring>
        <name>Resize</name>
        <reimplementedby refid="classtsa_1_1_bartlett_window_1af63f6fdd7e2a10d77db1c7363e9963f5">Resize</reimplementedby>
        <reimplementedby refid="classtsa_1_1_bisquare_window_1a0970518373e007e0fdd95701ff744c6f">Resize</reimplementedby>
        <reimplementedby refid="classtsa_1_1_cs2_hann_window_1a540187b8c32000d00d3023e8f8418264">Resize</reimplementedby>
        <reimplementedby refid="classtsa_1_1_cs2_hamming_window_1aa455906419c91055a59da8381c3a7588">Resize</reimplementedby>
        <reimplementedby refid="classtsa_1_1_tukey_hann_window_1a253c1786cef6ec7b5e7ef700f4238496">Resize</reimplementedby>
        <reimplementedby refid="classtsa_1_1_welch_window_1a5ad861714524733e648660d817e219d6">Resize</reimplementedby>
        <reimplementedby refid="classtsa_1_1_kaiser_window_1ae573c5ab979c3292d10feddc5180b6b4">Resize</reimplementedby>
        <reimplementedby refid="classtsa_1_1_tukey_window_1acfb62239e47e5faa44210407c7c7f42f">Resize</reimplementedby>
        <param>
          <type>unsigned int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Resize the window dimension.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>new size for the window </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/BaseWindow.hpp" line="137" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/src/BaseWindow.cpp" bodystart="59" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="classtsa_1_1_base_window_1a4bd3edc44a56103ac3f9112a55a10420" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double tsa::BaseWindow::CrossAverage</definition>
        <argsstring>(BaseWindow &amp;w1, BaseWindow &amp;w2)</argsstring>
        <name>CrossAverage</name>
        <param>
          <type><ref refid="classtsa_1_1_base_window" kindref="compound">BaseWindow</ref> &amp;</type>
          <declname>w1</declname>
        </param>
        <param>
          <type><ref refid="classtsa_1_1_base_window" kindref="compound">BaseWindow</ref> &amp;</type>
          <declname>w2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/BaseWindow.hpp" line="92" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/src/BaseWindow.cpp" bodystart="83" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="classtsa_1_1_base_window_1a31f86887f9ccbddd97bdca903c506606" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double tsa::BaseWindow::CrossSquareAverage</definition>
        <argsstring>(BaseWindow &amp;w1, BaseWindow &amp;w2)</argsstring>
        <name>CrossSquareAverage</name>
        <param>
          <type><ref refid="classtsa_1_1_base_window" kindref="compound">BaseWindow</ref> &amp;</type>
          <declname>w1</declname>
        </param>
        <param>
          <type><ref refid="classtsa_1_1_base_window" kindref="compound">BaseWindow</ref> &amp;</type>
          <declname>w2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/BaseWindow.hpp" line="94" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/src/BaseWindow.cpp" bodystart="106" bodyend="127"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Getters</header>
      <memberdef kind="function" id="classtsa_1_1_base_window_1af3e45daf0401f06108c6634344532af8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int tsa::BaseWindow::GetSize</definition>
        <argsstring>()</argsstring>
        <name>GetSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the actual size of the window.</para><para><simplesect kind="return"><para>the actual size of the window </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/BaseWindow.hpp" line="152" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/src/BaseWindow.cpp" bodystart="64" bodyend="66"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classtsa_1_1_base_window_1a182b397ac3f3c409bfcb3a39d9c1575a" prot="protected" static="no" mutable="no">
        <type><ref refid="namespacetsa_1a8900fb03d849baf447a1a0efe2561fb2" kindref="member">Dvector</ref></type>
        <definition>Dvector tsa::BaseWindow::mWindow</definition>
        <argsstring></argsstring>
        <name>mWindow</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Window data </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/BaseWindow.hpp" line="179" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/BaseWindow.hpp" bodystart="179" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtsa_1_1_base_window_1aea4dee45722299896913859d7b899d6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tsa::BaseWindow::BaseWindow</definition>
        <argsstring>(unsigned int size)</argsstring>
        <name>BaseWindow</name>
        <param>
          <type>unsigned int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/BaseWindow.hpp" line="80" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/src/BaseWindow.cpp" bodystart="5" bodyend="8"/>
      </memberdef>
      <memberdef kind="function" id="classtsa_1_1_base_window_1a0e99ffa3d84e8c7a05f7de437bfd6241" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>tsa::BaseWindow::~BaseWindow</definition>
        <argsstring>()</argsstring>
        <name>~BaseWindow</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destructor </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/BaseWindow.hpp" line="85" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/src/BaseWindow.cpp" bodystart="10" bodyend="12"/>
      </memberdef>
      <memberdef kind="function" id="classtsa_1_1_base_window_1ad6681a5cb29414a97af6be1ea7805a81" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void tsa::BaseWindow::Normalize</definition>
        <argsstring>()</argsstring>
        <name>Normalize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/BaseWindow.hpp" line="163" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/src/BaseWindow.cpp" bodystart="71" bodyend="81"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classtsa_1_1_base_window_1aa74b29105d94caa521d308198e8e6643" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void tsa::BaseWindow::FillWindow</definition>
        <argsstring>()</argsstring>
        <name>FillWindow</name>
        <reimplementedby refid="classtsa_1_1_bartlett_window_1afb3c6c8aa249db673da8dd625ffbb8a5">FillWindow</reimplementedby>
        <reimplementedby refid="classtsa_1_1_bisquare_window_1a62ab3bab83dd4dd77090c7c49be24acb">FillWindow</reimplementedby>
        <reimplementedby refid="classtsa_1_1_cs2_hann_window_1a0da151916492d8ab9504ee40872131a2">FillWindow</reimplementedby>
        <reimplementedby refid="classtsa_1_1_tukey_hann_window_1a041a98810aa841fd88d19139bf0e977f">FillWindow</reimplementedby>
        <reimplementedby refid="classtsa_1_1_welch_window_1aa5dd01231aa4a33fb43473209a679309">FillWindow</reimplementedby>
        <reimplementedby refid="classtsa_1_1_cs2_hamming_window_1a269a092db403a2bd7bb93456dc39be60">FillWindow</reimplementedby>
        <reimplementedby refid="classtsa_1_1_kaiser_window_1a4799ed39290a058eea9d44df73f764ea">FillWindow</reimplementedby>
        <reimplementedby refid="classtsa_1_1_tukey_window_1a9c44b527df2c303511322face00a5d33">FillWindow</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initialize the window with the correct values, given its actual size. This is a pure virtual function, which is redefined by each window class. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/BaseWindow.hpp" line="172" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/src/BaseWindow.cpp" bodystart="68" bodyend="69"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Base class for various windowing algorithms. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="145">
        <label>tsa::WelchWindow</label>
        <link refid="classtsa_1_1_welch_window"/>
        <childnode refid="136" relation="public-inheritance">
        </childnode>
      </node>
      <node id="136">
        <label>tsa::BaseWindow</label>
        <link refid="classtsa_1_1_base_window"/>
        <childnode refid="137" relation="public-inheritance">
        </childnode>
      </node>
      <node id="144">
        <label>tsa::TukeyWindow</label>
        <link refid="classtsa_1_1_tukey_window"/>
        <childnode refid="136" relation="public-inheritance">
        </childnode>
      </node>
      <node id="139">
        <label>tsa::BisquareWindow</label>
        <link refid="classtsa_1_1_bisquare_window"/>
        <childnode refid="136" relation="public-inheritance">
        </childnode>
      </node>
      <node id="141">
        <label>tsa::Cs2HannWindow</label>
        <link refid="classtsa_1_1_cs2_hann_window"/>
        <childnode refid="136" relation="public-inheritance">
        </childnode>
      </node>
      <node id="138">
        <label>tsa::BartlettWindow</label>
        <link refid="classtsa_1_1_bartlett_window"/>
        <childnode refid="136" relation="public-inheritance">
        </childnode>
      </node>
      <node id="143">
        <label>tsa::TukeyHannWindow</label>
        <link refid="classtsa_1_1_tukey_hann_window"/>
        <childnode refid="136" relation="public-inheritance">
        </childnode>
      </node>
      <node id="142">
        <label>tsa::KaiserWindow</label>
        <link refid="classtsa_1_1_kaiser_window"/>
        <childnode refid="136" relation="public-inheritance">
        </childnode>
      </node>
      <node id="137">
        <label>tsa::AlgoBase</label>
        <link refid="classtsa_1_1_algo_base"/>
      </node>
      <node id="140">
        <label>tsa::Cs2HammingWindow</label>
        <link refid="classtsa_1_1_cs2_hamming_window"/>
        <childnode refid="136" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="146">
        <label>tsa::BaseWindow</label>
        <link refid="classtsa_1_1_base_window"/>
        <childnode refid="147" relation="public-inheritance">
        </childnode>
      </node>
      <node id="147">
        <label>tsa::AlgoBase</label>
        <link refid="classtsa_1_1_algo_base"/>
      </node>
    </collaborationgraph>
    <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/BaseWindow.hpp" line="74" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/BaseWindow.hpp" bodystart="74" bodyend="185"/>
    <listofallmembers>
      <member refid="classtsa_1_1_base_window_1aea4dee45722299896913859d7b899d6f" prot="public" virt="non-virtual"><scope>tsa::BaseWindow</scope><name>BaseWindow</name></member>
      <member refid="classtsa_1_1_base_window_1a4bd3edc44a56103ac3f9112a55a10420" prot="public" virt="non-virtual"><scope>tsa::BaseWindow</scope><name>CrossAverage</name></member>
      <member refid="classtsa_1_1_base_window_1a31f86887f9ccbddd97bdca903c506606" prot="public" virt="non-virtual"><scope>tsa::BaseWindow</scope><name>CrossSquareAverage</name></member>
      <member refid="classtsa_1_1_base_window_1a15647cb85344c7e82ecde50675b07efd" prot="public" virt="non-virtual"><scope>tsa::BaseWindow</scope><name>execute</name></member>
      <member refid="classtsa_1_1_base_window_1a7e4b5f7d87bbe397332b4e506b0681c2" prot="public" virt="non-virtual"><scope>tsa::BaseWindow</scope><name>execute</name></member>
      <member refid="classtsa_1_1_base_window_1a34b933da998ba8137d0e0def7514d2cb" prot="public" virt="non-virtual"><scope>tsa::BaseWindow</scope><name>execute</name></member>
      <member refid="classtsa_1_1_base_window_1abadd3d1ef579310ab440a70d77e1d46d" prot="public" virt="non-virtual"><scope>tsa::BaseWindow</scope><name>execute</name></member>
      <member refid="classtsa_1_1_base_window_1aa74b29105d94caa521d308198e8e6643" prot="protected" virt="virtual"><scope>tsa::BaseWindow</scope><name>FillWindow</name></member>
      <member refid="classtsa_1_1_base_window_1af3e45daf0401f06108c6634344532af8" prot="public" virt="non-virtual"><scope>tsa::BaseWindow</scope><name>GetSize</name></member>
      <member refid="classtsa_1_1_base_window_1a182b397ac3f3c409bfcb3a39d9c1575a" prot="protected" virt="non-virtual"><scope>tsa::BaseWindow</scope><name>mWindow</name></member>
      <member refid="classtsa_1_1_base_window_1ad6681a5cb29414a97af6be1ea7805a81" prot="public" virt="virtual"><scope>tsa::BaseWindow</scope><name>Normalize</name></member>
      <member refid="classtsa_1_1_base_window_1a05d9edb95dc01840a1b2df78dfa3a8c1" prot="public" virt="virtual"><scope>tsa::BaseWindow</scope><name>operator()</name></member>
      <member refid="classtsa_1_1_base_window_1afda50daa943527e09792b06e5ba69bcb" prot="public" virt="virtual"><scope>tsa::BaseWindow</scope><name>operator()</name></member>
      <member refid="classtsa_1_1_base_window_1ab9dc5e39e09701b60b9e160837f059df" prot="public" virt="non-virtual"><scope>tsa::BaseWindow</scope><name>operator()</name></member>
      <member refid="classtsa_1_1_base_window_1a8a2a3425f2915762d50fa57dd0e04f22" prot="public" virt="virtual"><scope>tsa::BaseWindow</scope><name>Resize</name></member>
      <member refid="classtsa_1_1_base_window_1a0e99ffa3d84e8c7a05f7de437bfd6241" prot="public" virt="virtual"><scope>tsa::BaseWindow</scope><name>~BaseWindow</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
