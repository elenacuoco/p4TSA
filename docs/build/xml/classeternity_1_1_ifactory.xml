<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classeternity_1_1_ifactory" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>eternity::Ifactory</compoundname>
    <derivedcompoundref refid="classeternity_1_1factory" prot="public" virt="non-virtual">eternity::factory&lt; t &gt;</derivedcompoundref>
    <includes refid="dynamic_8hpp" local="no">dynamic.hpp</includes>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classeternity_1_1_ifactory_1a106788b385d5f378cb75bfb8f0296525" prot="public" static="yes" mutable="no">
        <type><ref refid="classeternity_1_1_ifactory" kindref="compound">Ifactory</ref> *</type>
        <definition>Ifactory * eternity::Ifactory::m_pHead</definition>
        <argsstring></argsstring>
        <name>m_pHead</name>
        <initializer>= 0</initializer>
        <briefdescription>
<para>The fist object in global factory&lt;t&gt; list. </para>        </briefdescription>
        <detaileddescription>
<para>All instancied factory&lt;t&gt; are collect inside an unique global list. m_pHead is the head of that list. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/dynamic.hpp" line="47" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/dynamic.hpp" bodystart="40" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classeternity_1_1_ifactory_1a6749c6d3f8aea62a3084c0825f0687c5" prot="public" static="no" mutable="no">
        <type><ref refid="classeternity_1_1_ifactory" kindref="compound">Ifactory</ref> *</type>
        <definition>Ifactory* eternity::Ifactory::m_pNext</definition>
        <argsstring></argsstring>
        <name>m_pNext</name>
        <briefdescription>
<para>The next item in global factory&lt;t&gt; list. </para>        </briefdescription>
        <detaileddescription>
<para>Each item in the gloabl list of factory&lt;t&gt; object has a pointer to the next item named m_pNext. The last element has a NULL value inside m_pNext. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/dynamic.hpp" line="55" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/dynamic.hpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classeternity_1_1_ifactory_1a5bcc4b3255bd1030562e0e554ece0a05" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual eternity::Ifactory::~Ifactory</definition>
        <argsstring>()</argsstring>
        <name>~Ifactory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/dynamic.hpp" line="39" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/dynamic.hpp" bodystart="39" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="classeternity_1_1_ifactory_1afaca5a9abf52fa3a731c3dfed7cb73b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void *</type>
        <definition>virtual void* eternity::Ifactory::create</definition>
        <argsstring>(std::string &amp;class_name)=0</argsstring>
        <name>create</name>
        <reimplementedby refid="classeternity_1_1factory_1a08c1c494bc749955f9b0767d31933c2b">create</reimplementedby>
        <param>
          <type>std::string &amp;</type>
          <declname>class_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The signature of create method for derived classes. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/dynamic.hpp" line="59" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classeternity_1_1_ifactory_1a6c2afa73d61aaa81233ab1216c508252" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>std::string</type>
        <definition>virtual std::string eternity::Ifactory::get_conventional_name</definition>
        <argsstring>(std::string &amp;compiler_name)=0</argsstring>
        <name>get_conventional_name</name>
        <reimplementedby refid="classeternity_1_1factory_1a0b7c7bc194b178379eb1b880f87d3b48">get_conventional_name</reimplementedby>
        <param>
          <type>std::string &amp;</type>
          <declname>compiler_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The signature of get_conventional_name method for derived classes. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/dynamic.hpp" line="63" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><ref refid="classeternity_1_1_ifactory" kindref="compound">Ifactory</ref> is the base abstract class design to manage in the same way all template classes factory&lt;t&gt;. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="285">
        <label>eternity::Ifactory</label>
        <link refid="classeternity_1_1_ifactory"/>
      </node>
      <node id="286">
        <label>eternity::factory&lt; t &gt;</label>
        <link refid="classeternity_1_1factory"/>
        <childnode refid="285" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="287">
        <label>eternity::Ifactory</label>
        <link refid="classeternity_1_1_ifactory"/>
        <childnode refid="287" relation="usage">
          <edgelabel>m_pHead</edgelabel>
          <edgelabel>m_pNext</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/dynamic.hpp" line="36" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/dynamic.hpp" bodystart="36" bodyend="64"/>
    <listofallmembers>
      <member refid="classeternity_1_1_ifactory_1afaca5a9abf52fa3a731c3dfed7cb73b3" prot="public" virt="pure-virtual"><scope>eternity::Ifactory</scope><name>create</name></member>
      <member refid="classeternity_1_1_ifactory_1a6c2afa73d61aaa81233ab1216c508252" prot="public" virt="pure-virtual"><scope>eternity::Ifactory</scope><name>get_conventional_name</name></member>
      <member refid="classeternity_1_1_ifactory_1a106788b385d5f378cb75bfb8f0296525" prot="public" virt="non-virtual"><scope>eternity::Ifactory</scope><name>m_pHead</name></member>
      <member refid="classeternity_1_1_ifactory_1a6749c6d3f8aea62a3084c0825f0687c5" prot="public" virt="non-virtual"><scope>eternity::Ifactory</scope><name>m_pNext</name></member>
      <member refid="classeternity_1_1_ifactory_1a5bcc4b3255bd1030562e0e554ece0a05" prot="public" virt="virtual"><scope>eternity::Ifactory</scope><name>~Ifactory</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
