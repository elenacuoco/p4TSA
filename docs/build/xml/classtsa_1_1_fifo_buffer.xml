<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classtsa_1_1_fifo_buffer" kind="class" language="C++" prot="public">
    <compoundname>tsa::FifoBuffer</compoundname>
    <includes refid="_fifo_buffer_8hpp" local="no">FifoBuffer.hpp</includes>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <memberdef kind="function" id="classtsa_1_1_fifo_buffer_1ab70c4b3ba1a5356ab5384cd7f8638b0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tsa::FifoBuffer::AddPoints</definition>
        <argsstring>(Dmatrix &amp;data, double scale, int n=0, int offset=0)</argsstring>
        <name>AddPoints</name>
        <param>
          <type><ref refid="namespacetsa_1ad260cd21c1891c4ed391fe788569aba4" kindref="member">Dmatrix</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>double</type>
          <declname>scale</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>offset</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Insert in the back of the buffer n data contained in a matrix, starting from a given offset. If n = 0 (default) all the data starting from the offset are copied.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>the matrix containing the data that must be inserted in the buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of data to insert </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>the offset of the data to insert </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/FifoBuffer.hpp" line="135" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/src/FifoBuffer.cpp" bodystart="72" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classtsa_1_1_fifo_buffer_1a7058127e3d126d9d6f434d3bf386c59b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tsa::FifoBuffer::AddPoint</definition>
        <argsstring>(Dvector &amp;data, double scale)</argsstring>
        <name>AddPoint</name>
        <param>
          <type><ref refid="namespacetsa_1a8900fb03d849baf447a1a0efe2561fb2" kindref="member">Dvector</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>double</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Insert in the back of the buffer a single data contained in a vector</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>the vector containing the data that must be inserted in the buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>scale</parametername>
</parameternamelist>
<parameterdescription>
<para>the scale of the data </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/FifoBuffer.hpp" line="143" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/src/FifoBuffer.cpp" bodystart="57" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classtsa_1_1_fifo_buffer_1a5cec8568b62047b4fb5b19c3fb44d28b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tsa::FifoBuffer::AddPoint</definition>
        <argsstring>()</argsstring>
        <name>AddPoint</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Insert in the back of the buffer a single uninitialized data </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/FifoBuffer.hpp" line="149" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/src/FifoBuffer.cpp" bodystart="48" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classtsa_1_1_fifo_buffer_1a4a799676b78f5bc80d48db4fe7d64853" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double &amp;</type>
        <definition>double&amp; tsa::FifoBuffer::Back</definition>
        <argsstring>(unsigned int i)</argsstring>
        <name>Back</name>
        <param>
          <type>unsigned int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Access to the last inserted data</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>the index inside the last inserted data</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>reference to the last inserted data </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/FifoBuffer.hpp" line="158" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/FifoBuffer.hpp" bodystart="158" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="classtsa_1_1_fifo_buffer_1a17acb27e83ab4af3667974660b58cb4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tsa::FifoBuffer::DelPoints</definition>
        <argsstring>(int n)</argsstring>
        <name>DelPoints</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Delete some data from the front of the buffer.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>number of data to delete </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/FifoBuffer.hpp" line="168" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/src/FifoBuffer.cpp" bodystart="93" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="classtsa_1_1_fifo_buffer_1a7c14d2ae86c581d1ccc427dccb3f1213" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int tsa::FifoBuffer::Size</definition>
        <argsstring>()</argsstring>
        <name>Size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the present size of the buffer.</para><para><simplesect kind="return"><para>the size of the buffer </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/FifoBuffer.hpp" line="176" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/FifoBuffer.hpp" bodystart="176" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="classtsa_1_1_fifo_buffer_1a78f313804a23e61fa57329b6a1f3df02" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double &amp;</type>
        <definition>double&amp; tsa::FifoBuffer::operator()</definition>
        <argsstring>(int r, int c)</argsstring>
        <name>operator()</name>
        <param>
          <type>int</type>
          <declname>r</declname>
        </param>
        <param>
          <type>int</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Access to the buffer data.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>buffer row </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>buffer column</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the data </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/FifoBuffer.hpp" line="188" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/FifoBuffer.hpp" bodystart="188" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="classtsa_1_1_fifo_buffer_1a597548e1842c157dfe1ade0f9e5cd121" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tsa::FifoBuffer::Load</definition>
        <argsstring>(const char *filename, const char *fmt=&quot;txt&quot;)</argsstring>
        <name>Load</name>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
          <defval>&quot;txt&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/FifoBuffer.hpp" line="192" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/FifoBuffer.hpp" bodystart="192" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="classtsa_1_1_fifo_buffer_1aeb760c1c71644dc850395b838e47bcfb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tsa::FifoBuffer::Save</definition>
        <argsstring>(const char *filename, const char *fmt=&quot;txt&quot;)</argsstring>
        <name>Save</name>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
          <defval>&quot;txt&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/FifoBuffer.hpp" line="199" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/FifoBuffer.hpp" bodystart="199" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="classtsa_1_1_fifo_buffer_1a8ad8bf7c3935bf645b6cda8be7de441a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tsa::FifoBuffer::xml_serialize</definition>
        <argsstring>(eternity::xml_archive &amp;xml, const char *prefix)</argsstring>
        <name>xml_serialize</name>
        <param>
          <type><ref refid="classeternity_1_1xml__archive" kindref="compound">eternity::xml_archive</ref> &amp;</type>
          <declname>xml</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>prefix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/FifoBuffer.hpp" line="206" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/FifoBuffer.hpp" bodystart="206" bodyend="233"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classtsa_1_1_fifo_buffer_1add6db36d6910a8b1efba4b2439f4b9c5" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int tsa::FifoBuffer::mChannels</definition>
        <argsstring></argsstring>
        <name>mChannels</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Number of channels to resample </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/FifoBuffer.hpp" line="266" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/FifoBuffer.hpp" bodystart="266" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtsa_1_1_fifo_buffer_1a538034e48a1c598fbbde1fefb9e92f91" prot="private" static="no" mutable="no">
        <type>std::queue&lt; <ref refid="namespacetsa_1a8900fb03d849baf447a1a0efe2561fb2" kindref="member">Dvector</ref> * &gt;</type>
        <definition>std::queue&lt;Dvector*&gt; tsa::FifoBuffer::mRepository</definition>
        <argsstring></argsstring>
        <name>mRepository</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Repository for unused data points </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/FifoBuffer.hpp" line="267" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/FifoBuffer.hpp" bodystart="267" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtsa_1_1_fifo_buffer_1aa8039b60b66e4e6bedd661352fff095f" prot="private" static="no" mutable="no">
        <type>std::deque&lt; <ref refid="namespacetsa_1a8900fb03d849baf447a1a0efe2561fb2" kindref="member">Dvector</ref> * &gt;</type>
        <definition>std::deque&lt;Dvector*&gt; tsa::FifoBuffer::mBuffer</definition>
        <argsstring></argsstring>
        <name>mBuffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Buffer for incoming data points </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/FifoBuffer.hpp" line="268" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/FifoBuffer.hpp" bodystart="268" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtsa_1_1_fifo_buffer_1ad30fe947e5c2b34614859cbf12d749f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tsa::FifoBuffer::FifoBuffer</definition>
        <argsstring>(unsigned int channels)</argsstring>
        <name>FifoBuffer</name>
        <param>
          <type>unsigned int</type>
          <declname>channels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channels</parametername>
</parameternamelist>
<parameterdescription>
<para>number of channels </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/FifoBuffer.hpp" line="85" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/src/FifoBuffer.cpp" bodystart="5" bodyend="10"/>
      </memberdef>
      <memberdef kind="function" id="classtsa_1_1_fifo_buffer_1ac6a76ca0fd208c80de6e4e04d5c43173" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tsa::FifoBuffer::FifoBuffer</definition>
        <argsstring>(const FifoBuffer &amp;from)</argsstring>
        <name>FifoBuffer</name>
        <param>
          <type>const <ref refid="classtsa_1_1_fifo_buffer" kindref="compound">FifoBuffer</ref> &amp;</type>
          <declname>from</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy constructor</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>from</parametername>
</parameternamelist>
<parameterdescription>
<para>The instance that must be copied </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/FifoBuffer.hpp" line="93" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/src/FifoBuffer.cpp" bodystart="12" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="classtsa_1_1_fifo_buffer_1ad7bec7c4fc528a12763f29c8f6a8e460" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tsa::FifoBuffer::~FifoBuffer</definition>
        <argsstring>()</argsstring>
        <name>~FifoBuffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destructor </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/FifoBuffer.hpp" line="98" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/src/FifoBuffer.cpp" bodystart="18" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="classtsa_1_1_fifo_buffer_1ad3c89a0f4aa3e475e136ec8c47f2165e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtsa_1_1_fifo_buffer" kindref="compound">FifoBuffer</ref> &amp;</type>
        <definition>FifoBuffer &amp; tsa::FifoBuffer::operator=</definition>
        <argsstring>(const FifoBuffer &amp;from)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classtsa_1_1_fifo_buffer" kindref="compound">FifoBuffer</ref> &amp;</type>
          <declname>from</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Assignement operator</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>from</parametername>
</parameternamelist>
<parameterdescription>
<para>The instance to be assigned from</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a reference to a new object </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/FifoBuffer.hpp" line="107" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/src/FifoBuffer.cpp" bodystart="31" bodyend="46"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Band limited interpolation. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/FifoBuffer.hpp" line="76" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/FifoBuffer.hpp" bodystart="76" bodyend="273"/>
    <listofallmembers>
      <member refid="classtsa_1_1_fifo_buffer_1a7058127e3d126d9d6f434d3bf386c59b" prot="public" virt="non-virtual"><scope>tsa::FifoBuffer</scope><name>AddPoint</name></member>
      <member refid="classtsa_1_1_fifo_buffer_1a5cec8568b62047b4fb5b19c3fb44d28b" prot="public" virt="non-virtual"><scope>tsa::FifoBuffer</scope><name>AddPoint</name></member>
      <member refid="classtsa_1_1_fifo_buffer_1ab70c4b3ba1a5356ab5384cd7f8638b0d" prot="public" virt="non-virtual"><scope>tsa::FifoBuffer</scope><name>AddPoints</name></member>
      <member refid="classtsa_1_1_fifo_buffer_1a4a799676b78f5bc80d48db4fe7d64853" prot="public" virt="non-virtual"><scope>tsa::FifoBuffer</scope><name>Back</name></member>
      <member refid="classtsa_1_1_fifo_buffer_1a17acb27e83ab4af3667974660b58cb4e" prot="public" virt="non-virtual"><scope>tsa::FifoBuffer</scope><name>DelPoints</name></member>
      <member refid="classtsa_1_1_fifo_buffer_1ad30fe947e5c2b34614859cbf12d749f1" prot="public" virt="non-virtual"><scope>tsa::FifoBuffer</scope><name>FifoBuffer</name></member>
      <member refid="classtsa_1_1_fifo_buffer_1ac6a76ca0fd208c80de6e4e04d5c43173" prot="public" virt="non-virtual"><scope>tsa::FifoBuffer</scope><name>FifoBuffer</name></member>
      <member refid="classtsa_1_1_fifo_buffer_1a597548e1842c157dfe1ade0f9e5cd121" prot="public" virt="non-virtual"><scope>tsa::FifoBuffer</scope><name>Load</name></member>
      <member refid="classtsa_1_1_fifo_buffer_1aa8039b60b66e4e6bedd661352fff095f" prot="private" virt="non-virtual"><scope>tsa::FifoBuffer</scope><name>mBuffer</name></member>
      <member refid="classtsa_1_1_fifo_buffer_1add6db36d6910a8b1efba4b2439f4b9c5" prot="private" virt="non-virtual"><scope>tsa::FifoBuffer</scope><name>mChannels</name></member>
      <member refid="classtsa_1_1_fifo_buffer_1a538034e48a1c598fbbde1fefb9e92f91" prot="private" virt="non-virtual"><scope>tsa::FifoBuffer</scope><name>mRepository</name></member>
      <member refid="classtsa_1_1_fifo_buffer_1a78f313804a23e61fa57329b6a1f3df02" prot="public" virt="non-virtual"><scope>tsa::FifoBuffer</scope><name>operator()</name></member>
      <member refid="classtsa_1_1_fifo_buffer_1ad3c89a0f4aa3e475e136ec8c47f2165e" prot="public" virt="non-virtual"><scope>tsa::FifoBuffer</scope><name>operator=</name></member>
      <member refid="classtsa_1_1_fifo_buffer_1aeb760c1c71644dc850395b838e47bcfb" prot="public" virt="non-virtual"><scope>tsa::FifoBuffer</scope><name>Save</name></member>
      <member refid="classtsa_1_1_fifo_buffer_1a7c14d2ae86c581d1ccc427dccb3f1213" prot="public" virt="non-virtual"><scope>tsa::FifoBuffer</scope><name>Size</name></member>
      <member refid="classtsa_1_1_fifo_buffer_1a8ad8bf7c3935bf645b6cda8be7de441a" prot="public" virt="non-virtual"><scope>tsa::FifoBuffer</scope><name>xml_serialize</name></member>
      <member refid="classtsa_1_1_fifo_buffer_1ad7bec7c4fc528a12763f29c8f6a8e460" prot="public" virt="non-virtual"><scope>tsa::FifoBuffer</scope><name>~FifoBuffer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
