<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classtsa_1_1_base_f_f_t" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>tsa::BaseFFT</compoundname>
    <basecompoundref refid="classtsa_1_1_algo_base" prot="public" virt="non-virtual">tsa::AlgoBase</basecompoundref>
    <derivedcompoundref refid="classtsa_1_1_complex_f_f_t" prot="public" virt="non-virtual">tsa::ComplexFFT</derivedcompoundref>
    <derivedcompoundref refid="classtsa_1_1_d_c_t" prot="public" virt="non-virtual">tsa::DCT</derivedcompoundref>
    <derivedcompoundref refid="classtsa_1_1_d_s_t" prot="public" virt="non-virtual">tsa::DST</derivedcompoundref>
    <derivedcompoundref refid="classtsa_1_1_i_d_c_t" prot="public" virt="non-virtual">tsa::IDCT</derivedcompoundref>
    <derivedcompoundref refid="classtsa_1_1_inverse_real_f_f_t" prot="public" virt="non-virtual">tsa::InverseRealFFT</derivedcompoundref>
    <derivedcompoundref refid="classtsa_1_1_real_f_f_t" prot="public" virt="non-virtual">tsa::RealFFT</derivedcompoundref>
    <includes refid="_base_f_f_t_8hpp" local="no">BaseFFT.hpp</includes>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <memberdef kind="function" id="classtsa_1_1_base_f_f_t_1a9af0c36413173821cac8dbdce9cfe3b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void tsa::BaseFFT::MakePlan</definition>
        <argsstring>()=0</argsstring>
        <name>MakePlan</name>
        <reimplementedby refid="classtsa_1_1_complex_f_f_t_1a05acda3ab3fbb2ead70421e587cdd210">MakePlan</reimplementedby>
        <reimplementedby refid="classtsa_1_1_i_d_c_t_1a3add06359e79507105820496b324ad7a">MakePlan</reimplementedby>
        <reimplementedby refid="classtsa_1_1_d_s_t_1a066a93f3ddbf56f8e5c67067156ebb9a">MakePlan</reimplementedby>
        <reimplementedby refid="classtsa_1_1_d_c_t_1a2d24c07a7b3f96b16056eee1ab9bad89">MakePlan</reimplementedby>
        <reimplementedby refid="classtsa_1_1_inverse_real_f_f_t_1ae5b45701f989efce89c6c336ec78c189">MakePlan</reimplementedby>
        <reimplementedby refid="classtsa_1_1_real_f_f_t_1a6684b1abf6f9de2d7c546c3556ef0a0e">MakePlan</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Make a new plan, with the current parameters. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/BaseFFT.hpp" line="173" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtsa_1_1_base_f_f_t_1a1f5332f508749018f0c6a58c9b1ed9dc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void tsa::BaseFFT::SaveWisdomOnFile</definition>
        <argsstring>(std::string filename)</argsstring>
        <name>SaveWisdomOnFile</name>
        <param>
          <type>std::string</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Save the actual wisdom for plan generation on a file</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the file </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/BaseFFT.hpp" line="138" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/BaseFFT.hpp" bodystart="138" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="classtsa_1_1_base_f_f_t_1a53ccc1ae425bb9f91adbd5562ecb9131" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void tsa::BaseFFT::LoadWisdomFromFile</definition>
        <argsstring>(std::string filename)</argsstring>
        <name>LoadWisdomFromFile</name>
        <param>
          <type>std::string</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Load the actual wisdom for plan generation from a file</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the file </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/BaseFFT.hpp" line="152" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/BaseFFT.hpp" bodystart="152" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="classtsa_1_1_base_f_f_t_1a7069819e421ad4cb2a4c58f65c8540ea" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void tsa::BaseFFT::ForgetWisdom</definition>
        <argsstring>()</argsstring>
        <name>ForgetWisdom</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Forget wisdom </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/BaseFFT.hpp" line="166" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/BaseFFT.hpp" bodystart="166" bodyend="168"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Setters</header>
      <memberdef kind="function" id="classtsa_1_1_base_f_f_t_1a4a8b00feb20dc3ace768d3c851143a03" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tsa::BaseFFT::SetPlanningMode</definition>
        <argsstring>(enum FFTPlanningMode mode)</argsstring>
        <name>SetPlanningMode</name>
        <param>
          <type>enum <ref refid="namespacetsa_1a217e07ef78939f88b22c8428ac96b1ae" kindref="member">FFTPlanningMode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the way in which the plan is constructed. No new plan is generated.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>the requested planning mode. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/BaseFFT.hpp" line="196" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/BaseFFT.hpp" bodystart="196" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="classtsa_1_1_base_f_f_t_1a5b1e2f36dbdfe197aa6c74d1cf963f40" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tsa::BaseFFT::SetPreserveInput</definition>
        <argsstring>(bool flag=true)</argsstring>
        <name>SetPreserveInput</name>
        <param>
          <type>bool</type>
          <declname>flag</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Request that the input buffer is preserved during the transformation. No new plan is generated.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>flag</parametername>
</parameternamelist>
<parameterdescription>
<para>true (default) if input buffer must be preserved, false otherwise </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/BaseFFT.hpp" line="224" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/BaseFFT.hpp" bodystart="224" bodyend="235"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classtsa_1_1_base_f_f_t_1a5c7dd6dee349547018d493be6d5874eb" prot="protected" static="no" mutable="no">
        <type>fftw_plan</type>
        <definition>fftw_plan tsa::BaseFFT::mPlan</definition>
        <argsstring></argsstring>
        <name>mPlan</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The current plan, or NULL if no plan is available </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/BaseFFT.hpp" line="247" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/BaseFFT.hpp" bodystart="247" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtsa_1_1_base_f_f_t_1aa89fef1777c6df148cdb8533265b6163" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool tsa::BaseFFT::mPlanNeedsUpdate</definition>
        <argsstring></argsstring>
        <name>mPlanNeedsUpdate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Flag: a parameter is changed and plan needs to be updated </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/BaseFFT.hpp" line="252" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/BaseFFT.hpp" bodystart="252" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtsa_1_1_base_f_f_t_1a171c71011fea314f23633b1816771d98" prot="protected" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int tsa::BaseFFT::mLogicalSize</definition>
        <argsstring></argsstring>
        <name>mLogicalSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The size of the current plan </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/BaseFFT.hpp" line="257" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/BaseFFT.hpp" bodystart="257" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtsa_1_1_base_f_f_t_1abbd656cda5a7cb6a88fc5d556d3269f7" prot="protected" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int tsa::BaseFFT::mPlanningRigor</definition>
        <argsstring></argsstring>
        <name>mPlanningRigor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The planning mode flag </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/BaseFFT.hpp" line="262" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/BaseFFT.hpp" bodystart="262" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtsa_1_1_base_f_f_t_1a2fe7f53db024bb408beeb5e22eaefbb9" prot="protected" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int tsa::BaseFFT::mPlanningRestriction</definition>
        <argsstring></argsstring>
        <name>mPlanningRestriction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The planning restriction flag. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/BaseFFT.hpp" line="267" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/BaseFFT.hpp" bodystart="267" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtsa_1_1_base_f_f_t_1a724f59f3f5bded31174373eac81e67ee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tsa::BaseFFT::BaseFFT</definition>
        <argsstring>(int size, enum FFTPlanningMode mode, bool PreserveInput)</argsstring>
        <name>BaseFFT</name>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>enum <ref refid="namespacetsa_1a217e07ef78939f88b22c8428ac96b1ae" kindref="member">FFTPlanningMode</ref></type>
          <declname>mode</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>PreserveInput</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>the size of the transform </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>specify the way in which plans are calculated </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>PreserveInput</parametername>
</parameternamelist>
<parameterdescription>
<para>true if the input buffer must be preserved during the transform, false otherwise </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/BaseFFT.hpp" line="98" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/BaseFFT.hpp" bodystart="98" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="classtsa_1_1_base_f_f_t_1a84fa441e825a8e375f9721263d358ac8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tsa::BaseFFT::BaseFFT</definition>
        <argsstring>(const BaseFFT &amp;from)</argsstring>
        <name>BaseFFT</name>
        <param>
          <type>const <ref refid="classtsa_1_1_base_f_f_t" kindref="compound">BaseFFT</ref> &amp;</type>
          <declname>from</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy constructor</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>from</parametername>
</parameternamelist>
<parameterdescription>
<para>The instance that must be copied </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/BaseFFT.hpp" line="111" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/BaseFFT.hpp" bodystart="111" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="classtsa_1_1_base_f_f_t_1ad73b78693c83ef6c7e07701965ae8cb6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual tsa::BaseFFT::~BaseFFT</definition>
        <argsstring>()</argsstring>
        <name>~BaseFFT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destructor </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/BaseFFT.hpp" line="122" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/BaseFFT.hpp" bodystart="122" bodyend="126"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Base class for various FFT. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="123">
        <label>tsa::DCT</label>
        <link refid="classtsa_1_1_d_c_t"/>
        <childnode refid="120" relation="public-inheritance">
        </childnode>
      </node>
      <node id="126">
        <label>tsa::InverseRealFFT</label>
        <link refid="classtsa_1_1_inverse_real_f_f_t"/>
        <childnode refid="120" relation="public-inheritance">
        </childnode>
      </node>
      <node id="122">
        <label>tsa::ComplexFFT</label>
        <link refid="classtsa_1_1_complex_f_f_t"/>
        <childnode refid="120" relation="public-inheritance">
        </childnode>
      </node>
      <node id="124">
        <label>tsa::DST</label>
        <link refid="classtsa_1_1_d_s_t"/>
        <childnode refid="120" relation="public-inheritance">
        </childnode>
      </node>
      <node id="120">
        <label>tsa::BaseFFT</label>
        <link refid="classtsa_1_1_base_f_f_t"/>
        <childnode refid="121" relation="public-inheritance">
        </childnode>
      </node>
      <node id="121">
        <label>tsa::AlgoBase</label>
        <link refid="classtsa_1_1_algo_base"/>
      </node>
      <node id="125">
        <label>tsa::IDCT</label>
        <link refid="classtsa_1_1_i_d_c_t"/>
        <childnode refid="120" relation="public-inheritance">
        </childnode>
      </node>
      <node id="127">
        <label>tsa::RealFFT</label>
        <link refid="classtsa_1_1_real_f_f_t"/>
        <childnode refid="120" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="128">
        <label>tsa::BaseFFT</label>
        <link refid="classtsa_1_1_base_f_f_t"/>
        <childnode refid="129" relation="public-inheritance">
        </childnode>
      </node>
      <node id="129">
        <label>tsa::AlgoBase</label>
        <link refid="classtsa_1_1_algo_base"/>
      </node>
    </collaborationgraph>
    <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/BaseFFT.hpp" line="88" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/BaseFFT.hpp" bodystart="88" bodyend="272"/>
    <listofallmembers>
      <member refid="classtsa_1_1_base_f_f_t_1a724f59f3f5bded31174373eac81e67ee" prot="public" virt="non-virtual"><scope>tsa::BaseFFT</scope><name>BaseFFT</name></member>
      <member refid="classtsa_1_1_base_f_f_t_1a84fa441e825a8e375f9721263d358ac8" prot="public" virt="non-virtual"><scope>tsa::BaseFFT</scope><name>BaseFFT</name></member>
      <member refid="classtsa_1_1_base_f_f_t_1a7069819e421ad4cb2a4c58f65c8540ea" prot="public" virt="non-virtual"><scope>tsa::BaseFFT</scope><name>ForgetWisdom</name></member>
      <member refid="classtsa_1_1_base_f_f_t_1a53ccc1ae425bb9f91adbd5562ecb9131" prot="public" virt="non-virtual"><scope>tsa::BaseFFT</scope><name>LoadWisdomFromFile</name></member>
      <member refid="classtsa_1_1_base_f_f_t_1a9af0c36413173821cac8dbdce9cfe3b4" prot="public" virt="pure-virtual"><scope>tsa::BaseFFT</scope><name>MakePlan</name></member>
      <member refid="classtsa_1_1_base_f_f_t_1a171c71011fea314f23633b1816771d98" prot="protected" virt="non-virtual"><scope>tsa::BaseFFT</scope><name>mLogicalSize</name></member>
      <member refid="classtsa_1_1_base_f_f_t_1a5c7dd6dee349547018d493be6d5874eb" prot="protected" virt="non-virtual"><scope>tsa::BaseFFT</scope><name>mPlan</name></member>
      <member refid="classtsa_1_1_base_f_f_t_1aa89fef1777c6df148cdb8533265b6163" prot="protected" virt="non-virtual"><scope>tsa::BaseFFT</scope><name>mPlanNeedsUpdate</name></member>
      <member refid="classtsa_1_1_base_f_f_t_1a2fe7f53db024bb408beeb5e22eaefbb9" prot="protected" virt="non-virtual"><scope>tsa::BaseFFT</scope><name>mPlanningRestriction</name></member>
      <member refid="classtsa_1_1_base_f_f_t_1abbd656cda5a7cb6a88fc5d556d3269f7" prot="protected" virt="non-virtual"><scope>tsa::BaseFFT</scope><name>mPlanningRigor</name></member>
      <member refid="classtsa_1_1_base_f_f_t_1a1f5332f508749018f0c6a58c9b1ed9dc" prot="public" virt="non-virtual"><scope>tsa::BaseFFT</scope><name>SaveWisdomOnFile</name></member>
      <member refid="classtsa_1_1_base_f_f_t_1a4a8b00feb20dc3ace768d3c851143a03" prot="public" virt="non-virtual"><scope>tsa::BaseFFT</scope><name>SetPlanningMode</name></member>
      <member refid="classtsa_1_1_base_f_f_t_1a5b1e2f36dbdfe197aa6c74d1cf963f40" prot="public" virt="non-virtual"><scope>tsa::BaseFFT</scope><name>SetPreserveInput</name></member>
      <member refid="classtsa_1_1_base_f_f_t_1ad73b78693c83ef6c7e07701965ae8cb6" prot="public" virt="virtual"><scope>tsa::BaseFFT</scope><name>~BaseFFT</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
