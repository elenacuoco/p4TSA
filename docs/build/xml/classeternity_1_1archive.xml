<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classeternity_1_1archive" kind="class" language="C++" prot="public">
    <compoundname>eternity::archive</compoundname>
    <derivedcompoundref refid="classeternity_1_1bin__archive" prot="public" virt="non-virtual">eternity::bin_archive</derivedcompoundref>
    <derivedcompoundref refid="classeternity_1_1xml__archive" prot="public" virt="non-virtual">eternity::xml_archive</derivedcompoundref>
    <includes refid="persist_8hpp" local="no">persist.hpp</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classeternity_1_1archive_1a8881f9ce8dbed2ee600c64b7925afef0" prot="public" static="no">
        <name>opening_mode</name>
        <enumvalue id="classeternity_1_1archive_1a8881f9ce8dbed2ee600c64b7925afef0a5b952c27ebe4ca2612e939a1aa19baf5" prot="public">
          <name>load</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classeternity_1_1archive_1a8881f9ce8dbed2ee600c64b7925afef0a06c18c297779389cb1cb03a2a7590ca8" prot="public">
          <name>store</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist.hpp" line="54" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist.hpp" bodystart="54" bodyend="55"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classeternity_1_1archive_1a949b798deac030f2ab45ed54bf26dc4a" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool eternity::archive::m_bloading</definition>
        <argsstring></argsstring>
        <name>m_bloading</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist.hpp" line="49" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist.hpp" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeternity_1_1archive_1ae4a796ad260a0f581cf33be4f072d83a" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; void * &gt;</type>
        <definition>std::vector&lt;void*&gt; eternity::archive::m_vPointerstored</definition>
        <argsstring></argsstring>
        <name>m_vPointerstored</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist.hpp" line="50" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist.hpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classeternity_1_1archive_1adc5356f74fed2dd5daf230aa1ee6c58e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>eternity::archive::archive</definition>
        <argsstring>()</argsstring>
        <name>archive</name>
        <briefdescription>
<para>Simply the default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist.hpp" line="59" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist.hpp" bodystart="59" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="classeternity_1_1archive_1a941c3b590afc929089706b92ce4d5e13" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void eternity::archive::init</definition>
        <argsstring>()</argsstring>
        <name>init</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist.hpp" line="62" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist.hpp" bodystart="62" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classeternity_1_1archive_1a2c4ab8d0935b130b38bce44f600bee99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eternity::archive::put_pointer</definition>
        <argsstring>(void *object)</argsstring>
        <name>put_pointer</name>
        <param>
          <type>void *</type>
          <declname>object</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Verify that object is stored only once. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist.hpp" line="71" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist.cpp" bodystart="28" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="classeternity_1_1archive_1a759dd5567021290542de13d090aa0963" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool eternity::archive::set_loading</definition>
        <argsstring>(bool val)</argsstring>
        <name>set_loading</name>
        <param>
          <type>bool</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Set the archive mode (loading or storing) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist.hpp" line="75" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist.hpp" bodystart="75" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="classeternity_1_1archive_1af1ced5c2f5cd028d88033c40ac98cc71" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool eternity::archive::is_loading</definition>
        <argsstring>()</argsstring>
        <name>is_loading</name>
        <briefdescription>
<para>Verify the archive is in loading mode. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist.hpp" line="80" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist.hpp" bodystart="80" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classeternity_1_1archive_1afbd7e1d21409eae43622049624277405" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool eternity::archive::is_storing</definition>
        <argsstring>()</argsstring>
        <name>is_storing</name>
        <briefdescription>
<para>Verify the archive is in storing mode. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist.hpp" line="85" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist.hpp" bodystart="85" bodyend="87"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This class supply common services for all kind of persistence archives. The major one is the ability to stored doubled pointers only one time and so avoid circularity, broken links and lost spaces on hard disks. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="74">
        <label>MFCarchive</label>
        <link refid="class_m_f_carchive"/>
        <childnode refid="72" relation="public-inheritance">
        </childnode>
      </node>
      <node id="72">
        <label>eternity::bin_archive</label>
        <link refid="classeternity_1_1bin__archive"/>
        <childnode refid="71" relation="public-inheritance">
        </childnode>
      </node>
      <node id="73">
        <label>eternity::file_archive</label>
        <link refid="classeternity_1_1file__archive"/>
        <childnode refid="72" relation="public-inheritance">
        </childnode>
      </node>
      <node id="71">
        <label>eternity::archive</label>
        <link refid="classeternity_1_1archive"/>
      </node>
      <node id="75">
        <label>eternity::xml_archive</label>
        <link refid="classeternity_1_1xml__archive"/>
        <childnode refid="71" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist.hpp" line="47" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist.hpp" bodystart="47" bodyend="90"/>
    <listofallmembers>
      <member refid="classeternity_1_1archive_1adc5356f74fed2dd5daf230aa1ee6c58e" prot="public" virt="non-virtual"><scope>eternity::archive</scope><name>archive</name></member>
      <member refid="classeternity_1_1archive_1a941c3b590afc929089706b92ce4d5e13" prot="public" virt="non-virtual"><scope>eternity::archive</scope><name>init</name></member>
      <member refid="classeternity_1_1archive_1af1ced5c2f5cd028d88033c40ac98cc71" prot="public" virt="non-virtual"><scope>eternity::archive</scope><name>is_loading</name></member>
      <member refid="classeternity_1_1archive_1afbd7e1d21409eae43622049624277405" prot="public" virt="non-virtual"><scope>eternity::archive</scope><name>is_storing</name></member>
      <member refid="classeternity_1_1archive_1a8881f9ce8dbed2ee600c64b7925afef0a5b952c27ebe4ca2612e939a1aa19baf5" prot="public" virt="non-virtual"><scope>eternity::archive</scope><name>load</name></member>
      <member refid="classeternity_1_1archive_1a949b798deac030f2ab45ed54bf26dc4a" prot="protected" virt="non-virtual"><scope>eternity::archive</scope><name>m_bloading</name></member>
      <member refid="classeternity_1_1archive_1ae4a796ad260a0f581cf33be4f072d83a" prot="protected" virt="non-virtual"><scope>eternity::archive</scope><name>m_vPointerstored</name></member>
      <member refid="classeternity_1_1archive_1a8881f9ce8dbed2ee600c64b7925afef0" prot="public" virt="non-virtual"><scope>eternity::archive</scope><name>opening_mode</name></member>
      <member refid="classeternity_1_1archive_1a2c4ab8d0935b130b38bce44f600bee99" prot="public" virt="non-virtual"><scope>eternity::archive</scope><name>put_pointer</name></member>
      <member refid="classeternity_1_1archive_1a759dd5567021290542de13d090aa0963" prot="public" virt="non-virtual"><scope>eternity::archive</scope><name>set_loading</name></member>
      <member refid="classeternity_1_1archive_1a8881f9ce8dbed2ee600c64b7925afef0a06c18c297779389cb1cb03a2a7590ca8" prot="public" virt="non-virtual"><scope>eternity::archive</scope><name>store</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
