<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="_frame_i_channel_8cpp" kind="file" language="C++">
    <compoundname>FrameIChannel.cpp</compoundname>
    <includes refid="_frame_i_channel_8hpp" local="no">FrameIChannel.hpp</includes>
    <includes local="no">values.h</includes>
    <includes local="no">sstream</includes>
    <incdepgraph>
      <node id="5465">
        <label>sys/stat.h</label>
      </node>
      <node id="5495">
        <label>tsaTraits.hpp</label>
        <link refid="tsa_traits_8hpp"/>
        <childnode refid="5496" relation="include">
        </childnode>
      </node>
      <node id="5477">
        <label>eternity.hpp</label>
        <link refid="eternity_8hpp"/>
        <childnode refid="5478" relation="include">
        </childnode>
        <childnode refid="5481" relation="include">
        </childnode>
        <childnode refid="5486" relation="include">
        </childnode>
        <childnode refid="5489" relation="include">
        </childnode>
      </node>
      <node id="5483">
        <label>stdlib.h</label>
      </node>
      <node id="5470">
        <label>stdexcept</label>
      </node>
      <node id="5491">
        <label>tsaTypes.hpp</label>
        <link refid="tsa_types_8hpp"/>
        <childnode refid="5472" relation="include">
        </childnode>
        <childnode refid="5473" relation="include">
        </childnode>
        <childnode refid="5492" relation="include">
        </childnode>
        <childnode refid="5474" relation="include">
        </childnode>
        <childnode refid="5477" relation="include">
        </childnode>
      </node>
      <node id="5475">
        <label>string</label>
      </node>
      <node id="5502">
        <label>values.h</label>
      </node>
      <node id="5478">
        <label>eternity/dynamic.hpp</label>
        <link refid="dynamic_8hpp"/>
        <childnode refid="5479" relation="include">
        </childnode>
        <childnode refid="5480" relation="include">
        </childnode>
        <childnode refid="5475" relation="include">
        </childnode>
      </node>
      <node id="5488">
        <label>map</label>
      </node>
      <node id="5493">
        <label>tsaLog.hpp</label>
        <link refid="tsa_log_8hpp"/>
        <childnode refid="5471" relation="include">
        </childnode>
        <childnode refid="5472" relation="include">
        </childnode>
        <childnode refid="5466" relation="include">
        </childnode>
      </node>
      <node id="5472">
        <label>fstream</label>
      </node>
      <node id="5487">
        <label>xmlscanner.hpp</label>
        <link refid="xmlscanner_8hpp"/>
        <childnode refid="5482" relation="include">
        </childnode>
        <childnode refid="5483" relation="include">
        </childnode>
        <childnode refid="5484" relation="include">
        </childnode>
        <childnode refid="5488" relation="include">
        </childnode>
        <childnode refid="5485" relation="include">
        </childnode>
        <childnode refid="5472" relation="include">
        </childnode>
        <childnode refid="5475" relation="include">
        </childnode>
        <childnode refid="5471" relation="include">
        </childnode>
      </node>
      <node id="5476">
        <label>tsaSerialize.hpp</label>
        <link refid="tsa_serialize_8hpp"/>
        <childnode refid="5470" relation="include">
        </childnode>
        <childnode refid="5471" relation="include">
        </childnode>
        <childnode refid="5472" relation="include">
        </childnode>
        <childnode refid="5477" relation="include">
        </childnode>
        <childnode refid="5491" relation="include">
        </childnode>
      </node>
      <node id="5499">
        <label>fparser.hpp</label>
        <link refid="fparser_8hpp"/>
        <childnode refid="5475" relation="include">
        </childnode>
        <childnode refid="5488" relation="include">
        </childnode>
        <childnode refid="5484" relation="include">
        </childnode>
      </node>
      <node id="5469">
        <label>AlgoBase.hpp</label>
        <link refid="_algo_base_8hpp"/>
        <childnode refid="5470" relation="include">
        </childnode>
        <childnode refid="5471" relation="include">
        </childnode>
        <childnode refid="5472" relation="include">
        </childnode>
        <childnode refid="5473" relation="include">
        </childnode>
        <childnode refid="5474" relation="include">
        </childnode>
        <childnode refid="5475" relation="include">
        </childnode>
        <childnode refid="5476" relation="include">
        </childnode>
        <childnode refid="5491" relation="include">
        </childnode>
        <childnode refid="5493" relation="include">
        </childnode>
        <childnode refid="5494" relation="include">
        </childnode>
        <childnode refid="5500" relation="include">
        </childnode>
        <childnode refid="5501" relation="include">
        </childnode>
      </node>
      <node id="5481">
        <label>eternity/persist.hpp</label>
        <link refid="persist_8hpp"/>
        <childnode refid="5478" relation="include">
        </childnode>
        <childnode refid="5482" relation="include">
        </childnode>
        <childnode refid="5483" relation="include">
        </childnode>
        <childnode refid="5484" relation="include">
        </childnode>
        <childnode refid="5485" relation="include">
        </childnode>
        <childnode refid="5472" relation="include">
        </childnode>
      </node>
      <node id="5464">
        <label>sys/types.h</label>
      </node>
      <node id="5498">
        <label>string.h</label>
      </node>
      <node id="5480">
        <label>typeinfo</label>
      </node>
      <node id="5474">
        <label>boost/numeric/ublas/io.hpp</label>
      </node>
      <node id="5466">
        <label>unistd.h</label>
      </node>
      <node id="5497">
        <label>tsaUtilityFunctions.hpp</label>
        <link refid="tsa_utility_functions_8hpp"/>
        <childnode refid="5498" relation="include">
        </childnode>
        <childnode refid="5499" relation="include">
        </childnode>
        <childnode refid="5496" relation="include">
        </childnode>
        <childnode refid="5472" relation="include">
        </childnode>
      </node>
      <node id="5484">
        <label>vector</label>
      </node>
      <node id="5494">
        <label>BaseView.hpp</label>
        <link refid="_base_view_8hpp"/>
        <childnode refid="5488" relation="include">
        </childnode>
        <childnode refid="5475" relation="include">
        </childnode>
        <childnode refid="5491" relation="include">
        </childnode>
        <childnode refid="5495" relation="include">
        </childnode>
        <childnode refid="5497" relation="include">
        </childnode>
        <childnode refid="5476" relation="include">
        </childnode>
        <childnode refid="5493" relation="include">
        </childnode>
      </node>
      <node id="5492">
        <label>boost/numeric/ublas/matrix_proxy.hpp</label>
      </node>
      <node id="5490">
        <label>sstream</label>
      </node>
      <node id="5468">
        <label>FrameL.h</label>
      </node>
      <node id="5501">
        <label>AlgoExceptions.hpp</label>
        <link refid="_algo_exceptions_8hpp"/>
        <childnode refid="5470" relation="include">
        </childnode>
        <childnode refid="5475" relation="include">
        </childnode>
      </node>
      <node id="5500">
        <label>SeqView.hpp</label>
        <link refid="_seq_view_8hpp"/>
        <childnode refid="5473" relation="include">
        </childnode>
        <childnode refid="5492" relation="include">
        </childnode>
        <childnode refid="5474" relation="include">
        </childnode>
        <childnode refid="5494" relation="include">
        </childnode>
        <childnode refid="5468" relation="include">
        </childnode>
      </node>
      <node id="5482">
        <label>math.h</label>
      </node>
      <node id="5473">
        <label>boost/numeric/ublas/matrix.hpp</label>
      </node>
      <node id="5471">
        <label>iostream</label>
      </node>
      <node id="5467">
        <label>deque</label>
      </node>
      <node id="5486">
        <label>eternity/persist_xml.hpp</label>
        <link refid="persist__xml_8hpp"/>
        <childnode refid="5481" relation="include">
        </childnode>
        <childnode refid="5487" relation="include">
        </childnode>
        <childnode refid="5467" relation="include">
        </childnode>
      </node>
      <node id="5462">
        <label>/home/filip/PhD/WDFPipe_test/p4TSA/src/FrameIChannel.cpp</label>
        <link refid="_frame_i_channel_8cpp"/>
        <childnode refid="5463" relation="include">
        </childnode>
        <childnode refid="5502" relation="include">
        </childnode>
        <childnode refid="5490" relation="include">
        </childnode>
      </node>
      <node id="5496">
        <label>complex</label>
      </node>
      <node id="5489">
        <label>eternity/algorithms.hpp</label>
        <link refid="algorithms_8hpp"/>
        <childnode refid="5481" relation="include">
        </childnode>
        <childnode refid="5486" relation="include">
        </childnode>
        <childnode refid="5487" relation="include">
        </childnode>
        <childnode refid="5490" relation="include">
        </childnode>
      </node>
      <node id="5485">
        <label>algorithm</label>
      </node>
      <node id="5479">
        <label>stdio.h</label>
      </node>
      <node id="5463">
        <label>FrameIChannel.hpp</label>
        <link refid="_frame_i_channel_8hpp"/>
        <childnode refid="5464" relation="include">
        </childnode>
        <childnode refid="5465" relation="include">
        </childnode>
        <childnode refid="5466" relation="include">
        </childnode>
        <childnode refid="5467" relation="include">
        </childnode>
        <childnode refid="5468" relation="include">
        </childnode>
        <childnode refid="5469" relation="include">
        </childnode>
        <childnode refid="5500" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacetsa">tsa</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_frame_i_channel_8hpp" kindref="compound">FrameIChannel.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;values.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight></codeline>
<codeline lineno="7"><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetsa" kindref="compound">tsa</ref><sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9" refid="classtsa_1_1_frame_i_channel_1a8049d4e90ebecce30c7f60573da7fe87" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtsa_1_1_frame_i_channel_1a8049d4e90ebecce30c7f60573da7fe87" kindref="member">FrameIChannel::ReopenIfModified</ref>()<sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">stat<sp/>tmp;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ecode<sp/>=<sp/>stat((const_cast&lt;char<sp/>*&gt;<sp/>(<ref refid="classtsa_1_1_frame_i_channel_1a252988d4bbef0e293be14f3637edc7ef" kindref="member">mFileName</ref>.c_str())),<sp/>&amp;tmp);</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtsa_1_1_frame_i_channel_1aa679a81dbcec2ca8c7126d092de59651" kindref="member">miFile</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtsa_1_1_frame_i_channel_1a7a643eb00f14d0bbd02f1b04e4e3ccdc" kindref="member">mLastModification</ref><sp/>=<sp/>tmp.st_mtime;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtsa_1_1_frame_i_channel_1aa679a81dbcec2ca8c7126d092de59651" kindref="member">miFile</ref><sp/>=<sp/>FrFileINew((const_cast&lt;char<sp/>*&gt;<sp/>(<ref refid="classtsa_1_1_frame_i_channel_1a252988d4bbef0e293be14f3637edc7ef" kindref="member">mFileName</ref>.c_str())));</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtsa_1_1_frame_i_channel_1aa679a81dbcec2ca8c7126d092de59651" kindref="member">miFile</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>s;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;File<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classtsa_1_1_frame_i_channel_1a252988d4bbef0e293be14f3637edc7ef" kindref="member">mFileName</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>open<sp/>error&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>emsg<sp/>=<sp/>s.str();</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetsa_1a3bce10382fbb41b48aca0e5b8afeb896" kindref="member">LogSevere</ref>(</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>emsg.c_str());</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(emsg);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetsa_1a2a922785b9b967a8e92ded5a1540688f" kindref="member">LogDebug</ref>(3,<sp/></highlight><highlight class="stringliteral">&quot;File<sp/>%s<sp/>opened&quot;</highlight><highlight class="normal">,<sp/>const_cast&lt;char<sp/>*&gt;<sp/>(<ref refid="classtsa_1_1_frame_i_channel_1a252988d4bbef0e293be14f3637edc7ef" kindref="member">mFileName</ref>.c_str()));</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtsa_1_1_frame_i_channel_1a7a643eb00f14d0bbd02f1b04e4e3ccdc" kindref="member">mLastModification</ref><sp/>&lt;<sp/>tmp.st_mtime)<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtsa_1_1_frame_i_channel_1a7a643eb00f14d0bbd02f1b04e4e3ccdc" kindref="member">mLastModification</ref><sp/>=<sp/>tmp.st_mtime;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FrFileIEnd(<ref refid="classtsa_1_1_frame_i_channel_1aa679a81dbcec2ca8c7126d092de59651" kindref="member">miFile</ref>);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtsa_1_1_frame_i_channel_1aa679a81dbcec2ca8c7126d092de59651" kindref="member">miFile</ref><sp/>=<sp/>FrFileINew((const_cast&lt;char<sp/>*&gt;<sp/>(<ref refid="classtsa_1_1_frame_i_channel_1a252988d4bbef0e293be14f3637edc7ef" kindref="member">mFileName</ref>.c_str())));</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtsa_1_1_frame_i_channel_1aa679a81dbcec2ca8c7126d092de59651" kindref="member">miFile</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>s;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;File<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classtsa_1_1_frame_i_channel_1a252988d4bbef0e293be14f3637edc7ef" kindref="member">mFileName</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>open<sp/>error&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>emsg<sp/>=<sp/>s.str();</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetsa_1a3bce10382fbb41b48aca0e5b8afeb896" kindref="member">LogSevere</ref>(</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>emsg.c_str());</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(emsg);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetsa_1a2a922785b9b967a8e92ded5a1540688f" kindref="member">LogDebug</ref>(3,<sp/></highlight><highlight class="stringliteral">&quot;File<sp/>%s<sp/>reopened<sp/>(changed)&quot;</highlight><highlight class="normal">,<sp/>const_cast&lt;char<sp/>*&gt;<sp/>(<ref refid="classtsa_1_1_frame_i_channel_1a252988d4bbef0e293be14f3637edc7ef" kindref="member">mFileName</ref>.c_str()));</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="classtsa_1_1_frame_i_channel_1acc55687d86116d3cc2db6c4d2b2e7c1e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtsa_1_1_frame_i_channel_1acc55687d86116d3cc2db6c4d2b2e7c1e" kindref="member">FrameIChannel::FrameIChannel</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>fileName,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>channelName,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dLength,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tStart)<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtsa_1_1_frame_i_channel_1a252988d4bbef0e293be14f3637edc7ef" kindref="member">mFileName</ref><sp/>=<sp/>fileName;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtsa_1_1_frame_i_channel_1aa679a81dbcec2ca8c7126d092de59651" kindref="member">miFile</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="classtsa_1_1_frame_i_channel_1a8049d4e90ebecce30c7f60573da7fe87" kindref="member">ReopenIfModified</ref>());</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtsa_1_1_frame_i_channel_1a7cc80840311ef703c68393f95b077f9a" kindref="member">mChannelName</ref><sp/>=<sp/>channelName;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtsa_1_1_frame_i_channel_1a32e512e479d9f8eb1de5b7a4cfd53254" kindref="member">mDataLength</ref><sp/>=<sp/>dLength;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tStart<sp/>==<sp/>0.0)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtsa_1_1_frame_i_channel_1affbd1b60487a643f2bdec4875f4d3643" kindref="member">mStartTime</ref><sp/>=<sp/>FrFileITStart(<ref refid="classtsa_1_1_frame_i_channel_1aa679a81dbcec2ca8c7126d092de59651" kindref="member">miFile</ref>);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtsa_1_1_frame_i_channel_1affbd1b60487a643f2bdec4875f4d3643" kindref="member">mStartTime</ref><sp/>=<sp/>tStart;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtsa_1_1_frame_i_channel_1a12a55e4ea728e58b37c811fe93a7d774" kindref="member">mFrameVect</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtsa_1_1_frame_i_channel_1a90c8009f4280dfee6a8f61b97f246a25" kindref="member">mAutoIncrement</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="classtsa_1_1_frame_i_channel_1ab6f4fd4a65dee05ef58590ed6216408c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtsa_1_1_frame_i_channel_1ab6f4fd4a65dee05ef58590ed6216408c" kindref="member">FrameIChannel::~FrameIChannel</ref>()<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtsa_1_1_frame_i_channel_1a12a55e4ea728e58b37c811fe93a7d774" kindref="member">mFrameVect</ref><sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FrVectFree(<ref refid="classtsa_1_1_frame_i_channel_1a12a55e4ea728e58b37c811fe93a7d774" kindref="member">mFrameVect</ref>);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtsa_1_1_frame_i_channel_1a12a55e4ea728e58b37c811fe93a7d774" kindref="member">mFrameVect</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FrFileIEnd(<ref refid="classtsa_1_1_frame_i_channel_1aa679a81dbcec2ca8c7126d092de59651" kindref="member">miFile</ref>);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="classtsa_1_1_frame_i_channel_1a9e8d07780eb81e8c4a373c3b49932df3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtsa_1_1_frame_i_channel_1a9e8d07780eb81e8c4a373c3b49932df3" kindref="member">FrameIChannel::GetData</ref>(<ref refid="namespacetsa_1ac599574bcc094eda25613724b8f3ca9e" kindref="member">SeqViewDouble</ref>&amp;<sp/>rSeqView,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tStart,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dLength)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtsa_1_1_frame_i_channel_1affbd1b60487a643f2bdec4875f4d3643" kindref="member">mStartTime</ref><sp/>=<sp/>tStart;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtsa_1_1_frame_i_channel_1a32e512e479d9f8eb1de5b7a4cfd53254" kindref="member">mDataLength</ref><sp/>=<sp/>dLength;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtsa_1_1_frame_i_channel_1a9e8d07780eb81e8c4a373c3b49932df3" kindref="member">GetData</ref>(rSeqView);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="classtsa_1_1_frame_i_channel_1a0c17cedafee827df1662036795cd954c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtsa_1_1_frame_i_channel_1a9e8d07780eb81e8c4a373c3b49932df3" kindref="member">FrameIChannel::GetData</ref>(<ref refid="namespacetsa_1ac599574bcc094eda25613724b8f3ca9e" kindref="member">SeqViewDouble</ref>&amp;<sp/>rSeqView)<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>status<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtsa_1_1_frame_i_channel_1a12a55e4ea728e58b37c811fe93a7d774" kindref="member">mFrameVect</ref><sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FrVectFree(<ref refid="classtsa_1_1_frame_i_channel_1a12a55e4ea728e58b37c811fe93a7d774" kindref="member">mFrameVect</ref>);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtsa_1_1_frame_i_channel_1a12a55e4ea728e58b37c811fe93a7d774" kindref="member">mFrameVect</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="classtsa_1_1_frame_i_channel_1a8049d4e90ebecce30c7f60573da7fe87" kindref="member">ReopenIfModified</ref>());</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtsa_1_1_frame_i_channel_1a12a55e4ea728e58b37c811fe93a7d774" kindref="member">mFrameVect</ref><sp/>=<sp/>FrFileIGetVectDN(<ref refid="classtsa_1_1_frame_i_channel_1aa679a81dbcec2ca8c7126d092de59651" kindref="member">miFile</ref>,<sp/>const_cast&lt;char<sp/>*&gt;<sp/>(<ref refid="classtsa_1_1_frame_i_channel_1a7cc80840311ef703c68393f95b077f9a" kindref="member">mChannelName</ref>.c_str()),<sp/><ref refid="classtsa_1_1_frame_i_channel_1affbd1b60487a643f2bdec4875f4d3643" kindref="member">mStartTime</ref>,<sp/><ref refid="classtsa_1_1_frame_i_channel_1a32e512e479d9f8eb1de5b7a4cfd53254" kindref="member">mDataLength</ref>);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtsa_1_1_frame_i_channel_1a12a55e4ea728e58b37c811fe93a7d774" kindref="member">mFrameVect</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>s;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>&lt;&lt;<sp/>std::fixed<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Can&apos;t<sp/>get<sp/>data<sp/>for<sp/>tstart=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classtsa_1_1_frame_i_channel_1affbd1b60487a643f2bdec4875f4d3643" kindref="member">mStartTime</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>tlength=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classtsa_1_1_frame_i_channel_1a32e512e479d9f8eb1de5b7a4cfd53254" kindref="member">mDataLength</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>in<sp/>channel<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classtsa_1_1_frame_i_channel_1a7cc80840311ef703c68393f95b077f9a" kindref="member">mChannelName</ref>;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>emsg<sp/>=<sp/>s.str();</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetsa_1a3bce10382fbb41b48aca0e5b8afeb896" kindref="member">LogSevere</ref>(</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>emsg.c_str());</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtsa_1_1_frame_i_channel_1affbd1b60487a643f2bdec4875f4d3643" kindref="member">mStartTime</ref><sp/>+=<sp/><ref refid="classtsa_1_1_frame_i_channel_1a32e512e479d9f8eb1de5b7a4cfd53254" kindref="member">mDataLength</ref>;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(emsg);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetsa_1ad260cd21c1891c4ed391fe788569aba4" kindref="member">Dmatrix</ref>*<sp/>data<sp/>=<sp/>rSeqView.GetData();</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtsa_1_1_frame_i_channel_1a12a55e4ea728e58b37c811fe93a7d774" kindref="member">mFrameVect</ref>-&gt;next<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>missed<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((data-&gt;size1()<sp/>!=<sp/>1)<sp/>||<sp/>(data-&gt;size2()<sp/>!=<sp/><ref refid="classtsa_1_1_frame_i_channel_1a12a55e4ea728e58b37c811fe93a7d774" kindref="member">mFrameVect</ref>-&gt;nx[0]))<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;resize(1,<sp/><ref refid="classtsa_1_1_frame_i_channel_1a12a55e4ea728e58b37c811fe93a7d774" kindref="member">mFrameVect</ref>-&gt;nData);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtsa_1_1_frame_i_channel_1aaca5759288add902732cc640633f17d4" kindref="member">PushFrVect</ref>(<ref refid="classtsa_1_1_frame_i_channel_1a12a55e4ea728e58b37c811fe93a7d774" kindref="member">mFrameVect</ref>,<sp/>*data,<sp/>0,<sp/>0.0,<sp/>1.0);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Missed<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((data-&gt;size1()<sp/>!=<sp/>2)<sp/>||<sp/>(data-&gt;size2()<sp/>!=<sp/><ref refid="classtsa_1_1_frame_i_channel_1a12a55e4ea728e58b37c811fe93a7d774" kindref="member">mFrameVect</ref>-&gt;nx[0]))<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;resize(2,<sp/><ref refid="classtsa_1_1_frame_i_channel_1a12a55e4ea728e58b37c811fe93a7d774" kindref="member">mFrameVect</ref>-&gt;nData);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtsa_1_1_frame_i_channel_1aaca5759288add902732cc640633f17d4" kindref="member">PushFrVect</ref>(<ref refid="classtsa_1_1_frame_i_channel_1a12a55e4ea728e58b37c811fe93a7d774" kindref="member">mFrameVect</ref>,<sp/>*data,<sp/>0,<sp/>0.0,<sp/>1.0);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtsa_1_1_frame_i_channel_1aaca5759288add902732cc640633f17d4" kindref="member">PushFrVect</ref>(<ref refid="classtsa_1_1_frame_i_channel_1a12a55e4ea728e58b37c811fe93a7d774" kindref="member">mFrameVect</ref>-&gt;next,<sp/>*data,<sp/>0,<sp/>0.0,<sp/>1.0);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rSeqView.SetStart(<ref refid="classtsa_1_1_frame_i_channel_1affbd1b60487a643f2bdec4875f4d3643" kindref="member">mStartTime</ref>);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rSeqView.SetSampling(<ref refid="classtsa_1_1_frame_i_channel_1a12a55e4ea728e58b37c811fe93a7d774" kindref="member">mFrameVect</ref>-&gt;dx[0]);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rSeqView.SetScale(1.0);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtsa_1_1_frame_i_channel_1a90c8009f4280dfee6a8f61b97f246a25" kindref="member">mAutoIncrement</ref>)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtsa_1_1_frame_i_channel_1a8caf984495dce2862909b0d7192c9fb4" kindref="member">NextSlice</ref>();</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119" refid="classtsa_1_1_frame_i_channel_1ae637a0e659963fa2ef3e5ab057d17509" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtsa_1_1_frame_i_channel_1ae637a0e659963fa2ef3e5ab057d17509" kindref="member">FrameIChannel::SetStartTime</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tStart)<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtsa_1_1_frame_i_channel_1affbd1b60487a643f2bdec4875f4d3643" kindref="member">mStartTime</ref><sp/>=<sp/>tStart;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="classtsa_1_1_frame_i_channel_1a9e2483d3942bf13922ee4afa065f4da1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtsa_1_1_frame_i_channel_1a9e2483d3942bf13922ee4afa065f4da1" kindref="member">FrameIChannel::SetDataLength</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dLength)<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtsa_1_1_frame_i_channel_1a32e512e479d9f8eb1de5b7a4cfd53254" kindref="member">mDataLength</ref><sp/>=<sp/>dLength;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128" refid="classtsa_1_1_frame_i_channel_1aaab838f283b44ecf0d52842e99406146" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classtsa_1_1_frame_i_channel_1aaab838f283b44ecf0d52842e99406146" kindref="member">FrameIChannel::GetChannelList</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>fileName,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gtime)<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FrFile<sp/>*iFile<sp/>=<sp/>FrFileINew((const_cast&lt;char<sp/>*&gt;<sp/>(fileName.c_str())));</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>tmp(FrFileIGetChannelList(iFile,<sp/>gtime));</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FrFileIEnd(iFile);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tmp;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135" refid="classtsa_1_1_frame_i_channel_1a8caf984495dce2862909b0d7192c9fb4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classtsa_1_1_frame_i_channel_1a8caf984495dce2862909b0d7192c9fb4" kindref="member">FrameIChannel::NextSlice</ref>()<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtsa_1_1_frame_i_channel_1affbd1b60487a643f2bdec4875f4d3643" kindref="member">mStartTime</ref><sp/>+=<sp/><ref refid="classtsa_1_1_frame_i_channel_1a32e512e479d9f8eb1de5b7a4cfd53254" kindref="member">mDataLength</ref>;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139" refid="classtsa_1_1_frame_i_channel_1a7ef54c22707b58caa5d4174dfccffc26" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtsa_1_1_frame_i_channel_1a7ef54c22707b58caa5d4174dfccffc26" kindref="member">FrameIChannel::SetAutoIncrement</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>status)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtsa_1_1_frame_i_channel_1a90c8009f4280dfee6a8f61b97f246a25" kindref="member">mAutoIncrement</ref><sp/>=<sp/>status;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143" refid="classtsa_1_1_frame_i_channel_1aaca5759288add902732cc640633f17d4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtsa_1_1_frame_i_channel_1aaca5759288add902732cc640633f17d4" kindref="member">FrameIChannel::PushFrVect</ref>(FrVect<sp/>*frv,<sp/><ref refid="namespacetsa_1ad260cd21c1891c4ed391fe788569aba4" kindref="member">Dmatrix</ref>&amp;<sp/>data,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>row,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>offset,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>slope)<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(frv-&gt;type)<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>FR_VECT_C:</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>frv-&gt;nData;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data(row,<sp/>i)<sp/>=<sp/>(double)<sp/>(frv-&gt;data[<sp/>i<sp/>])<sp/>*<sp/>slope<sp/>+<sp/>offset;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>FR_VECT_2S:</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>frv-&gt;nData;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data(row,<sp/>i)<sp/>=<sp/>(double)<sp/>(frv-&gt;dataS[<sp/>i<sp/>])<sp/>*<sp/>slope<sp/>+<sp/>offset;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>FR_VECT_4S:</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>frv-&gt;nData;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data(row,<sp/>i)<sp/>=<sp/>(double)<sp/>(frv-&gt;dataI[<sp/>i<sp/>])<sp/>*<sp/>slope<sp/>+<sp/>offset;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>FR_VECT_8S:</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>frv-&gt;nData;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data(row,<sp/>i)<sp/>=<sp/>(double)<sp/>(frv-&gt;dataL[<sp/>i<sp/>])<sp/>*<sp/>slope<sp/>+<sp/>offset;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>FR_VECT_1U:</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>frv-&gt;nData;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data(row,<sp/>i)<sp/>=<sp/>(double)<sp/>(frv-&gt;dataU[<sp/>i<sp/>])<sp/>*<sp/>slope<sp/>+<sp/>offset;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>FR_VECT_2U:</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>frv-&gt;nData;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data(row,<sp/>i)<sp/>=<sp/>(double)<sp/>(frv-&gt;dataUS[<sp/>i<sp/>])<sp/>*<sp/>slope<sp/>+<sp/>offset;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>FR_VECT_4U:</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>frv-&gt;nData;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data(row,<sp/>i)<sp/>=<sp/>(double)<sp/>(frv-&gt;dataUI[<sp/>i<sp/>])<sp/>*<sp/>slope<sp/>+<sp/>offset;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>FR_VECT_8U:</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>frv-&gt;nData;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data(row,<sp/>i)<sp/>=<sp/>(double)<sp/>(frv-&gt;dataUL[<sp/>i<sp/>])<sp/>*<sp/>slope<sp/>+<sp/>offset;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>FR_VECT_4R:</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>frv-&gt;nData;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data(row,<sp/>i)<sp/>=<sp/>(double)<sp/>(frv-&gt;dataF[<sp/>i<sp/>])<sp/>*<sp/>slope<sp/>+<sp/>offset;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>FR_VECT_8R:</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>frv-&gt;nData;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data(row,<sp/>i)<sp/>=<sp/>(double)<sp/>(frv-&gt;dataD[<sp/>i<sp/>])<sp/>*<sp/>slope<sp/>+<sp/>offset;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetsa_1a3bce10382fbb41b48aca0e5b8afeb896" kindref="member">LogSevere</ref>(</highlight><highlight class="stringliteral">&quot;FrVectCopy:<sp/>unknown<sp/>type&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;FdChannel::Channel::PushFrVect<sp/>-<sp/>unknown<sp/>type&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal">}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="comment">//<sp/>end<sp/>namespace<sp/>tsa</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/filip/PhD/WDFPipe_test/p4TSA/src/FrameIChannel.cpp"/>
  </compounddef>
</doxygen>
