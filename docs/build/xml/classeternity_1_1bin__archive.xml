<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classeternity_1_1bin__archive" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>eternity::bin_archive</compoundname>
    <basecompoundref refid="classeternity_1_1archive" prot="public" virt="non-virtual">eternity::archive</basecompoundref>
    <derivedcompoundref refid="classeternity_1_1file__archive" prot="public" virt="non-virtual">eternity::file_archive</derivedcompoundref>
    <derivedcompoundref refid="class_m_f_carchive" prot="public" virt="non-virtual">MFCarchive</derivedcompoundref>
    <includes refid="persist_8hpp" local="no">persist.hpp</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classeternity_1_1bin__archive_1a0cc44edd050d598ff4f617e445159386" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual eternity::bin_archive::~bin_archive</definition>
        <argsstring>()</argsstring>
        <name>~bin_archive</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist.hpp" line="100" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist.hpp" bodystart="100" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="classeternity_1_1bin__archive_1acbe041b0815f2721ee18ad042557b14e" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>size_t</type>
        <definition>virtual size_t eternity::bin_archive::write</definition>
        <argsstring>(const void *buffer, size_t size, size_t count)=0</argsstring>
        <name>write</name>
        <reimplementedby refid="class_m_f_carchive_1a8c5191701a84b9a4d2812887cfc28651">write</reimplementedby>
        <reimplementedby refid="classeternity_1_1file__archive_1a0eaf4b5937b3ff46df3627f64efc19e8">write</reimplementedby>
        <param>
          <type>const void *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
<para>write a buffer of a certain legnth n time in the archive </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist.hpp" line="104" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classeternity_1_1bin__archive_1a5d67b032541f5a1e104d2fcd0eaa7a55" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>size_t</type>
        <definition>virtual size_t eternity::bin_archive::read</definition>
        <argsstring>(void *buffer, size_t size, size_t count)=0</argsstring>
        <name>read</name>
        <reimplementedby refid="class_m_f_carchive_1a175a083e8f81fe490714be920539f7b9">read</reimplementedby>
        <reimplementedby refid="classeternity_1_1file__archive_1a307b43ac9f06c7077ac0f7e48dc0d7ab">read</reimplementedby>
        <param>
          <type>void *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
<para>read a buffer of a certain legnth n time in the archive </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist.hpp" line="106" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classeternity_1_1bin__archive_1a451f9bd713b83922890014af88d386e6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type><ref refid="classeternity_1_1bin__archive" kindref="compound">bin_archive</ref> &amp;</type>
        <definition>bin_archive&amp; eternity::bin_archive::operator&lt;&lt;</definition>
        <argsstring>(T &amp;ogg)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>T &amp;</type>
          <declname>ogg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Template operator to put any type ( except string) of proprieties in the archive. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist.hpp" line="112" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist.hpp" bodystart="112" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="classeternity_1_1bin__archive_1a8c431d394555d953019fe1f35ca77ffd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type><ref refid="classeternity_1_1bin__archive" kindref="compound">bin_archive</ref> &amp;</type>
        <definition>bin_archive&amp; eternity::bin_archive::operator&gt;&gt;</definition>
        <argsstring>(T &amp;ogg)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>T &amp;</type>
          <declname>ogg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Template operator to extract any type ( except string) of proprieties from the archive. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist.hpp" line="122" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist.hpp" bodystart="122" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="classeternity_1_1bin__archive_1a5cc61f7f70b1d809fbece79ccb9ecb26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classeternity_1_1bin__archive" kindref="compound">bin_archive</ref> &amp;</type>
        <definition>bin_archive &amp; eternity::bin_archive::operator&lt;&lt;</definition>
        <argsstring>(std::string &amp;str)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>Put a string in the archive. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist.hpp" line="129" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist.cpp" bodystart="41" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classeternity_1_1bin__archive_1a4cbbd8dff6b78cf3868a49b30261dd26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classeternity_1_1bin__archive" kindref="compound">bin_archive</ref> &amp;</type>
        <definition>bin_archive &amp; eternity::bin_archive::operator&gt;&gt;</definition>
        <argsstring>(std::string &amp;str)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>std::string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>Extract a string from the archive. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist.hpp" line="133" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist.cpp" bodystart="58" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="classeternity_1_1bin__archive_1a4c9b0ab9146c3a9ccaa5ec745299b282" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class t</type>
          </param>
        </templateparamlist>
        <type>t *</type>
        <definition>t* eternity::bin_archive::get_object</definition>
        <argsstring>(t **ppObj)</argsstring>
        <name>get_object</name>
        <param>
          <type>t **</type>
          <declname>ppObj</declname>
        </param>
        <briefdescription>
<para>Extract an object pointer from the archive. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist.hpp" line="138" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist.hpp" bodystart="138" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="classeternity_1_1bin__archive_1ab93c74313a8c6afdc65d4f2f2860502c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class t</type>
          </param>
        </templateparamlist>
        <type>t *</type>
        <definition>t* eternity::bin_archive::put_object</definition>
        <argsstring>(t *pObj)</argsstring>
        <name>put_object</name>
        <param>
          <type>t *</type>
          <declname>pObj</declname>
        </param>
        <briefdescription>
<para>Put an object pointer in the archive. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist.hpp" line="168" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist.hpp" bodystart="168" bodyend="185"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Bin(ary)archive realize the persistence by serialization using a stream archive where to store in sequence all data in binary format. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="151">
        <label>MFCarchive</label>
        <link refid="class_m_f_carchive"/>
        <childnode refid="148" relation="public-inheritance">
        </childnode>
      </node>
      <node id="148">
        <label>eternity::bin_archive</label>
        <link refid="classeternity_1_1bin__archive"/>
        <childnode refid="149" relation="public-inheritance">
        </childnode>
      </node>
      <node id="150">
        <label>eternity::file_archive</label>
        <link refid="classeternity_1_1file__archive"/>
        <childnode refid="148" relation="public-inheritance">
        </childnode>
      </node>
      <node id="149">
        <label>eternity::archive</label>
        <link refid="classeternity_1_1archive"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="152">
        <label>eternity::bin_archive</label>
        <link refid="classeternity_1_1bin__archive"/>
        <childnode refid="153" relation="public-inheritance">
        </childnode>
      </node>
      <node id="153">
        <label>eternity::archive</label>
        <link refid="classeternity_1_1archive"/>
      </node>
    </collaborationgraph>
    <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist.hpp" line="97" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist.hpp" bodystart="97" bodyend="186"/>
    <listofallmembers>
      <member refid="classeternity_1_1archive_1adc5356f74fed2dd5daf230aa1ee6c58e" prot="public" virt="non-virtual"><scope>eternity::bin_archive</scope><name>archive</name></member>
      <member refid="classeternity_1_1bin__archive_1a4c9b0ab9146c3a9ccaa5ec745299b282" prot="public" virt="non-virtual"><scope>eternity::bin_archive</scope><name>get_object</name></member>
      <member refid="classeternity_1_1archive_1a941c3b590afc929089706b92ce4d5e13" prot="public" virt="non-virtual"><scope>eternity::bin_archive</scope><name>init</name></member>
      <member refid="classeternity_1_1archive_1af1ced5c2f5cd028d88033c40ac98cc71" prot="public" virt="non-virtual"><scope>eternity::bin_archive</scope><name>is_loading</name></member>
      <member refid="classeternity_1_1archive_1afbd7e1d21409eae43622049624277405" prot="public" virt="non-virtual"><scope>eternity::bin_archive</scope><name>is_storing</name></member>
      <member refid="classeternity_1_1archive_1a8881f9ce8dbed2ee600c64b7925afef0a5b952c27ebe4ca2612e939a1aa19baf5" prot="public" virt="non-virtual"><scope>eternity::bin_archive</scope><name>load</name></member>
      <member refid="classeternity_1_1archive_1a949b798deac030f2ab45ed54bf26dc4a" prot="protected" virt="non-virtual"><scope>eternity::bin_archive</scope><name>m_bloading</name></member>
      <member refid="classeternity_1_1archive_1ae4a796ad260a0f581cf33be4f072d83a" prot="protected" virt="non-virtual"><scope>eternity::bin_archive</scope><name>m_vPointerstored</name></member>
      <member refid="classeternity_1_1archive_1a8881f9ce8dbed2ee600c64b7925afef0" prot="public" virt="non-virtual"><scope>eternity::bin_archive</scope><name>opening_mode</name></member>
      <member refid="classeternity_1_1bin__archive_1a451f9bd713b83922890014af88d386e6" prot="public" virt="non-virtual"><scope>eternity::bin_archive</scope><name>operator&lt;&lt;</name></member>
      <member refid="classeternity_1_1bin__archive_1a5cc61f7f70b1d809fbece79ccb9ecb26" prot="public" virt="non-virtual"><scope>eternity::bin_archive</scope><name>operator&lt;&lt;</name></member>
      <member refid="classeternity_1_1bin__archive_1a8c431d394555d953019fe1f35ca77ffd" prot="public" virt="non-virtual"><scope>eternity::bin_archive</scope><name>operator&gt;&gt;</name></member>
      <member refid="classeternity_1_1bin__archive_1a4cbbd8dff6b78cf3868a49b30261dd26" prot="public" virt="non-virtual"><scope>eternity::bin_archive</scope><name>operator&gt;&gt;</name></member>
      <member refid="classeternity_1_1bin__archive_1ab93c74313a8c6afdc65d4f2f2860502c" prot="public" virt="non-virtual"><scope>eternity::bin_archive</scope><name>put_object</name></member>
      <member refid="classeternity_1_1archive_1a2c4ab8d0935b130b38bce44f600bee99" prot="public" virt="non-virtual"><scope>eternity::bin_archive</scope><name>put_pointer</name></member>
      <member refid="classeternity_1_1bin__archive_1a5d67b032541f5a1e104d2fcd0eaa7a55" prot="public" virt="pure-virtual"><scope>eternity::bin_archive</scope><name>read</name></member>
      <member refid="classeternity_1_1archive_1a759dd5567021290542de13d090aa0963" prot="public" virt="non-virtual"><scope>eternity::bin_archive</scope><name>set_loading</name></member>
      <member refid="classeternity_1_1archive_1a8881f9ce8dbed2ee600c64b7925afef0a06c18c297779389cb1cb03a2a7590ca8" prot="public" virt="non-virtual"><scope>eternity::bin_archive</scope><name>store</name></member>
      <member refid="classeternity_1_1bin__archive_1acbe041b0815f2721ee18ad042557b14e" prot="public" virt="pure-virtual"><scope>eternity::bin_archive</scope><name>write</name></member>
      <member refid="classeternity_1_1bin__archive_1a0cc44edd050d598ff4f617e445159386" prot="public" virt="virtual"><scope>eternity::bin_archive</scope><name>~bin_archive</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
