<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classtsa_1_1_b_l_interpolation" kind="class" language="C++" prot="public">
    <compoundname>tsa::BLInterpolation</compoundname>
    <basecompoundref refid="classtsa_1_1_algo_base" prot="public" virt="non-virtual">tsa::AlgoBase</basecompoundref>
    <includes refid="_b_l_interpolation_8hpp" local="no">BLInterpolation.hpp</includes>
      <sectiondef kind="user-defined">
      <header>User interface</header>
      <memberdef kind="function" id="classtsa_1_1_b_l_interpolation_1ad4ce3e5cb5bc89e8de11a0dc1d54121e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtsa_1_1_b_l_interpolation" kindref="compound">BLInterpolation</ref> &amp;</type>
        <definition>BLInterpolation &amp; tsa::BLInterpolation::Input</definition>
        <argsstring>(SeqViewDouble &amp;indata)</argsstring>
        <name>Input</name>
        <param>
          <type><ref refid="namespacetsa_1ac599574bcc094eda25613724b8f3ca9e" kindref="member">SeqViewDouble</ref> &amp;</type>
          <declname>indata</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add data to be resampled. This method can be called repeatedly, each time with a different chunk of data. The chunks are considered as consecutive pieces of a continuous stream.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>indata</parametername>
</parameternamelist>
<parameterdescription>
<para>view containing input data</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a reference to an instance of this class</para></simplesect>
<simplesect kind="pre"><para>the number of rows in indata must be equal to the number of channels </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/BLInterpolation.hpp" line="141" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/src/BLInterpolation.cpp" bodystart="67" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="classtsa_1_1_b_l_interpolation_1aa67c8de249d447dea6bb6b9d353139bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtsa_1_1_b_l_interpolation" kindref="compound">BLInterpolation</ref> &amp;</type>
        <definition>BLInterpolation &amp; tsa::BLInterpolation::Output</definition>
        <argsstring>(SeqViewDouble &amp;outdata)</argsstring>
        <name>Output</name>
        <param>
          <type><ref refid="namespacetsa_1ac599574bcc094eda25613724b8f3ca9e" kindref="member">SeqViewDouble</ref> &amp;</type>
          <declname>outdata</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get resampled data. If there are enough resampled data available these are returned, otherwise an exception is raised.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>outdata</parametername>
</parameternamelist>
<parameterdescription>
<para>view which will be filled with resampled data</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a reference to an instance of this class</para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classtsa_1_1no__data__available" kindref="compound">no_data_available</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>there are not enough resampled data available</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="post"><para>if no exception is raised outdata has a number of rows equal to the number of channels and a number of columns equal to the number of returned data </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/BLInterpolation.hpp" line="158" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/src/BLInterpolation.cpp" bodystart="81" bodyend="103"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Getters</header>
      <memberdef kind="function" id="classtsa_1_1_b_l_interpolation_1a10f95a5ac0e7cc6981d30ed420404a3d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long int</type>
        <definition>long int tsa::BLInterpolation::GetDataAvailable</definition>
        <argsstring>()</argsstring>
        <name>GetDataAvailable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/BLInterpolation.hpp" line="178" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/BLInterpolation.hpp" bodystart="178" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="classtsa_1_1_b_l_interpolation_1a30ed4268c0691edf852ddb3c2ce541c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int tsa::BLInterpolation::GetData</definition>
        <argsstring>(Dmatrix &amp;outdata)</argsstring>
        <name>GetData</name>
        <param>
          <type><ref refid="namespacetsa_1ad260cd21c1891c4ed391fe788569aba4" kindref="member">Dmatrix</ref> &amp;</type>
          <declname>outdata</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get resampled data</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>outdata</parametername>
</parameternamelist>
<parameterdescription>
<para>a matrix which will be filled with resampled data</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the number of resampled data returned </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/BLInterpolation.hpp" line="189" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/src/BLInterpolation.cpp" bodystart="109" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="classtsa_1_1_b_l_interpolation_1a4fa7c4bfb9e12a3eb6767fc6b128093c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double tsa::BLInterpolation::GetStartTime</definition>
        <argsstring>()</argsstring>
        <name>GetStartTime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Start time of the next sequence of resampled data.</para><para><simplesect kind="return"><para>the start time of the next sequence of resampled data </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/BLInterpolation.hpp" line="197" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/src/BLInterpolation.cpp" bodystart="105" bodyend="107"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Setters</header>
      <memberdef kind="function" id="classtsa_1_1_b_l_interpolation_1ac8a67161f8c0aeb39ced9d36664860ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tsa::BLInterpolation::SetData</definition>
        <argsstring>(Dmatrix &amp;indata, double scale)</argsstring>
        <name>SetData</name>
        <param>
          <type><ref refid="namespacetsa_1ad260cd21c1891c4ed391fe788569aba4" kindref="member">Dmatrix</ref> &amp;</type>
          <declname>indata</declname>
        </param>
        <param>
          <type>double</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add data to be resampled</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>indata</parametername>
</parameternamelist>
<parameterdescription>
<para>a matrix which contains input data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>scale</parametername>
</parameternamelist>
<parameterdescription>
<para>a scale parameter for input data </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/BLInterpolation.hpp" line="213" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/src/BLInterpolation.cpp" bodystart="169" bodyend="185"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classtsa_1_1_b_l_interpolation_1ae11719d30e353da11f076289b87c7b1d" prot="public" static="no">
        <name>NormalizationType</name>
        <enumvalue id="classtsa_1_1_b_l_interpolation_1ae11719d30e353da11f076289b87c7b1da2eb150e3b7e6ed1aff3dadd9dae02b5b" prot="public">
          <name>NONormalization</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classtsa_1_1_b_l_interpolation_1ae11719d30e353da11f076289b87c7b1da203bdef13ad529ea833b62c762c1a395" prot="public">
          <name>DCNormalization</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/BLInterpolation.hpp" line="77" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/BLInterpolation.hpp" bodystart="77" bodyend="80"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classtsa_1_1_b_l_interpolation_1a1299ee71922f13c989b9961a0adcd14f" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int tsa::BLInterpolation::mChannels</definition>
        <argsstring></argsstring>
        <name>mChannels</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Number of channels to resample </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/BLInterpolation.hpp" line="244" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/BLInterpolation.hpp" bodystart="244" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtsa_1_1_b_l_interpolation_1ab8ea8e129045096ccb53d1b5e6d27329" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int tsa::BLInterpolation::mOutData</definition>
        <argsstring></argsstring>
        <name>mOutData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Number of resampled data for channel that will be returned if possible at each call </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/BLInterpolation.hpp" line="245" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/BLInterpolation.hpp" bodystart="245" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtsa_1_1_b_l_interpolation_1a3fc5200b462e9fbd87644f2d5bfa4381" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int tsa::BLInterpolation::mInputRate</definition>
        <argsstring></argsstring>
        <name>mInputRate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Input rate of data </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/BLInterpolation.hpp" line="246" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/BLInterpolation.hpp" bodystart="246" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtsa_1_1_b_l_interpolation_1a4511cbb0d6e97a901e8d52cffad670a1" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int tsa::BLInterpolation::mOutputRate</definition>
        <argsstring></argsstring>
        <name>mOutputRate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Output rate of data </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/BLInterpolation.hpp" line="247" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/BLInterpolation.hpp" bodystart="247" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtsa_1_1_b_l_interpolation_1aa8c5e5637c561ed9b3eabe6b8027e5da" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int tsa::BLInterpolation::mOrder</definition>
        <argsstring></argsstring>
        <name>mOrder</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Order of the filter </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/BLInterpolation.hpp" line="248" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/BLInterpolation.hpp" bodystart="248" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtsa_1_1_b_l_interpolation_1a768c64c85e393f975e2caaaba7bc5f90" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double tsa::BLInterpolation::mAlpha</definition>
        <argsstring></argsstring>
        <name>mAlpha</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Parameter of the Kaiser window </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/BLInterpolation.hpp" line="249" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/BLInterpolation.hpp" bodystart="249" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtsa_1_1_b_l_interpolation_1ab7b685a2b64f9139ca4ea3907f6b0a07" prot="private" static="no" mutable="no">
        <type>std::queue&lt; <ref refid="namespacetsa_1a8900fb03d849baf447a1a0efe2561fb2" kindref="member">Dvector</ref> * &gt;</type>
        <definition>std::queue&lt;Dvector*&gt; tsa::BLInterpolation::mRepository</definition>
        <argsstring></argsstring>
        <name>mRepository</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Repository for unused data points </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/BLInterpolation.hpp" line="251" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/BLInterpolation.hpp" bodystart="251" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtsa_1_1_b_l_interpolation_1ad40701a7e17ce4a2368605c0e77ec6a7" prot="private" static="no" mutable="no">
        <type>std::deque&lt; <ref refid="namespacetsa_1a8900fb03d849baf447a1a0efe2561fb2" kindref="member">Dvector</ref> * &gt;</type>
        <definition>std::deque&lt;Dvector*&gt; tsa::BLInterpolation::mBuffer</definition>
        <argsstring></argsstring>
        <name>mBuffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Buffer for incoming data points </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/BLInterpolation.hpp" line="252" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/BLInterpolation.hpp" bodystart="252" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtsa_1_1_b_l_interpolation_1a7e179ad859cffc61384efe0bc841255b" prot="private" static="no" mutable="no">
        <type>long int</type>
        <definition>long int tsa::BLInterpolation::mBufferBase</definition>
        <argsstring></argsstring>
        <name>mBufferBase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Start of the buffer, in ticks units </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/BLInterpolation.hpp" line="253" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/BLInterpolation.hpp" bodystart="253" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtsa_1_1_b_l_interpolation_1a21a038009c7323c00263367ca678f767" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double tsa::BLInterpolation::mRho</definition>
        <argsstring></argsstring>
        <name>mRho</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Normalization factor for upsampling/downsampling </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/BLInterpolation.hpp" line="256" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/BLInterpolation.hpp" bodystart="256" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtsa_1_1_b_l_interpolation_1ab0b2cee3d403a0ae8d3cc3d5c0618f02" prot="private" static="no" mutable="no">
        <type><ref refid="namespacetsa_1a8900fb03d849baf447a1a0efe2561fb2" kindref="member">Dvector</ref> *</type>
        <definition>Dvector* tsa::BLInterpolation::mFilter</definition>
        <argsstring></argsstring>
        <name>mFilter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Template for the filter </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/BLInterpolation.hpp" line="257" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/BLInterpolation.hpp" bodystart="257" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtsa_1_1_b_l_interpolation_1ac7684f2b6ae85030eac7992412df45aa" prot="private" static="no" mutable="no">
        <type>long int</type>
        <definition>long int tsa::BLInterpolation::mFilterCenter</definition>
        <argsstring></argsstring>
        <name>mFilterCenter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Center of the filter, in ticks units </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/BLInterpolation.hpp" line="258" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/BLInterpolation.hpp" bodystart="258" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtsa_1_1_b_l_interpolation_1a5390ed81fda1345890543a95ab91a6e2" prot="private" static="no" mutable="no">
        <type><ref refid="namespacetsa_1a8900fb03d849baf447a1a0efe2561fb2" kindref="member">Dvector</ref></type>
        <definition>Dvector tsa::BLInterpolation::mNormalization</definition>
        <argsstring></argsstring>
        <name>mNormalization</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/BLInterpolation.hpp" line="260" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/BLInterpolation.hpp" bodystart="260" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtsa_1_1_b_l_interpolation_1aa41a64576f7c0df22870378780d8f73d" prot="private" static="no" mutable="no">
        <type><ref refid="classtsa_1_1_b_l_interpolation_1ae11719d30e353da11f076289b87c7b1d" kindref="member">NormalizationType</ref></type>
        <definition>NormalizationType tsa::BLInterpolation::mNormalizationType</definition>
        <argsstring></argsstring>
        <name>mNormalizationType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/BLInterpolation.hpp" line="261" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/BLInterpolation.hpp" bodystart="261" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtsa_1_1_b_l_interpolation_1adf29f91edc45fbbf8127732fa4b971f0" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool tsa::BLInterpolation::mFirstData</definition>
        <argsstring></argsstring>
        <name>mFirstData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Flag: is the actual view the first submitted? </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/BLInterpolation.hpp" line="263" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/BLInterpolation.hpp" bodystart="263" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtsa_1_1_b_l_interpolation_1afed34dd05a75cc0eb6ce313a584aa9ef" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double tsa::BLInterpolation::mStartTime</definition>
        <argsstring></argsstring>
        <name>mStartTime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Start (physical) time for resampling </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/BLInterpolation.hpp" line="264" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/BLInterpolation.hpp" bodystart="264" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtsa_1_1_b_l_interpolation_1a76258e5da0c92a792af987a3f2cf972d" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double tsa::BLInterpolation::mSampling</definition>
        <argsstring></argsstring>
        <name>mSampling</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Physical sampling rate </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/BLInterpolation.hpp" line="265" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/BLInterpolation.hpp" bodystart="265" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtsa_1_1_b_l_interpolation_1aef84f84620a59efee8d1e2bb1cffd46d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tsa::BLInterpolation::BLInterpolation</definition>
        <argsstring>(unsigned int channels, unsigned int outdata, unsigned int irate, unsigned int orate, unsigned int order, double alpha=1.0, enum NormalizationType nt=NONormalization)</argsstring>
        <name>BLInterpolation</name>
        <param>
          <type>unsigned int</type>
          <declname>channels</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>outdata</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>irate</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>orate</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>order</declname>
        </param>
        <param>
          <type>double</type>
          <declname>alpha</declname>
          <defval>1.0</defval>
        </param>
        <param>
          <type>enum <ref refid="classtsa_1_1_b_l_interpolation_1ae11719d30e353da11f076289b87c7b1d" kindref="member">NormalizationType</ref></type>
          <declname>nt</declname>
          <defval><ref refid="classtsa_1_1_b_l_interpolation_1ae11719d30e353da11f076289b87c7b1da2eb150e3b7e6ed1aff3dadd9dae02b5b" kindref="member">NONormalization</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channels</parametername>
</parameternamelist>
<parameterdescription>
<para>number of channels </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outdata</parametername>
</parameternamelist>
<parameterdescription>
<para>number of resampled data returned at each call </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>irate</parametername>
</parameternamelist>
<parameterdescription>
<para>input rate </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>orate</parametername>
</parameternamelist>
<parameterdescription>
<para>output rate </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>order</parametername>
</parameternamelist>
<parameterdescription>
<para>order of filter </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>alpha</parametername>
</parameternamelist>
<parameterdescription>
<para>window parameter </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/BLInterpolation.hpp" line="92" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/src/BLInterpolation.cpp" bodystart="5" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="classtsa_1_1_b_l_interpolation_1ace4ab80e2c9f5147685bd22d5ee5841e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tsa::BLInterpolation::BLInterpolation</definition>
        <argsstring>(const BLInterpolation &amp;from)</argsstring>
        <name>BLInterpolation</name>
        <param>
          <type>const <ref refid="classtsa_1_1_b_l_interpolation" kindref="compound">BLInterpolation</ref> &amp;</type>
          <declname>from</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy constructor</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>from</parametername>
</parameternamelist>
<parameterdescription>
<para>The instance that must be copied </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/BLInterpolation.hpp" line="106" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/src/BLInterpolation.cpp" bodystart="24" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="classtsa_1_1_b_l_interpolation_1a67cd882b93c7643cd0fdce08b7fa876f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tsa::BLInterpolation::~BLInterpolation</definition>
        <argsstring>()</argsstring>
        <name>~BLInterpolation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destructor </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/BLInterpolation.hpp" line="111" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/src/BLInterpolation.cpp" bodystart="36" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classtsa_1_1_b_l_interpolation_1a71b2bc1e0a68abe528d5c753b4a5c1c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtsa_1_1_b_l_interpolation" kindref="compound">BLInterpolation</ref> &amp;</type>
        <definition>BLInterpolation &amp; tsa::BLInterpolation::operator=</definition>
        <argsstring>(const BLInterpolation &amp;from)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classtsa_1_1_b_l_interpolation" kindref="compound">BLInterpolation</ref> &amp;</type>
          <declname>from</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Assignement operator</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>from</parametername>
</parameternamelist>
<parameterdescription>
<para>The instance to be assigned from</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a reference to a new object </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/BLInterpolation.hpp" line="120" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/src/BLInterpolation.cpp" bodystart="51" bodyend="63"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classtsa_1_1_b_l_interpolation_1aff26a1c884d2733cebf280a556987e51" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tsa::BLInterpolation::Init</definition>
        <argsstring>()</argsstring>
        <name>Init</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initialize internal structures </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/BLInterpolation.hpp" line="229" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/src/BLInterpolation.cpp" bodystart="187" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="classtsa_1_1_b_l_interpolation_1a7b429b2867b887e3fec9d44c584f026c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tsa::BLInterpolation::NORenormalization</definition>
        <argsstring>()</argsstring>
        <name>NORenormalization</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/BLInterpolation.hpp" line="231" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/src/BLInterpolation.cpp" bodystart="267" bodyend="274"/>
      </memberdef>
      <memberdef kind="function" id="classtsa_1_1_b_l_interpolation_1a5d7f3b437e0aa09df7831c2b72a39f62" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tsa::BLInterpolation::DCRenormalization</definition>
        <argsstring>()</argsstring>
        <name>DCRenormalization</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/BLInterpolation.hpp" line="233" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/src/BLInterpolation.cpp" bodystart="276" bodyend="288"/>
      </memberdef>
      <memberdef kind="function" id="classtsa_1_1_b_l_interpolation_1a8eeac8a3a0439f46764cf1455bd2febe" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double tsa::BLInterpolation::Kaiser</definition>
        <argsstring>(double x)</argsstring>
        <name>Kaiser</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Kaiser window.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>position in the window (between -1 and 1)</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the value of Kaiser window at index k </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/BLInterpolation.hpp" line="242" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/src/BLInterpolation.cpp" bodystart="235" bodyend="238"/>
      </memberdef>
      <memberdef kind="function" id="classtsa_1_1_b_l_interpolation_1a23d1958ad6c23572e21c39ad421bf2a2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tsa::BLInterpolation::add_back_point</definition>
        <argsstring>()</argsstring>
        <name>add_back_point</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a new data point to the buffer. If possible this is taken from the repository, allocated otherwise. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/BLInterpolation.hpp" line="274" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/src/BLInterpolation.cpp" bodystart="240" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="classtsa_1_1_b_l_interpolation_1ac9f1957097458403fd2919445d3323db" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tsa::BLInterpolation::del_front_point</definition>
        <argsstring>(unsigned int n)</argsstring>
        <name>del_front_point</name>
        <param>
          <type>unsigned int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Delete some points from the buffer (the oldest ones) and increment the start of the buffer position mBuffer</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>number of points to delete from the buffer </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/BLInterpolation.hpp" line="282" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/src/BLInterpolation.cpp" bodystart="249" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="classtsa_1_1_b_l_interpolation_1adfb54e2b5bd52c05c3caaf062f97d9b6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long int</type>
        <definition>long int tsa::BLInterpolation::resampled_available</definition>
        <argsstring>()</argsstring>
        <name>resampled_available</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function returns the number of resampled data which are available at the current time.</para><para><simplesect kind="return"><para>resampled data available </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/BLInterpolation.hpp" line="290" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/src/BLInterpolation.cpp" bodystart="260" bodyend="265"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Band limited interpolation. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="160">
        <label>tsa::BLInterpolation</label>
        <link refid="classtsa_1_1_b_l_interpolation"/>
        <childnode refid="161" relation="public-inheritance">
        </childnode>
      </node>
      <node id="161">
        <label>tsa::AlgoBase</label>
        <link refid="classtsa_1_1_algo_base"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="162">
        <label>tsa::BLInterpolation</label>
        <link refid="classtsa_1_1_b_l_interpolation"/>
        <childnode refid="163" relation="public-inheritance">
        </childnode>
      </node>
      <node id="163">
        <label>tsa::AlgoBase</label>
        <link refid="classtsa_1_1_algo_base"/>
      </node>
    </collaborationgraph>
    <location file="/home/filip/PhD/WDFPipe_test/p4TSA/include/BLInterpolation.hpp" line="74" column="1" bodyfile="/home/filip/PhD/WDFPipe_test/p4TSA/include/BLInterpolation.hpp" bodystart="74" bodyend="291"/>
    <listofallmembers>
      <member refid="classtsa_1_1_b_l_interpolation_1a23d1958ad6c23572e21c39ad421bf2a2" prot="private" virt="non-virtual"><scope>tsa::BLInterpolation</scope><name>add_back_point</name></member>
      <member refid="classtsa_1_1_b_l_interpolation_1aef84f84620a59efee8d1e2bb1cffd46d" prot="public" virt="non-virtual"><scope>tsa::BLInterpolation</scope><name>BLInterpolation</name></member>
      <member refid="classtsa_1_1_b_l_interpolation_1ace4ab80e2c9f5147685bd22d5ee5841e" prot="public" virt="non-virtual"><scope>tsa::BLInterpolation</scope><name>BLInterpolation</name></member>
      <member refid="classtsa_1_1_b_l_interpolation_1ae11719d30e353da11f076289b87c7b1da203bdef13ad529ea833b62c762c1a395" prot="public" virt="non-virtual"><scope>tsa::BLInterpolation</scope><name>DCNormalization</name></member>
      <member refid="classtsa_1_1_b_l_interpolation_1a5d7f3b437e0aa09df7831c2b72a39f62" prot="private" virt="non-virtual"><scope>tsa::BLInterpolation</scope><name>DCRenormalization</name></member>
      <member refid="classtsa_1_1_b_l_interpolation_1ac9f1957097458403fd2919445d3323db" prot="private" virt="non-virtual"><scope>tsa::BLInterpolation</scope><name>del_front_point</name></member>
      <member refid="classtsa_1_1_b_l_interpolation_1a30ed4268c0691edf852ddb3c2ce541c7" prot="public" virt="non-virtual"><scope>tsa::BLInterpolation</scope><name>GetData</name></member>
      <member refid="classtsa_1_1_b_l_interpolation_1a10f95a5ac0e7cc6981d30ed420404a3d" prot="public" virt="non-virtual"><scope>tsa::BLInterpolation</scope><name>GetDataAvailable</name></member>
      <member refid="classtsa_1_1_b_l_interpolation_1a4fa7c4bfb9e12a3eb6767fc6b128093c" prot="public" virt="non-virtual"><scope>tsa::BLInterpolation</scope><name>GetStartTime</name></member>
      <member refid="classtsa_1_1_b_l_interpolation_1aff26a1c884d2733cebf280a556987e51" prot="private" virt="non-virtual"><scope>tsa::BLInterpolation</scope><name>Init</name></member>
      <member refid="classtsa_1_1_b_l_interpolation_1ad4ce3e5cb5bc89e8de11a0dc1d54121e" prot="public" virt="non-virtual"><scope>tsa::BLInterpolation</scope><name>Input</name></member>
      <member refid="classtsa_1_1_b_l_interpolation_1a8eeac8a3a0439f46764cf1455bd2febe" prot="private" virt="non-virtual"><scope>tsa::BLInterpolation</scope><name>Kaiser</name></member>
      <member refid="classtsa_1_1_b_l_interpolation_1a768c64c85e393f975e2caaaba7bc5f90" prot="private" virt="non-virtual"><scope>tsa::BLInterpolation</scope><name>mAlpha</name></member>
      <member refid="classtsa_1_1_b_l_interpolation_1ad40701a7e17ce4a2368605c0e77ec6a7" prot="private" virt="non-virtual"><scope>tsa::BLInterpolation</scope><name>mBuffer</name></member>
      <member refid="classtsa_1_1_b_l_interpolation_1a7e179ad859cffc61384efe0bc841255b" prot="private" virt="non-virtual"><scope>tsa::BLInterpolation</scope><name>mBufferBase</name></member>
      <member refid="classtsa_1_1_b_l_interpolation_1a1299ee71922f13c989b9961a0adcd14f" prot="private" virt="non-virtual"><scope>tsa::BLInterpolation</scope><name>mChannels</name></member>
      <member refid="classtsa_1_1_b_l_interpolation_1ab0b2cee3d403a0ae8d3cc3d5c0618f02" prot="private" virt="non-virtual"><scope>tsa::BLInterpolation</scope><name>mFilter</name></member>
      <member refid="classtsa_1_1_b_l_interpolation_1ac7684f2b6ae85030eac7992412df45aa" prot="private" virt="non-virtual"><scope>tsa::BLInterpolation</scope><name>mFilterCenter</name></member>
      <member refid="classtsa_1_1_b_l_interpolation_1adf29f91edc45fbbf8127732fa4b971f0" prot="private" virt="non-virtual"><scope>tsa::BLInterpolation</scope><name>mFirstData</name></member>
      <member refid="classtsa_1_1_b_l_interpolation_1a3fc5200b462e9fbd87644f2d5bfa4381" prot="private" virt="non-virtual"><scope>tsa::BLInterpolation</scope><name>mInputRate</name></member>
      <member refid="classtsa_1_1_b_l_interpolation_1a5390ed81fda1345890543a95ab91a6e2" prot="private" virt="non-virtual"><scope>tsa::BLInterpolation</scope><name>mNormalization</name></member>
      <member refid="classtsa_1_1_b_l_interpolation_1aa41a64576f7c0df22870378780d8f73d" prot="private" virt="non-virtual"><scope>tsa::BLInterpolation</scope><name>mNormalizationType</name></member>
      <member refid="classtsa_1_1_b_l_interpolation_1aa8c5e5637c561ed9b3eabe6b8027e5da" prot="private" virt="non-virtual"><scope>tsa::BLInterpolation</scope><name>mOrder</name></member>
      <member refid="classtsa_1_1_b_l_interpolation_1ab8ea8e129045096ccb53d1b5e6d27329" prot="private" virt="non-virtual"><scope>tsa::BLInterpolation</scope><name>mOutData</name></member>
      <member refid="classtsa_1_1_b_l_interpolation_1a4511cbb0d6e97a901e8d52cffad670a1" prot="private" virt="non-virtual"><scope>tsa::BLInterpolation</scope><name>mOutputRate</name></member>
      <member refid="classtsa_1_1_b_l_interpolation_1ab7b685a2b64f9139ca4ea3907f6b0a07" prot="private" virt="non-virtual"><scope>tsa::BLInterpolation</scope><name>mRepository</name></member>
      <member refid="classtsa_1_1_b_l_interpolation_1a21a038009c7323c00263367ca678f767" prot="private" virt="non-virtual"><scope>tsa::BLInterpolation</scope><name>mRho</name></member>
      <member refid="classtsa_1_1_b_l_interpolation_1a76258e5da0c92a792af987a3f2cf972d" prot="private" virt="non-virtual"><scope>tsa::BLInterpolation</scope><name>mSampling</name></member>
      <member refid="classtsa_1_1_b_l_interpolation_1afed34dd05a75cc0eb6ce313a584aa9ef" prot="private" virt="non-virtual"><scope>tsa::BLInterpolation</scope><name>mStartTime</name></member>
      <member refid="classtsa_1_1_b_l_interpolation_1ae11719d30e353da11f076289b87c7b1da2eb150e3b7e6ed1aff3dadd9dae02b5b" prot="public" virt="non-virtual"><scope>tsa::BLInterpolation</scope><name>NONormalization</name></member>
      <member refid="classtsa_1_1_b_l_interpolation_1a7b429b2867b887e3fec9d44c584f026c" prot="private" virt="non-virtual"><scope>tsa::BLInterpolation</scope><name>NORenormalization</name></member>
      <member refid="classtsa_1_1_b_l_interpolation_1ae11719d30e353da11f076289b87c7b1d" prot="public" virt="non-virtual"><scope>tsa::BLInterpolation</scope><name>NormalizationType</name></member>
      <member refid="classtsa_1_1_b_l_interpolation_1a71b2bc1e0a68abe528d5c753b4a5c1c1" prot="public" virt="non-virtual"><scope>tsa::BLInterpolation</scope><name>operator=</name></member>
      <member refid="classtsa_1_1_b_l_interpolation_1aa67c8de249d447dea6bb6b9d353139bc" prot="public" virt="non-virtual"><scope>tsa::BLInterpolation</scope><name>Output</name></member>
      <member refid="classtsa_1_1_b_l_interpolation_1adfb54e2b5bd52c05c3caaf062f97d9b6" prot="private" virt="non-virtual"><scope>tsa::BLInterpolation</scope><name>resampled_available</name></member>
      <member refid="classtsa_1_1_b_l_interpolation_1ac8a67161f8c0aeb39ced9d36664860ba" prot="public" virt="non-virtual"><scope>tsa::BLInterpolation</scope><name>SetData</name></member>
      <member refid="classtsa_1_1_b_l_interpolation_1a67cd882b93c7643cd0fdce08b7fa876f" prot="public" virt="non-virtual"><scope>tsa::BLInterpolation</scope><name>~BLInterpolation</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
