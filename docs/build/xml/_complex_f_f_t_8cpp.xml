<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="_complex_f_f_t_8cpp" kind="file" language="C++">
    <compoundname>ComplexFFT.cpp</compoundname>
    <includes refid="_complex_f_f_t_8hpp" local="no">ComplexFFT.hpp</includes>
    <incdepgraph>
      <node id="5122">
        <label>tsaTraits.hpp</label>
        <link refid="tsa_traits_8hpp"/>
        <childnode refid="5123" relation="include">
        </childnode>
      </node>
      <node id="5091">
        <label>ComplexFFT.hpp</label>
        <link refid="_complex_f_f_t_8hpp"/>
        <childnode refid="5092" relation="include">
        </childnode>
      </node>
      <node id="5103">
        <label>eternity.hpp</label>
        <link refid="eternity_8hpp"/>
        <childnode refid="5104" relation="include">
        </childnode>
        <childnode refid="5106" relation="include">
        </childnode>
        <childnode refid="5111" relation="include">
        </childnode>
        <childnode refid="5115" relation="include">
        </childnode>
      </node>
      <node id="5108">
        <label>stdlib.h</label>
      </node>
      <node id="5097">
        <label>stdexcept</label>
      </node>
      <node id="5117">
        <label>tsaTypes.hpp</label>
        <link refid="tsa_types_8hpp"/>
        <childnode refid="5099" relation="include">
        </childnode>
        <childnode refid="5094" relation="include">
        </childnode>
        <childnode refid="5118" relation="include">
        </childnode>
        <childnode refid="5100" relation="include">
        </childnode>
        <childnode refid="5103" relation="include">
        </childnode>
      </node>
      <node id="5101">
        <label>string</label>
      </node>
      <node id="5104">
        <label>eternity/dynamic.hpp</label>
        <link refid="dynamic_8hpp"/>
        <childnode refid="5093" relation="include">
        </childnode>
        <childnode refid="5105" relation="include">
        </childnode>
        <childnode refid="5101" relation="include">
        </childnode>
      </node>
      <node id="5113">
        <label>map</label>
      </node>
      <node id="5119">
        <label>tsaLog.hpp</label>
        <link refid="tsa_log_8hpp"/>
        <childnode refid="5098" relation="include">
        </childnode>
        <childnode refid="5099" relation="include">
        </childnode>
        <childnode refid="5120" relation="include">
        </childnode>
      </node>
      <node id="5095">
        <label>fftw3.h</label>
      </node>
      <node id="5090">
        <label>/home/filip/PhD/WDFPipe_test/p4TSA/src/ComplexFFT.cpp</label>
        <link refid="_complex_f_f_t_8cpp"/>
        <childnode refid="5091" relation="include">
        </childnode>
      </node>
      <node id="5099">
        <label>fstream</label>
      </node>
      <node id="5112">
        <label>xmlscanner.hpp</label>
        <link refid="xmlscanner_8hpp"/>
        <childnode refid="5107" relation="include">
        </childnode>
        <childnode refid="5108" relation="include">
        </childnode>
        <childnode refid="5109" relation="include">
        </childnode>
        <childnode refid="5113" relation="include">
        </childnode>
        <childnode refid="5110" relation="include">
        </childnode>
        <childnode refid="5099" relation="include">
        </childnode>
        <childnode refid="5101" relation="include">
        </childnode>
        <childnode refid="5098" relation="include">
        </childnode>
      </node>
      <node id="5102">
        <label>tsaSerialize.hpp</label>
        <link refid="tsa_serialize_8hpp"/>
        <childnode refid="5097" relation="include">
        </childnode>
        <childnode refid="5098" relation="include">
        </childnode>
        <childnode refid="5099" relation="include">
        </childnode>
        <childnode refid="5103" relation="include">
        </childnode>
        <childnode refid="5117" relation="include">
        </childnode>
      </node>
      <node id="5126">
        <label>fparser.hpp</label>
        <link refid="fparser_8hpp"/>
        <childnode refid="5101" relation="include">
        </childnode>
        <childnode refid="5113" relation="include">
        </childnode>
        <childnode refid="5109" relation="include">
        </childnode>
      </node>
      <node id="5096">
        <label>AlgoBase.hpp</label>
        <link refid="_algo_base_8hpp"/>
        <childnode refid="5097" relation="include">
        </childnode>
        <childnode refid="5098" relation="include">
        </childnode>
        <childnode refid="5099" relation="include">
        </childnode>
        <childnode refid="5094" relation="include">
        </childnode>
        <childnode refid="5100" relation="include">
        </childnode>
        <childnode refid="5101" relation="include">
        </childnode>
        <childnode refid="5102" relation="include">
        </childnode>
        <childnode refid="5117" relation="include">
        </childnode>
        <childnode refid="5119" relation="include">
        </childnode>
        <childnode refid="5121" relation="include">
        </childnode>
        <childnode refid="5127" relation="include">
        </childnode>
        <childnode refid="5129" relation="include">
        </childnode>
      </node>
      <node id="5106">
        <label>eternity/persist.hpp</label>
        <link refid="persist_8hpp"/>
        <childnode refid="5104" relation="include">
        </childnode>
        <childnode refid="5107" relation="include">
        </childnode>
        <childnode refid="5108" relation="include">
        </childnode>
        <childnode refid="5109" relation="include">
        </childnode>
        <childnode refid="5110" relation="include">
        </childnode>
        <childnode refid="5099" relation="include">
        </childnode>
      </node>
      <node id="5125">
        <label>string.h</label>
      </node>
      <node id="5105">
        <label>typeinfo</label>
      </node>
      <node id="5100">
        <label>boost/numeric/ublas/io.hpp</label>
      </node>
      <node id="5120">
        <label>unistd.h</label>
      </node>
      <node id="5124">
        <label>tsaUtilityFunctions.hpp</label>
        <link refid="tsa_utility_functions_8hpp"/>
        <childnode refid="5125" relation="include">
        </childnode>
        <childnode refid="5126" relation="include">
        </childnode>
        <childnode refid="5123" relation="include">
        </childnode>
        <childnode refid="5099" relation="include">
        </childnode>
      </node>
      <node id="5109">
        <label>vector</label>
      </node>
      <node id="5121">
        <label>BaseView.hpp</label>
        <link refid="_base_view_8hpp"/>
        <childnode refid="5113" relation="include">
        </childnode>
        <childnode refid="5101" relation="include">
        </childnode>
        <childnode refid="5117" relation="include">
        </childnode>
        <childnode refid="5122" relation="include">
        </childnode>
        <childnode refid="5124" relation="include">
        </childnode>
        <childnode refid="5102" relation="include">
        </childnode>
        <childnode refid="5119" relation="include">
        </childnode>
      </node>
      <node id="5118">
        <label>boost/numeric/ublas/matrix_proxy.hpp</label>
      </node>
      <node id="5116">
        <label>sstream</label>
      </node>
      <node id="5128">
        <label>FrameL.h</label>
      </node>
      <node id="5129">
        <label>AlgoExceptions.hpp</label>
        <link refid="_algo_exceptions_8hpp"/>
        <childnode refid="5097" relation="include">
        </childnode>
        <childnode refid="5101" relation="include">
        </childnode>
      </node>
      <node id="5127">
        <label>SeqView.hpp</label>
        <link refid="_seq_view_8hpp"/>
        <childnode refid="5094" relation="include">
        </childnode>
        <childnode refid="5118" relation="include">
        </childnode>
        <childnode refid="5100" relation="include">
        </childnode>
        <childnode refid="5121" relation="include">
        </childnode>
        <childnode refid="5128" relation="include">
        </childnode>
      </node>
      <node id="5107">
        <label>math.h</label>
      </node>
      <node id="5094">
        <label>boost/numeric/ublas/matrix.hpp</label>
      </node>
      <node id="5098">
        <label>iostream</label>
      </node>
      <node id="5114">
        <label>deque</label>
      </node>
      <node id="5092">
        <label>BaseFFT.hpp</label>
        <link refid="_base_f_f_t_8hpp"/>
        <childnode refid="5093" relation="include">
        </childnode>
        <childnode refid="5094" relation="include">
        </childnode>
        <childnode refid="5095" relation="include">
        </childnode>
        <childnode refid="5096" relation="include">
        </childnode>
      </node>
      <node id="5111">
        <label>eternity/persist_xml.hpp</label>
        <link refid="persist__xml_8hpp"/>
        <childnode refid="5106" relation="include">
        </childnode>
        <childnode refid="5112" relation="include">
        </childnode>
        <childnode refid="5114" relation="include">
        </childnode>
      </node>
      <node id="5123">
        <label>complex</label>
      </node>
      <node id="5115">
        <label>eternity/algorithms.hpp</label>
        <link refid="algorithms_8hpp"/>
        <childnode refid="5106" relation="include">
        </childnode>
        <childnode refid="5111" relation="include">
        </childnode>
        <childnode refid="5112" relation="include">
        </childnode>
        <childnode refid="5116" relation="include">
        </childnode>
      </node>
      <node id="5110">
        <label>algorithm</label>
      </node>
      <node id="5093">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacetsa">tsa</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_complex_f_f_t_8hpp" kindref="compound">ComplexFFT.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceboost_1_1numeric_1_1ublas" kindref="compound">boost::numeric::ublas</ref>;</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetsa" kindref="compound">tsa</ref><sp/>{</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7" refid="classtsa_1_1_complex_f_f_t_1af51dac1a455d6e943de87f1b0cf4d3d7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ComplexFFT::ComplexFFT(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size,<sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="classtsa_1_1_complex_f_f_t_1a4e90a372fa0610f957f2c683335aa766" kindref="member">TransformSign</ref><sp/>s,<sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespacetsa_1a217e07ef78939f88b22c8428ac96b1ae" kindref="member">FFTPlanningMode</ref><sp/>mode,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>PreserveInput)</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/>:</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtsa_1_1_base_f_f_t" kindref="compound">BaseFFT</ref>(size,<sp/>mode,<sp/>PreserveInput)<sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtsa_1_1_complex_f_f_t_1a97a15c1129372c7abb6ba3ba864ca065" kindref="member">mSign</ref><sp/>=<sp/>s;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="classtsa_1_1_complex_f_f_t_1a917ecfc43a0499d90abee599755625d7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtsa_1_1_complex_f_f_t_1af51dac1a455d6e943de87f1b0cf4d3d7" kindref="member">ComplexFFT::ComplexFFT</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtsa_1_1_complex_f_f_t" kindref="compound">ComplexFFT</ref>&amp;<sp/>from)</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>:</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtsa_1_1_base_f_f_t" kindref="compound">BaseFFT</ref>(from)<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtsa_1_1_complex_f_f_t_1a97a15c1129372c7abb6ba3ba864ca065" kindref="member">mSign</ref><sp/>=<sp/>from.<ref refid="classtsa_1_1_complex_f_f_t_1a97a15c1129372c7abb6ba3ba864ca065" kindref="member">mSign</ref>;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="classtsa_1_1_complex_f_f_t_1a80004962963b35cad0fb581040a47c0d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtsa_1_1_complex_f_f_t_1a80004962963b35cad0fb581040a47c0d" kindref="member">ComplexFFT::~ComplexFFT</ref>()<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="classtsa_1_1_complex_f_f_t_1ada17028929521c35d3505010846a9ed5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtsa_1_1_complex_f_f_t_1ada17028929521c35d3505010846a9ed5" kindref="member">ComplexFFT::execute</ref>(<ref refid="namespacetsa_1a86348fef1603a135fe5fba9e5f5486ee" kindref="member">Cmatrix</ref>&amp;<sp/>indata,<sp/><ref refid="namespacetsa_1a86348fef1603a135fe5fba9e5f5486ee" kindref="member">Cmatrix</ref>&amp;<sp/>outdata)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>(<ref refid="classtsa_1_1bad__matrix__size" kindref="compound">bad_matrix_size</ref>)<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((indata.size1()<sp/>!=<sp/>outdata.size1())<sp/>||<sp/>(indata.size2()<sp/>!=<sp/>outdata.size2()))<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classtsa_1_1bad__matrix__size" kindref="compound">bad_matrix_size</ref>(</highlight><highlight class="stringliteral">&quot;ComplexFFT::execute&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(indata.size2()<sp/>!=<sp/><ref refid="classtsa_1_1_base_f_f_t_1a171c71011fea314f23633b1816771d98" kindref="member">mLogicalSize</ref>)<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtsa_1_1_base_f_f_t_1aa89fef1777c6df148cdb8533265b6163" kindref="member">mPlanNeedsUpdate</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtsa_1_1_base_f_f_t_1aa89fef1777c6df148cdb8533265b6163" kindref="member">mPlanNeedsUpdate</ref>)<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtsa_1_1_base_f_f_t_1a171c71011fea314f23633b1816771d98" kindref="member">mLogicalSize</ref><sp/>=<sp/>indata.size2();</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtsa_1_1_complex_f_f_t_1a05acda3ab3fbb2ead70421e587cdd210" kindref="member">MakePlan</ref>();</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>isize1<sp/>=<sp/>indata.size1();</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>isize1;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fftw_execute_dft(</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtsa_1_1_base_f_f_t_1a5c7dd6dee349547018d493be6d5874eb" kindref="member">mPlan</ref>,</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(fftw_complex*)<sp/>&amp;<sp/>indata(i,<sp/>0),</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(fftw_complex*)<sp/>&amp;<sp/>outdata(i,<sp/>0)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="classtsa_1_1_complex_f_f_t_1a05acda3ab3fbb2ead70421e587cdd210" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtsa_1_1_complex_f_f_t_1a05acda3ab3fbb2ead70421e587cdd210" kindref="member">ComplexFFT::MakePlan</ref>()<sp/>throw<sp/>(<ref refid="namespacestd" kindref="compound">std</ref>::runtime_error)<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtsa_1_1_base_f_f_t_1a5c7dd6dee349547018d493be6d5874eb" kindref="member">mPlan</ref>)<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fftw_destroy_plan(<ref refid="classtsa_1_1_base_f_f_t_1a5c7dd6dee349547018d493be6d5874eb" kindref="member">mPlan</ref>);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fftw_complex<sp/>*in<sp/>=<sp/>(fftw_complex*)<sp/>fftw_malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(fftw_complex)<sp/>*<sp/><ref refid="classtsa_1_1_base_f_f_t_1a171c71011fea314f23633b1816771d98" kindref="member">mLogicalSize</ref>);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fftw_complex<sp/>*out<sp/>=<sp/>(fftw_complex*)<sp/>fftw_malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(fftw_complex)<sp/>*<sp/><ref refid="classtsa_1_1_base_f_f_t_1a171c71011fea314f23633b1816771d98" kindref="member">mLogicalSize</ref>);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtsa_1_1_base_f_f_t_1a5c7dd6dee349547018d493be6d5874eb" kindref="member">mPlan</ref><sp/>=<sp/>fftw_plan_dft_1d(<ref refid="classtsa_1_1_base_f_f_t_1a171c71011fea314f23633b1816771d98" kindref="member">mLogicalSize</ref>,<sp/>in,<sp/>out,<sp/><ref refid="classtsa_1_1_complex_f_f_t_1a97a15c1129372c7abb6ba3ba864ca065" kindref="member">mSign</ref>,<sp/>FFTW_UNALIGNED<sp/>|<sp/><ref refid="classtsa_1_1_base_f_f_t_1abbd656cda5a7cb6a88fc5d556d3269f7" kindref="member">mPlanningRigor</ref><sp/>|<sp/><ref refid="classtsa_1_1_base_f_f_t_1a2fe7f53db024bb408beeb5e22eaefbb9" kindref="member">mPlanningRestriction</ref>);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtsa_1_1_base_f_f_t_1a5c7dd6dee349547018d493be6d5874eb" kindref="member">mPlan</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;ComplexFFT::MakePlan&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fftw_free(in);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fftw_free(out);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtsa_1_1_base_f_f_t_1aa89fef1777c6df148cdb8533265b6163" kindref="member">mPlanNeedsUpdate</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="classtsa_1_1_complex_f_f_t_1a3096e3de532f9433415426697f5002c2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtsa_1_1_complex_f_f_t_1a3096e3de532f9433415426697f5002c2" kindref="member">ComplexFFT::SetSign</ref>(</highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="classtsa_1_1_complex_f_f_t_1a4e90a372fa0610f957f2c683335aa766" kindref="member">TransformSign</ref><sp/>s)<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SignNew<sp/>=<sp/>FFTW_FORWARD;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(s)<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classtsa_1_1_complex_f_f_t_1a4e90a372fa0610f957f2c683335aa766a907b249808a0c1affb86572baa34510f" kindref="member">FORWARD</ref>:</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SignNew<sp/>=<sp/>FFTW_FORWARD;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classtsa_1_1_complex_f_f_t_1a4e90a372fa0610f957f2c683335aa766ab056de3bb0b051b60f40de6cb7a560de" kindref="member">BACKWARD</ref>:</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SignNew<sp/>=<sp/>FFTW_BACKWARD;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(SignNew<sp/>!=<sp/><ref refid="classtsa_1_1_complex_f_f_t_1a97a15c1129372c7abb6ba3ba864ca065" kindref="member">mSign</ref>)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtsa_1_1_complex_f_f_t_1a97a15c1129372c7abb6ba3ba864ca065" kindref="member">mSign</ref><sp/>=<sp/>SignNew;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtsa_1_1_base_f_f_t_1aa89fef1777c6df148cdb8533265b6163" kindref="member">mPlanNeedsUpdate</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>--<sp/>end<sp/>namespace<sp/>tsa</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/filip/PhD/WDFPipe_test/p4TSA/src/ComplexFFT.cpp"/>
  </compounddef>
</doxygen>
