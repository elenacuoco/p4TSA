AutoGen Definitions dummy;
class = {
  cp-id     = 'classtsa_1_1_a_d_c___channel';
  cp-name   = 'tsa::ADC_Channel';
  cp-ref     = {
    ref-type = base;
    ref-id   = 'classtsa_1_1_channel_descriptor';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_a_d_c___channel_1a18595131ed55a3488ef56cfc0b39611d';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'ADC_Channel';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
FrameIStream *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'FIS';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
FrAdcData *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'adc';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'id';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp';
      sec-mem-desc-line = '240';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Constructor

@param FIS pointer to the FrameIStream class
@param adc pointer to the first FrAdcData structure
@param id id of the channel
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_a_d_c___channel_1a0f9c5bbb98da25e712d4f6f8c078e658';
      sec-mem-virt = virtual;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
virtual
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '~ADC_Channel';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp';
      sec-mem-desc-line = '246';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Destructor
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_a_d_c___channel_1a23052bc47591e46246701ec0573c7902';
      sec-mem-virt = virtual;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
virtual void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'AddData';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp';
      sec-mem-desc-line = '254';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This function must be called when there are not enough data 
to fill the output view. It reads a chunk of data from the 
current frame
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_a_d_c___channel_1ab5e23c219a7bf70866b05c9d3ad3da6f';
      sec-mem-virt = virtual;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
virtual double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'GetLength';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp';
      sec-mem-desc-line = '262';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Get the maximul time length of data that can be currently filled
without calling AddData.

@return the time length of the data available in seconds
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'public-static-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_a_d_c___channel_1a4585997f9f0029bb8d6fee7d36d33c92';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
static ADC_Channel *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Create';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
FrameIStream *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'FIS';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'name';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'id';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp';
      sec-mem-desc-line = '273';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Create, if possible, an instance of the class

@param FIS pointer to the FrameIStream class instance
@param name name of the channel
@param id index of the channel

@return pointer to the created class instance or null
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_a_d_c___channel_1a10f5984a8170a8cc68f5e78234166cd2';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mName';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp';
      sec-mem-desc-line = '276';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp';
  cp-fileline  = '230';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
A descriptor for an ADC channel
_EnD_oF_dEf_TeXt_;
  cp-inheritancegraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 504;
        node-label = 'tsa::ADC_Channel';
        node-link = {
          node-link-id = 'classtsa_1_1_a_d_c___channel';
        };
        node-child = {
          child-id = '505';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 505;
        node-label = 'tsa::ChannelDescriptor';
        node-link = {
          node-link-id = 'classtsa_1_1_channel_descriptor';
        };
        node-child = {
          child-id = '506';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 506;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 510;
        node-label = 'tsa::FrameIStream';
        node-link = {
          node-link-id = 'classtsa_1_1_frame_i_stream';
        };
        node-child = {
          child-id = '509';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 507;
        node-label = 'tsa::ADC_Channel';
        node-link = {
          node-link-id = 'classtsa_1_1_a_d_c___channel';
        };
        node-child = {
          child-id = '508';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 508;
        node-label = 'tsa::ChannelDescriptor';
        node-link = {
          node-link-id = 'classtsa_1_1_channel_descriptor';
        };
        node-child = {
          child-id = '509';
          relation = public-inheritance;
        }; /* node-child */
        node-child = {
          child-id = '510';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
mFIS
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 509;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classtsa_1_1_algo_base';
  cp-name   = 'tsa::AlgoBase';
  cp-ref     = {
    ref-type = derived;
    ref-id   = 'classtsa_1_1_a_r2';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-ref     = {
    ref-type = derived;
    ref-id   = 'classtsa_1_1_a_r2_parcor';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-ref     = {
    ref-type = derived;
    ref-id   = 'classtsa_1_1_ar_burg_estimator';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-ref     = {
    ref-type = derived;
    ref-id   = 'classtsa_1_1_ar_durbin_estimator';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-ref     = {
    ref-type = derived;
    ref-id   = 'classtsa_1_1_arma2_psd';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-ref     = {
    ref-type = derived;
    ref-id   = 'classtsa_1_1_arma2_t_f';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-ref     = {
    ref-type = derived;
    ref-id   = 'classtsa_1_1_a_r_m_a_filter';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-ref     = {
    ref-type = derived;
    ref-id   = 'classtsa_1_1_base_f_f_t';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-ref     = {
    ref-type = derived;
    ref-id   = 'classtsa_1_1_base_window';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-ref     = {
    ref-type = derived;
    ref-id   = 'classtsa_1_1_b_l_interpolation';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-ref     = {
    ref-type = derived;
    ref-id   = 'classtsa_1_1_butterworth_filter';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-ref     = {
    ref-type = derived;
    ref-id   = 'classtsa_1_1_channel_descriptor';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-ref     = {
    ref-type = derived;
    ref-id   = 'classtsa_1_1_double_whitening';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-ref     = {
    ref-type = derived;
    ref-id   = 'classtsa_1_1_frame_i_channel';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-ref     = {
    ref-type = derived;
    ref-id   = 'classtsa_1_1_frame_i_stream';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-ref     = {
    ref-type = derived;
    ref-id   = 'classtsa_1_1_lattice_filter';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-ref     = {
    ref-type = derived;
    ref-id   = 'classtsa_1_1_least_squares_lattice';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-ref     = {
    ref-type = derived;
    ref-id   = 'classtsa_1_1_l_s_lfilter';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-ref     = {
    ref-type = derived;
    ref-id   = 'classtsa_1_1_l_s_l_learning';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-ref     = {
    ref-type = derived;
    ref-id   = 'classtsa_1_1_notch_widrow';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-ref     = {
    ref-type = derived;
    ref-id   = 'classtsa_1_1_parcor2_a_r';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-ref     = {
    ref-type = derived;
    ref-id   = 'classtsa_1_1_r_l_s_canceler';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-ref     = {
    ref-type = derived;
    ref-id   = 'classtsa_1_1_selection_order_criteria';
    ref-prot = private;
    ref-virt = non-virtual;
  };
  cp-ref     = {
    ref-type = derived;
    ref-id   = 'classtsa_1_1_t_f2_p_s_d';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-ref     = {
    ref-type = derived;
    ref-id   = 'classtsa_1_1_util';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-ref     = {
    ref-type = derived;
    ref-id   = 'classtsa_1_1_v_arma2_t_f';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-ref     = {
    ref-type = derived;
    ref-id   = 'classtsa_1_1_view_util';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-ref     = {
    ref-type = derived;
    ref-id   = 'classtsa_1_1_wavelet_transform';
    ref-prot = private;
    ref-virt = non-virtual;
  };
  cp-ref     = {
    ref-type = derived;
    ref-id   = 'classtsa_1_1_wav_reconstruction';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-ref     = {
    ref-type = derived;
    ref-id   = 'classtsa_1_1_w_d_f2_classify';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-ref     = {
    ref-type = derived;
    ref-id   = 'classtsa_1_1_w_d_f2_reconstruct';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/AlgoBase.hpp';
  cp-fileline  = '64';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
AlgoBase is the abstract base class for all algorithm.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
AlgoBase is the abstract base class for all the algorithm classes.
It contain the definition of the common methods. An algorithm is a class
with one or more execute() methods, with a variable number of parameters.
_EnD_oF_dEf_TeXt_;
  cp-inheritancegraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 554;
        node-label = 'tsa::TF2PSD';
        node-link = {
          node-link-id = 'classtsa_1_1_t_f2_p_s_d';
        };
        node-child = {
          child-id = '511';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 521;
        node-label = 'tsa::DCT';
        node-link = {
          node-link-id = 'classtsa_1_1_d_c_t';
        };
        node-child = {
          child-id = '519';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 545;
        node-label = 'tsa::FrameIStream';
        node-link = {
          node-link-id = 'classtsa_1_1_frame_i_stream';
        };
        node-child = {
          child-id = '511';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 534;
        node-label = 'tsa::WelchWindow';
        node-link = {
          node-link-id = 'classtsa_1_1_welch_window';
        };
        node-child = {
          child-id = '526';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 526;
        node-label = 'tsa::BaseWindow';
        node-link = {
          node-link-id = 'classtsa_1_1_base_window';
        };
        node-child = {
          child-id = '511';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 538;
        node-label = 'tsa::ADC_Channel';
        node-link = {
          node-link-id = 'classtsa_1_1_a_d_c___channel';
        };
        node-child = {
          child-id = '537';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 533;
        node-label = 'tsa::TukeyWindow';
        node-link = {
          node-link-id = 'classtsa_1_1_tukey_window';
        };
        node-child = {
          child-id = '526';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 549;
        node-label = 'tsa::LSLLearning';
        node-link = {
          node-link-id = 'classtsa_1_1_l_s_l_learning';
        };
        node-child = {
          child-id = '511';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 552;
        node-label = 'tsa::RLSCanceler';
        node-link = {
          node-link-id = 'classtsa_1_1_r_l_s_canceler';
        };
        node-child = {
          child-id = '511';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 553;
        node-label = 'tsa::SelectionOrderCriteria';
        node-link = {
          node-link-id = 'classtsa_1_1_selection_order_criteria';
        };
        node-child = {
          child-id = '511';
          relation = private-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 528;
        node-label = 'tsa::BisquareWindow';
        node-link = {
          node-link-id = 'classtsa_1_1_bisquare_window';
        };
        node-child = {
          child-id = '526';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 557;
        node-label = 'tsa::ViewUtil';
        node-link = {
          node-link-id = 'classtsa_1_1_view_util';
        };
        node-child = {
          child-id = '511';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 515;
        node-label = 'tsa::ArDurbinEstimator';
        node-link = {
          node-link-id = 'classtsa_1_1_ar_durbin_estimator';
        };
        node-child = {
          child-id = '511';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 524;
        node-label = 'tsa::InverseRealFFT';
        node-link = {
          node-link-id = 'classtsa_1_1_inverse_real_f_f_t';
        };
        node-child = {
          child-id = '519';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 546;
        node-label = 'tsa::LatticeFilter';
        node-link = {
          node-link-id = 'classtsa_1_1_lattice_filter';
        };
        node-child = {
          child-id = '511';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 561;
        node-label = 'tsa::WDF2Reconstruct';
        node-link = {
          node-link-id = 'classtsa_1_1_w_d_f2_reconstruct';
        };
        node-child = {
          child-id = '511';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 530;
        node-label = 'tsa::Cs2HannWindow';
        node-link = {
          node-link-id = 'classtsa_1_1_cs2_hann_window';
        };
        node-child = {
          child-id = '526';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 541;
        node-label = 'tsa::SER_Channel';
        node-link = {
          node-link-id = 'classtsa_1_1_s_e_r___channel';
        };
        node-child = {
          child-id = '537';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 555;
        node-label = 'tsa::Util';
        node-link = {
          node-link-id = 'classtsa_1_1_util';
        };
        node-child = {
          child-id = '511';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 556;
        node-label = 'tsa::VArma2TF';
        node-link = {
          node-link-id = 'classtsa_1_1_v_arma2_t_f';
        };
        node-child = {
          child-id = '511';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 516;
        node-label = 'tsa::Arma2Psd';
        node-link = {
          node-link-id = 'classtsa_1_1_arma2_psd';
        };
        node-child = {
          child-id = '511';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 559;
        node-label = 'tsa::WavReconstruction';
        node-link = {
          node-link-id = 'classtsa_1_1_wav_reconstruction';
        };
        node-child = {
          child-id = '511';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 550;
        node-label = 'tsa::NotchWidrow';
        node-link = {
          node-link-id = 'classtsa_1_1_notch_widrow';
        };
        node-child = {
          child-id = '511';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 520;
        node-label = 'tsa::ComplexFFT';
        node-link = {
          node-link-id = 'classtsa_1_1_complex_f_f_t';
        };
        node-child = {
          child-id = '519';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 514;
        node-label = 'tsa::ArBurgEstimator';
        node-link = {
          node-link-id = 'classtsa_1_1_ar_burg_estimator';
        };
        node-child = {
          child-id = '511';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 527;
        node-label = 'tsa::BartlettWindow';
        node-link = {
          node-link-id = 'classtsa_1_1_bartlett_window';
        };
        node-child = {
          child-id = '526';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 544;
        node-label = 'tsa::FrameIChannel';
        node-link = {
          node-link-id = 'classtsa_1_1_frame_i_channel';
        };
        node-child = {
          child-id = '511';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 517;
        node-label = 'tsa::Arma2TF';
        node-link = {
          node-link-id = 'classtsa_1_1_arma2_t_f';
        };
        node-child = {
          child-id = '511';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 542;
        node-label = 'tsa::SIM_Channel';
        node-link = {
          node-link-id = 'classtsa_1_1_s_i_m___channel';
        };
        node-child = {
          child-id = '537';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 535;
        node-label = 'tsa::BLInterpolation';
        node-link = {
          node-link-id = 'classtsa_1_1_b_l_interpolation';
        };
        node-child = {
          child-id = '511';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 537;
        node-label = 'tsa::ChannelDescriptor';
        node-link = {
          node-link-id = 'classtsa_1_1_channel_descriptor';
        };
        node-child = {
          child-id = '511';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 551;
        node-label = 'tsa::Parcor2AR';
        node-link = {
          node-link-id = 'classtsa_1_1_parcor2_a_r';
        };
        node-child = {
          child-id = '511';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 548;
        node-label = 'tsa::LSLfilter';
        node-link = {
          node-link-id = 'classtsa_1_1_l_s_lfilter';
        };
        node-child = {
          child-id = '511';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 532;
        node-label = 'tsa::TukeyHannWindow';
        node-link = {
          node-link-id = 'classtsa_1_1_tukey_hann_window';
        };
        node-child = {
          child-id = '526';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 512;
        node-label = 'tsa::AR2';
        node-link = {
          node-link-id = 'classtsa_1_1_a_r2';
        };
        node-child = {
          child-id = '511';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 547;
        node-label = 'tsa::LeastSquaresLattice';
        node-link = {
          node-link-id = 'classtsa_1_1_least_squares_lattice';
        };
        node-child = {
          child-id = '511';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 536;
        node-label = 'tsa::ButterworthFilter';
        node-link = {
          node-link-id = 'classtsa_1_1_butterworth_filter';
        };
        node-child = {
          child-id = '511';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 543;
        node-label = 'tsa::DoubleWhitening';
        node-link = {
          node-link-id = 'classtsa_1_1_double_whitening';
        };
        node-child = {
          child-id = '511';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 531;
        node-label = 'tsa::KaiserWindow';
        node-link = {
          node-link-id = 'classtsa_1_1_kaiser_window';
        };
        node-child = {
          child-id = '526';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 560;
        node-label = 'tsa::WDF2Classify';
        node-link = {
          node-link-id = 'classtsa_1_1_w_d_f2_classify';
        };
        node-child = {
          child-id = '511';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 522;
        node-label = 'tsa::DST';
        node-link = {
          node-link-id = 'classtsa_1_1_d_s_t';
        };
        node-child = {
          child-id = '519';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 519;
        node-label = 'tsa::BaseFFT';
        node-link = {
          node-link-id = 'classtsa_1_1_base_f_f_t';
        };
        node-child = {
          child-id = '511';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 511;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */
      node = {
        node-id    = 540;
        node-label = 'tsa::PROC_Channel';
        node-link = {
          node-link-id = 'classtsa_1_1_p_r_o_c___channel';
        };
        node-child = {
          child-id = '537';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 523;
        node-label = 'tsa::IDCT';
        node-link = {
          node-link-id = 'classtsa_1_1_i_d_c_t';
        };
        node-child = {
          child-id = '519';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 525;
        node-label = 'tsa::RealFFT';
        node-link = {
          node-link-id = 'classtsa_1_1_real_f_f_t';
        };
        node-child = {
          child-id = '519';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 518;
        node-label = 'tsa::ARMAFilter';
        node-link = {
          node-link-id = 'classtsa_1_1_a_r_m_a_filter';
        };
        node-child = {
          child-id = '511';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 558;
        node-label = 'tsa::WaveletTransform';
        node-link = {
          node-link-id = 'classtsa_1_1_wavelet_transform';
        };
        node-child = {
          child-id = '511';
          relation = private-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 513;
        node-label = 'tsa::AR2Parcor';
        node-link = {
          node-link-id = 'classtsa_1_1_a_r2_parcor';
        };
        node-child = {
          child-id = '511';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 539;
        node-label = 'tsa::FRAMEH_Channel';
        node-link = {
          node-link-id = 'classtsa_1_1_f_r_a_m_e_h___channel';
        };
        node-child = {
          child-id = '537';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 529;
        node-label = 'tsa::Cs2HammingWindow';
        node-link = {
          node-link-id = 'classtsa_1_1_cs2_hamming_window';
        };
        node-child = {
          child-id = '526';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classtsa_1_1_a_r2';
  cp-name   = 'tsa::AR2';
  cp-ref     = {
    ref-type = base;
    ref-id   = 'classtsa_1_1_algo_base';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_a_r2_1af98beea50a63f72e22af69e2f1843bc3';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'AR2';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const double
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'f';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const double
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'gamma';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const double
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'h';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/AR2.hpp';
      sec-mem-desc-line = '76';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Constructor
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_a_r2_1a69e035a519d396ff2ef47759d6394117';
      sec-mem-virt = virtual;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
virtual
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '~AR2';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/AR2.hpp';
      sec-mem-desc-line = '82';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Destructor
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_a_r2_1ad91c696d1eb47fb92e4440de0e871b34';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mA';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/AR2.hpp';
      sec-mem-desc-line = '124';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_a_r2_1aa5edb94b32659768807f67f124b055f7';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mB';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/AR2.hpp';
      sec-mem-desc-line = '125';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_a_r2_1a1e28277853e0e35cca6eb9a283cbc39e';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mC';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/AR2.hpp';
      sec-mem-desc-line = '126';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_a_r2_1a855a67e26b267c41a48b5eb48d35ec06';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mXm1';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/AR2.hpp';
      sec-mem-desc-line = '128';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_a_r2_1add01d087af153e0addabb8c5b98318e4';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mXm2';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/AR2.hpp';
      sec-mem-desc-line = '129';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/AR2.hpp';
  cp-fileline  = '70';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-inheritancegraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 563;
        node-label = 'tsa::AR2';
        node-link = {
          node-link-id = 'classtsa_1_1_a_r2';
        };
        node-child = {
          child-id = '564';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 564;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 565;
        node-label = 'tsa::AR2';
        node-link = {
          node-link-id = 'classtsa_1_1_a_r2';
        };
        node-child = {
          child-id = '566';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 566;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classtsa_1_1_a_r2_parcor';
  cp-name   = 'tsa::AR2Parcor';
  cp-ref     = {
    ref-type = base;
    ref-id   = 'classtsa_1_1_algo_base';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_a_r2_parcor_1af28c0ed978d27202d9f7f5df6464efef';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'AR2Parcor';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/AR2Parcor.hpp';
      sec-mem-desc-line = '77';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Constructor
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_a_r2_parcor_1a8aaf9b98dd73626724c6c83bf7e3a5ed';
      sec-mem-virt = virtual;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
virtual
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '~AR2Parcor';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/AR2Parcor.hpp';
      sec-mem-desc-line = '82';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Destructor
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/AR2Parcor.hpp';
  cp-fileline  = '71';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Estimate the AR parameters by the Parcor.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-inheritancegraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 568;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */
      node = {
        node-id    = 567;
        node-label = 'tsa::AR2Parcor';
        node-link = {
          node-link-id = 'classtsa_1_1_a_r2_parcor';
        };
        node-child = {
          child-id = '568';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 570;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */
      node = {
        node-id    = 569;
        node-label = 'tsa::AR2Parcor';
        node-link = {
          node-link-id = 'classtsa_1_1_a_r2_parcor';
        };
        node-child = {
          child-id = '570';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classtsa_1_1_ar_burg_estimator';
  cp-name   = 'tsa::ArBurgEstimator';
  cp-ref     = {
    ref-type = base;
    ref-id   = 'classtsa_1_1_algo_base';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_ar_burg_estimator_1a6204df3016ce1f4aabf95fe4e05b27c4';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'ArBurgEstimator';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'ArOrder';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ArBurgEstimator.hpp';
      sec-mem-desc-line = '84';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Constructor
@param ArOrder order of the AR model
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_ar_burg_estimator_1a4b72f798ee5330d446366c4296aec27b';
      sec-mem-virt = virtual;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
virtual
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '~ArBurgEstimator';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ArBurgEstimator.hpp';
      sec-mem-desc-line = '89';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Destructor
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_ar_burg_estimator_1a909ccc5f3ec7155ca60fb23122a8edfd';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Load';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'filename';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'fmt';
        sec-mem-param-defval = <<_EnD_oF_dEf_TeXt_
"txt"
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ArBurgEstimator.hpp';
      sec-mem-desc-line = '91';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_ar_burg_estimator_1a5f666a51727cfd49d748973b8f050763';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Save';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'filename';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'fmt';
        sec-mem-param-defval = <<_EnD_oF_dEf_TeXt_
"txt"
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ArBurgEstimator.hpp';
      sec-mem-desc-line = '98';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_ar_burg_estimator_1a2760a49fb1837ff81061ebf7431de0ef';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'xml_serialize';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
eternity::xml_archive &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'xml';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'prefix';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ArBurgEstimator.hpp';
      sec-mem-desc-line = '105';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_ar_burg_estimator_1a918baccfeb2101848018b6abcf1e9b19';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mArOrder';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ArBurgEstimator.hpp';
      sec-mem-desc-line = '231';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
the Order of the AR model    
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_ar_burg_estimator_1a51cbda2be55098f65e4d710cfe1153b7';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Dvector
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mParcor';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ArBurgEstimator.hpp';
      sec-mem-desc-line = '232';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
the vector of reflection coefficients  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_ar_burg_estimator_1a6d0a5657630ecd64c33761a8f0c835e1';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Dvector
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mAR';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ArBurgEstimator.hpp';
      sec-mem-desc-line = '233';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_ar_burg_estimator_1a3ff0b47d541f89567d177a42103a95a2';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Dvector
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mErrorForward';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ArBurgEstimator.hpp';
      sec-mem-desc-line = '234';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
the error forward  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_ar_burg_estimator_1abe77e4f47e6eb9e1f39e22f99331c981';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Dvector
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mErrorBackward';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ArBurgEstimator.hpp';
      sec-mem-desc-line = '235';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
the error backward  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_ar_burg_estimator_1a3d033517e7242d079e14038dcd50556c';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Dvector
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mWhitenedData';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ArBurgEstimator.hpp';
      sec-mem-desc-line = '236';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_ar_burg_estimator_1a7b50a6b230b2236500f54f9561d9ef7d';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Dvector
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mColoredData';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ArBurgEstimator.hpp';
      sec-mem-desc-line = '237';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ArBurgEstimator.hpp';
  cp-fileline  = '77';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Estimate the Parcor and AR parameters on a sequence of data.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-inheritancegraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 571;
        node-label = 'tsa::ArBurgEstimator';
        node-link = {
          node-link-id = 'classtsa_1_1_ar_burg_estimator';
        };
        node-child = {
          child-id = '572';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 572;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 573;
        node-label = 'tsa::ArBurgEstimator';
        node-link = {
          node-link-id = 'classtsa_1_1_ar_burg_estimator';
        };
        node-child = {
          child-id = '574';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 574;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classeternity_1_1archive';
  cp-name   = 'eternity::archive';
  cp-ref     = {
    ref-type = derived;
    ref-id   = 'classeternity_1_1bin__archive';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-ref     = {
    ref-type = derived;
    ref-id   = 'classeternity_1_1xml__archive';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-section = {
    sec-kind = 'public-type';
    sec-member = {
      sec-mem-kind = 'enum';
      sec-mem-id   = 'classeternity_1_1archive_1a8881f9ce8dbed2ee600c64b7925afef0';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-name = 'opening_mode';
      sec-mem-enum = { enum-name = load; };
      sec-mem-enum = { enum-name = store; };
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist.hpp';
      sec-mem-desc-line = '54';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classeternity_1_1archive_1adc5356f74fed2dd5daf230aa1ee6c58e';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'archive';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist.hpp';
      sec-mem-desc-line = '59';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Simply the default constructor.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classeternity_1_1archive_1a941c3b590afc929089706b92ce4d5e13';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'init';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist.hpp';
      sec-mem-desc-line = '62';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classeternity_1_1archive_1a2c4ab8d0935b130b38bce44f600bee99';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'put_pointer';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
void *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'object';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist.hpp';
      sec-mem-desc-line = '71';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
       Verify that object is stored only
once.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classeternity_1_1archive_1a759dd5567021290542de13d090aa0963';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'set_loading';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'val';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist.hpp';
      sec-mem-desc-line = '75';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Set the archive mode (loading or storing)
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classeternity_1_1archive_1af1ced5c2f5cd028d88033c40ac98cc71';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'is_loading';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist.hpp';
      sec-mem-desc-line = '80';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Verify the archive is in loading mode.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classeternity_1_1archive_1afbd7e1d21409eae43622049624277405';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'is_storing';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist.hpp';
      sec-mem-desc-line = '85';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Verify the archive is in storing mode.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'protected-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classeternity_1_1archive_1a949b798deac030f2ab45ed54bf26dc4a';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'm_bloading';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist.hpp';
      sec-mem-desc-line = '49';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classeternity_1_1archive_1ae4a796ad260a0f581cf33be4f072d83a';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::vector< void * >
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'm_vPointerstored';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist.hpp';
      sec-mem-desc-line = '50';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist.hpp';
  cp-fileline  = '47';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
This class supply common services for all
kind of persistence archives. The major one
is the ability to stored doubled pointers only
one time and so avoid circularity, broken links
and lost spaces on hard disks.
_EnD_oF_dEf_TeXt_;
  cp-inheritancegraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 578;
        node-label = 'MFCarchive';
        node-link = {
          node-link-id = 'class_m_f_carchive';
        };
        node-child = {
          child-id = '576';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 576;
        node-label = 'eternity::bin_archive';
        node-link = {
          node-link-id = 'classeternity_1_1bin__archive';
        };
        node-child = {
          child-id = '575';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 577;
        node-label = 'eternity::file_archive';
        node-link = {
          node-link-id = 'classeternity_1_1file__archive';
        };
        node-child = {
          child-id = '576';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 575;
        node-label = 'eternity::archive';
        node-link = {
          node-link-id = 'classeternity_1_1archive';
        };
      }; /* node */
      node = {
        node-id    = 579;
        node-label = 'eternity::xml_archive';
        node-link = {
          node-link-id = 'classeternity_1_1xml__archive';
        };
        node-child = {
          child-id = '575';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classtsa_1_1_ar_durbin_estimator';
  cp-name   = 'tsa::ArDurbinEstimator';
  cp-ref     = {
    ref-type = base;
    ref-id   = 'classtsa_1_1_algo_base';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_ar_durbin_estimator_1a2c79884f3aca03b9f6701c826dcbc07b';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'ArDurbinEstimator';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'ArOrder';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ArDurbinEstimator.hpp';
      sec-mem-desc-line = '86';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Constructor

@param ArOrder order of the the AR model
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_ar_durbin_estimator_1a19ed9832b8899ebf095d339952ee0f47';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
virtual
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '~ArDurbinEstimator';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ArDurbinEstimator.hpp';
      sec-mem-desc-line = '92';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Destructor
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_ar_durbin_estimator_1a40783c942f77e9626e48eb1f8d7771ac';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mArOrder';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ArDurbinEstimator.hpp';
      sec-mem-desc-line = '138';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ArDurbinEstimator.hpp';
  cp-fileline  = '78';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Estimate the AR coefficients and the PARCOR of a time series using its correlation function.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-inheritancegraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 581;
        node-label = 'tsa::ArDurbinEstimator';
        node-link = {
          node-link-id = 'classtsa_1_1_ar_durbin_estimator';
        };
        node-child = {
          child-id = '582';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 582;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 583;
        node-label = 'tsa::ArDurbinEstimator';
        node-link = {
          node-link-id = 'classtsa_1_1_ar_durbin_estimator';
        };
        node-child = {
          child-id = '584';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 584;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classtsa_1_1_arma2_psd';
  cp-name   = 'tsa::Arma2Psd';
  cp-ref     = {
    ref-type = base;
    ref-id   = 'classtsa_1_1_algo_base';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_arma2_psd_1a3488311932cc240d99a8e40c124da91d';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Arma2Psd';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/Arma2Psd.hpp';
      sec-mem-desc-line = '78';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Constructor
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_arma2_psd_1aa3a79a62709efcfdbb3268cf253837e1';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Arma2Psd';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const Arma2Psd &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'from';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/Arma2Psd.hpp';
      sec-mem-desc-line = '85';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Copy constructor

@param from The instance that must be copied
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_arma2_psd_1aef3535e694289be52365ded1f83b7599';
      sec-mem-virt = virtual;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
virtual
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '~Arma2Psd';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/Arma2Psd.hpp';
      sec-mem-desc-line = '90';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Destructor
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_arma2_psd_1a85b4577ccb8331c63c004eb2e917b59b';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Arma2Psd &
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'operator=';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const Arma2Psd &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'from';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/Arma2Psd.hpp';
      sec-mem-desc-line = '99';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Assignement operator

@param from The instance to be assigned from

@return a reference to a new object
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/Arma2Psd.hpp';
  cp-fileline  = '72';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Estimate the PSD for a ARMA model.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-inheritancegraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 585;
        node-label = 'tsa::Arma2Psd';
        node-link = {
          node-link-id = 'classtsa_1_1_arma2_psd';
        };
        node-child = {
          child-id = '586';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 586;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 587;
        node-label = 'tsa::Arma2Psd';
        node-link = {
          node-link-id = 'classtsa_1_1_arma2_psd';
        };
        node-child = {
          child-id = '588';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 588;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classtsa_1_1_arma2_t_f';
  cp-name   = 'tsa::Arma2TF';
  cp-ref     = {
    ref-type = base;
    ref-id   = 'classtsa_1_1_algo_base';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_arma2_t_f_1aabbe1c03f711805d11bf7f4951149617';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Arma2TF';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/Arma2TF.hpp';
      sec-mem-desc-line = '81';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Constructor
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_arma2_t_f_1a93ac79691dd4f811d21f2021476ce4b5';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Arma2TF';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const Arma2TF &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'from';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/Arma2TF.hpp';
      sec-mem-desc-line = '88';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Copy constructor

@param from The instance that must be copied
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_arma2_t_f_1aa48720a5c5a48ebfbaf1ee080f27a411';
      sec-mem-virt = virtual;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
virtual
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '~Arma2TF';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/Arma2TF.hpp';
      sec-mem-desc-line = '93';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Destructor
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_arma2_t_f_1ac2fa5584ff0fed36eabfc908ded9b5de';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Arma2TF &
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'operator=';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const Arma2TF &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'from';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/Arma2TF.hpp';
      sec-mem-desc-line = '102';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Assignement operator

@param from The instance to be assigned from

@return a reference to a new object
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/Arma2TF.hpp';
  cp-fileline  = '75';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Estimate the Transfer function using the ARMA parametrization.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-inheritancegraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 589;
        node-label = 'tsa::Arma2TF';
        node-link = {
          node-link-id = 'classtsa_1_1_arma2_t_f';
        };
        node-child = {
          child-id = '590';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 590;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 591;
        node-label = 'tsa::Arma2TF';
        node-link = {
          node-link-id = 'classtsa_1_1_arma2_t_f';
        };
        node-child = {
          child-id = '592';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 592;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classtsa_1_1_a_r_m_a_filter';
  cp-name   = 'tsa::ARMAFilter';
  cp-ref     = {
    ref-type = base;
    ref-id   = 'classtsa_1_1_algo_base';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_a_r_m_a_filter_1acfa4406559bb327a4bfd5139db46f941';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'ARMAFilter';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const std::vector< double > &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'mAR';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const std::vector< double > &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'mMA';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'gain';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ARMAFilter.hpp';
      sec-mem-desc-line = '84';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Constructor
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_a_r_m_a_filter_1affe37273b08f1c5f21a9d11170f1a119';
      sec-mem-virt = virtual;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
virtual
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '~ARMAFilter';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ARMAFilter.hpp';
      sec-mem-desc-line = '90';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Destructor
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_a_r_m_a_filter_1abadc75a208b4e28e28e7341c6bbfbbce';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
LDvector
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mAR';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ARMAFilter.hpp';
      sec-mem-desc-line = '134';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_a_r_m_a_filter_1aa4b780d4db5a5c5326e92f1c766613fb';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
LDvector
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mMA';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ARMAFilter.hpp';
      sec-mem-desc-line = '135';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_a_r_m_a_filter_1abb62dc2fe30975bb49e0105915143169';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
long double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mGain';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ARMAFilter.hpp';
      sec-mem-desc-line = '136';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_a_r_m_a_filter_1a12aaa04dea7ac6d48c99c66319286ae4';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mInPointer';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ARMAFilter.hpp';
      sec-mem-desc-line = '138';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_a_r_m_a_filter_1a223497bf7eb2f652a8c776f67837e6e9';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mOutPointer';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ARMAFilter.hpp';
      sec-mem-desc-line = '139';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_a_r_m_a_filter_1aa8de4abbeb3ed3078a7e9f1440619ac1';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
LDvector
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mInBuffer';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ARMAFilter.hpp';
      sec-mem-desc-line = '140';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_a_r_m_a_filter_1a45a752b94a28a77c8269bee486d0c85c';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
LDvector
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mOutBuffer';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ARMAFilter.hpp';
      sec-mem-desc-line = '141';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ARMAFilter.hpp';
  cp-fileline  = '78';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Implement the   ARMA filtering.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
This class implement a general ARMA filter. Given an input sequence x(n)
and an output sequence y(n) an ARMA filter is defined by the relation
(look at the signs definitions..)

a(0) y(n) =  a(1) y(n-1) + ... + a(N) y(n-N) + b(0) x(n) + b(1) x(n-1) + .... + b(M) x(n-M)
_EnD_oF_dEf_TeXt_;
  cp-inheritancegraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 594;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */
      node = {
        node-id    = 593;
        node-label = 'tsa::ARMAFilter';
        node-link = {
          node-link-id = 'classtsa_1_1_a_r_m_a_filter';
        };
        node-child = {
          child-id = '594';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 596;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */
      node = {
        node-id    = 595;
        node-label = 'tsa::ARMAFilter';
        node-link = {
          node-link-id = 'classtsa_1_1_a_r_m_a_filter';
        };
        node-child = {
          child-id = '596';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classtsa_1_1_a_r_m_afit';
  cp-name   = 'tsa::ARMAfit';
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_a_r_m_afit_1ad55e4fccddc92e18f99276486d281ba8';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'ARMAfit';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'P';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'Q';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ARMAfit.hpp';
      sec-mem-desc-line = '81';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Constructor
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_a_r_m_afit_1a3e41abe33c5bdbd657ce48bbe1e21fe8';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = '~ARMAfit';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ARMAfit.hpp';
      sec-mem-desc-line = '87';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Destructor
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_a_r_m_afit_1a985bddf4c53ff0d8ceef060348baeb8c';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
ARMAfit &
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'operator=';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const ARMAfit &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'from';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ARMAfit.hpp';
      sec-mem-desc-line = '95';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Assignement operator

@param from The instance to be assigned from

@return a reference to a new object  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_a_r_m_afit_1a3662ce6508ec15a23142d30b44d08d8f';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mP';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ARMAfit.hpp';
      sec-mem-desc-line = '137';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_a_r_m_afit_1abd0fb899f5347f145662e0fa53a1a0ba';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mQ';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ARMAfit.hpp';
      sec-mem-desc-line = '138';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_a_r_m_afit_1a7aae186f74f8278099f8affc538baaf0';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Dvector
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mAR';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ARMAfit.hpp';
      sec-mem-desc-line = '139';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_a_r_m_afit_1a3d7c0d01ce395406f72e6b17390a0a50';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Dvector
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mMA';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ARMAfit.hpp';
      sec-mem-desc-line = '140';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_a_r_m_afit_1ae5d14a43af0447f8f64361e050631919';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
MYWE
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mMethod';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ARMAfit.hpp';
      sec-mem-desc-line = '141';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ARMAfit.hpp';
  cp-fileline  = '75';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
implement the ARMA fit to a PSD
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 599;
        node-label = 'tsa::MYWE';
        node-link = {
          node-link-id = 'classtsa_1_1_m_y_w_e';
        };
      }; /* node */
      node = {
        node-id    = 598;
        node-label = 'tsa::ARMAfit';
        node-link = {
          node-link-id = 'classtsa_1_1_a_r_m_afit';
        };
        node-child = {
          child-id = '599';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
mMethod
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classtsa_1_1_a_r_m_a_view';
  cp-name   = 'tsa::ARMAView';
  cp-ref     = {
    ref-type = base;
    ref-id   = 'classtsa_1_1_base_view';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_a_r_m_a_view_1a6b11811890252e645626e61fe434ea56';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'ARMAView';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'maxP';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'maxQ';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'channels';
        sec-mem-param-defval = <<_EnD_oF_dEf_TeXt_
1
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ARMAView.hpp';
      sec-mem-desc-line = '92';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
 Constructor
@param maxP the order of the AR part
@param maxQ the order of the MA part
@param channels the dimension of
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_a_r_m_a_view_1a1f28a41958cdf03016ffbae033a222bb';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'ARMAView';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const ARMAView &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'from';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ARMAView.hpp';
      sec-mem-desc-line = '106';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Copy constructor

@param from The instance that must be copied  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_a_r_m_a_view_1a44779ce53323f8e6a1457974e9242004';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = '~ARMAView';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ARMAView.hpp';
      sec-mem-desc-line = '119';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Destructor
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_a_r_m_a_view_1aa6144eb86771f2c9d2cc95ac415acaba';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Load';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'filename';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'fmt';
        sec-mem-param-defval = <<_EnD_oF_dEf_TeXt_
"txt"
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ARMAView.hpp';
      sec-mem-desc-line = '122';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_a_r_m_a_view_1a022ef32e6b0c2012707317cf1fbf9a54';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Save';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'filename';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'fmt';
        sec-mem-param-defval = <<_EnD_oF_dEf_TeXt_
"txt"
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ARMAView.hpp';
      sec-mem-desc-line = '129';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_a_r_m_a_view_1ac667fd050280837056f3397fdb21afe6';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'xml_serialize';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
eternity::xml_archive &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'xml';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'prefix';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ARMAView.hpp';
      sec-mem-desc-line = '136';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_a_r_m_a_view_1a9fdd9c921d39b10a4d83379f69bdb160';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'ResizeAR';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'order';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ARMAView.hpp';
      sec-mem-desc-line = '420';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This method change the order of the AR part of the process

@param order the new order of the AR part
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_a_r_m_a_view_1a757cddd07c0bb5bf0c4a8784e79f5900';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'ResizeMA';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'order';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ARMAView.hpp';
      sec-mem-desc-line = '437';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This method change the order of the MA part of the process

@param order the new order of the MA part
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_a_r_m_a_view_1a0e95f26e07907a39ddb0e67b26fbc3ea';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
VDmatrix
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mAR';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ARMAView.hpp';
      sec-mem-desc-line = '448';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
The AR part of the process.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_a_r_m_a_view_1a420b5083584d78e4bb7f5db8b3e62bc3';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
VDmatrix
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mMA';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ARMAView.hpp';
      sec-mem-desc-line = '449';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
The MA part of the process.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_a_r_m_a_view_1a0101f02d2c9f5eb2a6e6f1e1191fdb40';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mChannels';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ARMAView.hpp';
      sec-mem-desc-line = '450';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
The dimension of the VARMA process.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ARMAView.hpp';
  cp-fileline  = '83';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
ARMA view: container for (vectorial) ARMA processes.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
A view for ARMA parametrization. It defines a general (V)ARMA process, which
can be written as
 \form#0@_fakenl@_fakenl
where A,B are square matrix of dimension d equal to the dimension of the input
and output vectors x,y.
If the order of the part MA q is equal to zero the process is an AR process.
If the order of the AR part p is equal to zero the process is an MA process.
Note that the matrix \form#1 is assumed to be the identity.
_EnD_oF_dEf_TeXt_;
  cp-inheritancegraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 600;
        node-label = 'tsa::ARMAView';
        node-link = {
          node-link-id = 'classtsa_1_1_a_r_m_a_view';
        };
        node-child = {
          child-id = '601';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 601;
        node-label = 'tsa::BaseView';
        node-link = {
          node-link-id = 'classtsa_1_1_base_view';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 602;
        node-label = 'tsa::ARMAView';
        node-link = {
          node-link-id = 'classtsa_1_1_a_r_m_a_view';
        };
        node-child = {
          child-id = '603';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 603;
        node-label = 'tsa::BaseView';
        node-link = {
          node-link-id = 'classtsa_1_1_base_view';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
struct = {
  cp-id     = 'structeternity_1_1association';
  cp-name   = 'eternity::association';
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'structeternity_1_1association_1a826dce070ffd89015b66ea9ea26c07e2';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
size_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'xml_write';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
InputIterator
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'first';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
InputIterator
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'last';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
Archive &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'archive';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/algorithms.hpp';
      sec-mem-desc-line = '229';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'structeternity_1_1association_1a2f1c27b77cd84364c498feb134864d4f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'xml_read';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
Container &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'container';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
InputIterator
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'insert';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
size_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'len';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
Archive &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'archive';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/algorithms.hpp';
      sec-mem-desc-line = '232';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'structeternity_1_1association_1a927d1de7c19bce31622b31417e107ebe';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
size_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'write';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
InputIterator
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'first';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
InputIterator
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'last';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
Archive &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'archive';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/algorithms.hpp';
      sec-mem-desc-line = '235';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'structeternity_1_1association_1ab488701a51e5c139347c7c5acc88d05e';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'read';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
Container &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'container';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
InputIterator
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'insert';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
size_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'len';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
Archive &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'archive';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/algorithms.hpp';
      sec-mem-desc-line = '238';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/algorithms.hpp';
  cp-fileline  = '227';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Manage persistence of associtative containers (e.g. map or set).
    Use template parameter to specify contents type of key (e.g. primitives, objects or pointers)
    and the content type of data (again one from primitives, objects or pointers).
    This struct is not intended to direct use but must be passed as template parameter of
    xml_serialize() or serialize() algorithms.
_EnD_oF_dEf_TeXt_;
}; /* struct */
class = {
  cp-id     = 'classtsa_1_1bad__matrix__size';
  cp-name   = 'tsa::bad_matrix_size';
  cp-ref     = {
    ref-type = base;
    ref-id   = 'classstd_1_1invalid__argument';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1bad__matrix__size_1a5d06e7b24038b0b1ff07a0fa308f8e54';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'bad_matrix_size';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const std::string &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'msg';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/AlgoExceptions.hpp';
      sec-mem-desc-line = '80';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Constructor

@param msg error message
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/AlgoExceptions.hpp';
  cp-fileline  = '72';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
This exception should be used when a matrix argument of an algorithm
has an incorrect size. It contains information about the correct expected size.
_EnD_oF_dEf_TeXt_;
  cp-inheritancegraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 606;
        node-label = 'tsa::bad_matrix_size';
        node-link = {
          node-link-id = 'classtsa_1_1bad__matrix__size';
        };
        node-child = {
          child-id = '607';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 607;
        node-label = 'std::invalid_argument';
      }; /* node */

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 608;
        node-label = 'tsa::bad_matrix_size';
        node-link = {
          node-link-id = 'classtsa_1_1bad__matrix__size';
        };
        node-child = {
          child-id = '609';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 609;
        node-label = 'std::invalid_argument';
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classtsa_1_1bad__value';
  cp-name   = 'tsa::bad_value';
  cp-ref     = {
    ref-type = base;
    ref-id   = 'classstd_1_1runtime__error';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1bad__value_1a23b7068f35f29697bb817109e378bd8e';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'bad_value';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/AlgoExceptions.hpp';
      sec-mem-desc-line = '153';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Constructor

@param msg error message
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/AlgoExceptions.hpp';
  cp-fileline  = '145';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
This exception should be used when some processed data cannot be returned
_EnD_oF_dEf_TeXt_;
  cp-inheritancegraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 611;
        node-label = 'runtime_error';
      }; /* node */
      node = {
        node-id    = 610;
        node-label = 'tsa::bad_value';
        node-link = {
          node-link-id = 'classtsa_1_1bad__value';
        };
        node-child = {
          child-id = '611';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 613;
        node-label = 'runtime_error';
      }; /* node */
      node = {
        node-id    = 612;
        node-label = 'tsa::bad_value';
        node-link = {
          node-link-id = 'classtsa_1_1bad__value';
        };
        node-child = {
          child-id = '613';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classtsa_1_1bad__vector__size';
  cp-name   = 'tsa::bad_vector_size';
  cp-ref     = {
    ref-type = base;
    ref-id   = 'classstd_1_1invalid__argument';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1bad__vector__size_1a9ec1fb1fd91fdd191f8dfd59b51beb7a';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'bad_vector_size';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const std::string &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'msg';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/AlgoExceptions.hpp';
      sec-mem-desc-line = '106';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Constructor

@param msg error message
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/AlgoExceptions.hpp';
  cp-fileline  = '98';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
This exception should be used when a vector argument of an algorithm
has an incorrect size. It contains information about the correct expected size.
_EnD_oF_dEf_TeXt_;
  cp-inheritancegraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 615;
        node-label = 'invalid_argument';
      }; /* node */
      node = {
        node-id    = 614;
        node-label = 'tsa::bad_vector_size';
        node-link = {
          node-link-id = 'classtsa_1_1bad__vector__size';
        };
        node-child = {
          child-id = '615';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 617;
        node-label = 'invalid_argument';
      }; /* node */
      node = {
        node-id    = 616;
        node-label = 'tsa::bad_vector_size';
        node-link = {
          node-link-id = 'classtsa_1_1bad__vector__size';
        };
        node-child = {
          child-id = '617';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classtsa_1_1_bartlett_window';
  cp-name   = 'tsa::BartlettWindow';
  cp-ref     = {
    ref-type = base;
    ref-id   = 'classtsa_1_1_base_window';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_bartlett_window_1a9177fa400660b6bdecfcecbfbffeedbe';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'BartlettWindow';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'size';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/BartlettWindow.hpp';
      sec-mem-desc-line = '77';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Constructor

@param size the size of the window
@param cached true if the window must be preevaluated in a buffer
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_bartlett_window_1a9da0612e0081996ef30439403a8a9c87';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'BartlettWindow';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'size';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const std::string &
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/BartlettWindow.hpp';
      sec-mem-desc-line = '83';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_bartlett_window_1a45ce87f449514520865841aa3ac0abac';
      sec-mem-virt = virtual;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
virtual
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '~BartlettWindow';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/BartlettWindow.hpp';
      sec-mem-desc-line = '92';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Destructor
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_bartlett_window_1afb3c6c8aa249db673da8dd625ffbb8a5';
      sec-mem-virt = virtual;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'FillWindow';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/BartlettWindow.hpp';
      sec-mem-desc-line = '195';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Initialize the window with the correct values, given
its actual size. This is a pure virtual function, which 
is redefined by each window class.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/BartlettWindow.hpp';
  cp-fileline  = '68';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Bartlett windowing algorithm.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-inheritancegraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 619;
        node-label = 'tsa::BaseWindow';
        node-link = {
          node-link-id = 'classtsa_1_1_base_window';
        };
        node-child = {
          child-id = '620';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 618;
        node-label = 'tsa::BartlettWindow';
        node-link = {
          node-link-id = 'classtsa_1_1_bartlett_window';
        };
        node-child = {
          child-id = '619';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 620;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 622;
        node-label = 'tsa::BaseWindow';
        node-link = {
          node-link-id = 'classtsa_1_1_base_window';
        };
        node-child = {
          child-id = '623';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 621;
        node-label = 'tsa::BartlettWindow';
        node-link = {
          node-link-id = 'classtsa_1_1_bartlett_window';
        };
        node-child = {
          child-id = '622';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 623;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classtsa_1_1_base_f_f_t';
  cp-name   = 'tsa::BaseFFT';
  cp-ref     = {
    ref-type = base;
    ref-id   = 'classtsa_1_1_algo_base';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-ref     = {
    ref-type = derived;
    ref-id   = 'classtsa_1_1_complex_f_f_t';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-ref     = {
    ref-type = derived;
    ref-id   = 'classtsa_1_1_d_c_t';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-ref     = {
    ref-type = derived;
    ref-id   = 'classtsa_1_1_d_s_t';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-ref     = {
    ref-type = derived;
    ref-id   = 'classtsa_1_1_i_d_c_t';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-ref     = {
    ref-type = derived;
    ref-id   = 'classtsa_1_1_inverse_real_f_f_t';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-ref     = {
    ref-type = derived;
    ref-id   = 'classtsa_1_1_real_f_f_t';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_base_f_f_t_1a724f59f3f5bded31174373eac81e67ee';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'BaseFFT';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'size';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
enum FFTPlanningMode
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'mode';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'PreserveInput';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/BaseFFT.hpp';
      sec-mem-desc-line = '98';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Constructor

@param size the size of the transform
@param mode specify the way in which plans are calculated
@param PreserveInput true if the input buffer must be preserved during the transform, false otherwise
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_base_f_f_t_1a84fa441e825a8e375f9721263d358ac8';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'BaseFFT';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const BaseFFT &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'from';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/BaseFFT.hpp';
      sec-mem-desc-line = '111';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Copy constructor

@param from The instance that must be copied
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_base_f_f_t_1ad73b78693c83ef6c7e07701965ae8cb6';
      sec-mem-virt = virtual;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
virtual
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '~BaseFFT';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/BaseFFT.hpp';
      sec-mem-desc-line = '122';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Destructor
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'protected-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_base_f_f_t_1a5c7dd6dee349547018d493be6d5874eb';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
fftw_plan
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mPlan';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/BaseFFT.hpp';
      sec-mem-desc-line = '247';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
The current plan, or NULL if no plan is available
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_base_f_f_t_1aa89fef1777c6df148cdb8533265b6163';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mPlanNeedsUpdate';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/BaseFFT.hpp';
      sec-mem-desc-line = '252';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Flag: a parameter is changed and plan needs to be updated
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_base_f_f_t_1a171c71011fea314f23633b1816771d98';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mLogicalSize';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/BaseFFT.hpp';
      sec-mem-desc-line = '257';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
The size of the current plan
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_base_f_f_t_1abbd656cda5a7cb6a88fc5d556d3269f7';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mPlanningRigor';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/BaseFFT.hpp';
      sec-mem-desc-line = '262';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
The planning mode flag
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_base_f_f_t_1a2fe7f53db024bb408beeb5e22eaefbb9';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mPlanningRestriction';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/BaseFFT.hpp';
      sec-mem-desc-line = '267';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
The planning restriction flag.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/BaseFFT.hpp';
  cp-fileline  = '88';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Base class for various FFT.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-inheritancegraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 627;
        node-label = 'tsa::DCT';
        node-link = {
          node-link-id = 'classtsa_1_1_d_c_t';
        };
        node-child = {
          child-id = '624';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 630;
        node-label = 'tsa::InverseRealFFT';
        node-link = {
          node-link-id = 'classtsa_1_1_inverse_real_f_f_t';
        };
        node-child = {
          child-id = '624';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 626;
        node-label = 'tsa::ComplexFFT';
        node-link = {
          node-link-id = 'classtsa_1_1_complex_f_f_t';
        };
        node-child = {
          child-id = '624';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 628;
        node-label = 'tsa::DST';
        node-link = {
          node-link-id = 'classtsa_1_1_d_s_t';
        };
        node-child = {
          child-id = '624';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 624;
        node-label = 'tsa::BaseFFT';
        node-link = {
          node-link-id = 'classtsa_1_1_base_f_f_t';
        };
        node-child = {
          child-id = '625';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 625;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */
      node = {
        node-id    = 629;
        node-label = 'tsa::IDCT';
        node-link = {
          node-link-id = 'classtsa_1_1_i_d_c_t';
        };
        node-child = {
          child-id = '624';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 631;
        node-label = 'tsa::RealFFT';
        node-link = {
          node-link-id = 'classtsa_1_1_real_f_f_t';
        };
        node-child = {
          child-id = '624';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 632;
        node-label = 'tsa::BaseFFT';
        node-link = {
          node-link-id = 'classtsa_1_1_base_f_f_t';
        };
        node-child = {
          child-id = '633';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 633;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classtsa_1_1_base_view';
  cp-name   = 'tsa::BaseView';
  cp-ref     = {
    ref-type = derived;
    ref-id   = 'classtsa_1_1_a_r_m_a_view';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-ref     = {
    ref-type = derived;
    ref-id   = 'classtsa_1_1_lattice_view';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-ref     = {
    ref-type = derived;
    ref-id   = 'classtsa_1_1_seq_view';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-ref     = {
    ref-type = derived;
    ref-id   = 'classtsa_1_1_t_f_view';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_base_view_1a87ba8f0c139190b95f8b1c5486b342d1';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'BaseView';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const std::string &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'aName';
        sec-mem-param-defval = <<_EnD_oF_dEf_TeXt_
std::string()
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/BaseView.hpp';
      sec-mem-desc-line = '80';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Constructor
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_base_view_1a21d825daa5ede62830f69e0ea7275008';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'BaseView';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const BaseView &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'from';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/BaseView.hpp';
      sec-mem-desc-line = '91';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Copy constructor

@param from The instance that must be copied  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_base_view_1ad3e2d3032a8efe2bd2dc7a9a9c7636d6';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = '~BaseView';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/BaseView.hpp';
      sec-mem-desc-line = '99';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Destructor
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_base_view_1a29e213aae81ad55e146a5e41ad5a1ce9';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
BaseView &
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'operator=';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const BaseView &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'from';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/BaseView.hpp';
      sec-mem-desc-line = '110';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Assignement operator

@param from The instance to be assigned from

@return a reference to a new object  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'protected-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_base_view_1a91429dee1249c140160bfca20e783019';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mName';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/BaseView.hpp';
      sec-mem-desc-line = '153';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'signal';
    sec-member = {
      sec-mem-kind = 'friend';
      sec-mem-id   = 'classtsa_1_1_base_view_1af7b68757603d571922c4e3cce401ec9f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
friend class
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'AlgoBase';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/BaseView.hpp';
      sec-mem-desc-line = '75';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/BaseView.hpp';
  cp-fileline  = '73';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-inheritancegraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 635;
        node-label = 'tsa::ARMAView';
        node-link = {
          node-link-id = 'classtsa_1_1_a_r_m_a_view';
        };
        node-child = {
          child-id = '634';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 637;
        node-label = 'tsa::SeqView< T >';
        node-link = {
          node-link-id = 'classtsa_1_1_seq_view';
        };
        node-child = {
          child-id = '634';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 634;
        node-label = 'tsa::BaseView';
        node-link = {
          node-link-id = 'classtsa_1_1_base_view';
        };
      }; /* node */
      node = {
        node-id    = 638;
        node-label = 'tsa::TFView< T >';
        node-link = {
          node-link-id = 'classtsa_1_1_t_f_view';
        };
        node-child = {
          child-id = '634';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 636;
        node-label = 'tsa::LatticeView';
        node-link = {
          node-link-id = 'classtsa_1_1_lattice_view';
        };
        node-child = {
          child-id = '634';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classtsa_1_1_base_window';
  cp-name   = 'tsa::BaseWindow';
  cp-ref     = {
    ref-type = base;
    ref-id   = 'classtsa_1_1_algo_base';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-ref     = {
    ref-type = derived;
    ref-id   = 'classtsa_1_1_bartlett_window';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-ref     = {
    ref-type = derived;
    ref-id   = 'classtsa_1_1_bisquare_window';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-ref     = {
    ref-type = derived;
    ref-id   = 'classtsa_1_1_cs2_hamming_window';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-ref     = {
    ref-type = derived;
    ref-id   = 'classtsa_1_1_cs2_hann_window';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-ref     = {
    ref-type = derived;
    ref-id   = 'classtsa_1_1_kaiser_window';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-ref     = {
    ref-type = derived;
    ref-id   = 'classtsa_1_1_tukey_hann_window';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-ref     = {
    ref-type = derived;
    ref-id   = 'classtsa_1_1_tukey_window';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-ref     = {
    ref-type = derived;
    ref-id   = 'classtsa_1_1_welch_window';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_base_window_1aea4dee45722299896913859d7b899d6f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'BaseWindow';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'size';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/BaseWindow.hpp';
      sec-mem-desc-line = '80';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Constructor
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_base_window_1a0e99ffa3d84e8c7a05f7de437bfd6241';
      sec-mem-virt = virtual;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
virtual
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '~BaseWindow';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/BaseWindow.hpp';
      sec-mem-desc-line = '85';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Destructor
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_base_window_1ad6681a5cb29414a97af6be1ea7805a81';
      sec-mem-virt = virtual;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
virtual void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Normalize';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/BaseWindow.hpp';
      sec-mem-desc-line = '163';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'protected-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_base_window_1aa74b29105d94caa521d308198e8e6643';
      sec-mem-virt = virtual;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
virtual void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'FillWindow';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/BaseWindow.hpp';
      sec-mem-desc-line = '172';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Initialize the window with the correct values, given
its actual size. This is a pure virtual function, which
is redefined by each window class.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'protected-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_base_window_1a182b397ac3f3c409bfcb3a39d9c1575a';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Dvector
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mWindow';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/BaseWindow.hpp';
      sec-mem-desc-line = '179';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Window data
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/BaseWindow.hpp';
  cp-fileline  = '74';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Base class for various windowing algorithms.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-inheritancegraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 649;
        node-label = 'tsa::WelchWindow';
        node-link = {
          node-link-id = 'classtsa_1_1_welch_window';
        };
        node-child = {
          child-id = '640';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 640;
        node-label = 'tsa::BaseWindow';
        node-link = {
          node-link-id = 'classtsa_1_1_base_window';
        };
        node-child = {
          child-id = '641';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 648;
        node-label = 'tsa::TukeyWindow';
        node-link = {
          node-link-id = 'classtsa_1_1_tukey_window';
        };
        node-child = {
          child-id = '640';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 643;
        node-label = 'tsa::BisquareWindow';
        node-link = {
          node-link-id = 'classtsa_1_1_bisquare_window';
        };
        node-child = {
          child-id = '640';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 645;
        node-label = 'tsa::Cs2HannWindow';
        node-link = {
          node-link-id = 'classtsa_1_1_cs2_hann_window';
        };
        node-child = {
          child-id = '640';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 642;
        node-label = 'tsa::BartlettWindow';
        node-link = {
          node-link-id = 'classtsa_1_1_bartlett_window';
        };
        node-child = {
          child-id = '640';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 647;
        node-label = 'tsa::TukeyHannWindow';
        node-link = {
          node-link-id = 'classtsa_1_1_tukey_hann_window';
        };
        node-child = {
          child-id = '640';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 646;
        node-label = 'tsa::KaiserWindow';
        node-link = {
          node-link-id = 'classtsa_1_1_kaiser_window';
        };
        node-child = {
          child-id = '640';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 641;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */
      node = {
        node-id    = 644;
        node-label = 'tsa::Cs2HammingWindow';
        node-link = {
          node-link-id = 'classtsa_1_1_cs2_hamming_window';
        };
        node-child = {
          child-id = '640';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 650;
        node-label = 'tsa::BaseWindow';
        node-link = {
          node-link-id = 'classtsa_1_1_base_window';
        };
        node-child = {
          child-id = '651';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 651;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classeternity_1_1bin__archive';
  cp-name   = 'eternity::bin_archive';
  cp-ref     = {
    ref-type = base;
    ref-id   = 'classeternity_1_1archive';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-ref     = {
    ref-type = derived;
    ref-id   = 'classeternity_1_1file__archive';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-ref     = {
    ref-type = derived;
    ref-id   = 'class_m_f_carchive';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classeternity_1_1bin__archive_1a0cc44edd050d598ff4f617e445159386';
      sec-mem-virt = virtual;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
virtual
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '~bin_archive';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist.hpp';
      sec-mem-desc-line = '100';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classeternity_1_1bin__archive_1acbe041b0815f2721ee18ad042557b14e';
      sec-mem-virt = pure-virtual;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
virtual size_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'write';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const void *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'buffer';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
size_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'size';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
size_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'count';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist.hpp';
      sec-mem-desc-line = '104';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
write a buffer of a certain legnth n time in the archive
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classeternity_1_1bin__archive_1a5d67b032541f5a1e104d2fcd0eaa7a55';
      sec-mem-virt = pure-virtual;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
virtual size_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'read';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
void *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'buffer';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
size_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'size';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
size_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'count';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist.hpp';
      sec-mem-desc-line = '106';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
read a buffer of a certain legnth n time in the archive
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classeternity_1_1bin__archive_1a451f9bd713b83922890014af88d386e6';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bin_archive &
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'operator<<';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
T &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'ogg';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist.hpp';
      sec-mem-desc-line = '112';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
      Template operator to put any type ( except string)
of proprieties in the archive.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classeternity_1_1bin__archive_1a8c431d394555d953019fe1f35ca77ffd';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bin_archive &
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'operator>>';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
T &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'ogg';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist.hpp';
      sec-mem-desc-line = '122';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Template operator to extract any type ( except string)
of proprieties from the archive.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classeternity_1_1bin__archive_1a5cc61f7f70b1d809fbece79ccb9ecb26';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bin_archive &
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'operator<<';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::string &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'str';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist.hpp';
      sec-mem-desc-line = '129';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Put a string in the archive.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classeternity_1_1bin__archive_1a4cbbd8dff6b78cf3868a49b30261dd26';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bin_archive &
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'operator>>';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::string &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'str';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist.hpp';
      sec-mem-desc-line = '133';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Extract a string from the archive.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classeternity_1_1bin__archive_1a4c9b0ab9146c3a9ccaa5ec745299b282';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
t *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'get_object';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
t **
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'ppObj';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist.hpp';
      sec-mem-desc-line = '138';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Extract an object pointer from the archive.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classeternity_1_1bin__archive_1ab93c74313a8c6afdc65d4f2f2860502c';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
t *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'put_object';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
t *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'pObj';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist.hpp';
      sec-mem-desc-line = '168';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Put an object pointer in the archive.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist.hpp';
  cp-fileline  = '97';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
    Bin(ary)archive realize the persistence by serialization
using a stream archive where to store in sequence all data
in binary format.
_EnD_oF_dEf_TeXt_;
  cp-inheritancegraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 655;
        node-label = 'MFCarchive';
        node-link = {
          node-link-id = 'class_m_f_carchive';
        };
        node-child = {
          child-id = '652';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 652;
        node-label = 'eternity::bin_archive';
        node-link = {
          node-link-id = 'classeternity_1_1bin__archive';
        };
        node-child = {
          child-id = '653';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 654;
        node-label = 'eternity::file_archive';
        node-link = {
          node-link-id = 'classeternity_1_1file__archive';
        };
        node-child = {
          child-id = '652';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 653;
        node-label = 'eternity::archive';
        node-link = {
          node-link-id = 'classeternity_1_1archive';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 656;
        node-label = 'eternity::bin_archive';
        node-link = {
          node-link-id = 'classeternity_1_1bin__archive';
        };
        node-child = {
          child-id = '657';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 657;
        node-label = 'eternity::archive';
        node-link = {
          node-link-id = 'classeternity_1_1archive';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classtsa_1_1_bisquare_window';
  cp-name   = 'tsa::BisquareWindow';
  cp-ref     = {
    ref-type = base;
    ref-id   = 'classtsa_1_1_base_window';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_bisquare_window_1a6e5d4dbf8578ed2e9b516d9410c91156';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'BisquareWindow';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'size';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/BisquareWindow.hpp';
      sec-mem-desc-line = '78';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Constructor

@param size the size of the window
@param cached true if the window must be preevaluated in a buffer
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_bisquare_window_1a3a76063272e48da547740c73de3c938e';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'BisquareWindow';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'size';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const std::string &
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/BisquareWindow.hpp';
      sec-mem-desc-line = '84';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_bisquare_window_1a050ef95c31279607ac93d854cbcf0670';
      sec-mem-virt = virtual;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
virtual
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '~BisquareWindow';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/BisquareWindow.hpp';
      sec-mem-desc-line = '93';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Destructor
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_bisquare_window_1a62ab3bab83dd4dd77090c7c49be24acb';
      sec-mem-virt = virtual;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'FillWindow';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/BisquareWindow.hpp';
      sec-mem-desc-line = '196';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Initialize the window with the correct values, given
its actual size. This is a pure virtual function, which 
is redefined by each window class.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/BisquareWindow.hpp';
  cp-fileline  = '69';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Bisquare windowing algorithm.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-inheritancegraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 659;
        node-label = 'tsa::BaseWindow';
        node-link = {
          node-link-id = 'classtsa_1_1_base_window';
        };
        node-child = {
          child-id = '660';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 658;
        node-label = 'tsa::BisquareWindow';
        node-link = {
          node-link-id = 'classtsa_1_1_bisquare_window';
        };
        node-child = {
          child-id = '659';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 660;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 662;
        node-label = 'tsa::BaseWindow';
        node-link = {
          node-link-id = 'classtsa_1_1_base_window';
        };
        node-child = {
          child-id = '663';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 661;
        node-label = 'tsa::BisquareWindow';
        node-link = {
          node-link-id = 'classtsa_1_1_bisquare_window';
        };
        node-child = {
          child-id = '662';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 663;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classtsa_1_1_b_l_interpolation';
  cp-name   = 'tsa::BLInterpolation';
  cp-ref     = {
    ref-type = base;
    ref-id   = 'classtsa_1_1_algo_base';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-section = {
    sec-kind = 'public-type';
    sec-member = {
      sec-mem-kind = 'enum';
      sec-mem-id   = 'classtsa_1_1_b_l_interpolation_1ae11719d30e353da11f076289b87c7b1d';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-name = 'NormalizationType';
      sec-mem-enum = { enum-name = NONormalization; };
      sec-mem-enum = { enum-name = DCNormalization; };
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/BLInterpolation.hpp';
      sec-mem-desc-line = '77';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_b_l_interpolation_1aef84f84620a59efee8d1e2bb1cffd46d';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'BLInterpolation';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'channels';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'outdata';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'irate';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'orate';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'order';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'alpha';
        sec-mem-param-defval = <<_EnD_oF_dEf_TeXt_
1.0
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
enum NormalizationType
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'nt';
        sec-mem-param-defval = <<_EnD_oF_dEf_TeXt_
NONormalization
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/BLInterpolation.hpp';
      sec-mem-desc-line = '92';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Constructor.

@param channels number of channels
@param outdata number of resampled data returned at each call
@param irate input rate
@param orate output rate
@param order order of filter
@param alpha window parameter
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_b_l_interpolation_1ace4ab80e2c9f5147685bd22d5ee5841e';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'BLInterpolation';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const BLInterpolation &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'from';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/BLInterpolation.hpp';
      sec-mem-desc-line = '106';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Copy constructor

@param from The instance that must be copied
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_b_l_interpolation_1a67cd882b93c7643cd0fdce08b7fa876f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = '~BLInterpolation';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/BLInterpolation.hpp';
      sec-mem-desc-line = '111';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Destructor
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_b_l_interpolation_1a71b2bc1e0a68abe528d5c753b4a5c1c1';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
BLInterpolation &
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'operator=';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const BLInterpolation &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'from';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/BLInterpolation.hpp';
      sec-mem-desc-line = '120';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Assignement operator

@param from The instance to be assigned from

@return a reference to a new object
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_b_l_interpolation_1aff26a1c884d2733cebf280a556987e51';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Init';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/BLInterpolation.hpp';
      sec-mem-desc-line = '229';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Initialize internal structures
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_b_l_interpolation_1a7b429b2867b887e3fec9d44c584f026c';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'NORenormalization';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/BLInterpolation.hpp';
      sec-mem-desc-line = '231';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_b_l_interpolation_1a5d7f3b437e0aa09df7831c2b72a39f62';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'DCRenormalization';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/BLInterpolation.hpp';
      sec-mem-desc-line = '233';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_b_l_interpolation_1a8eeac8a3a0439f46764cf1455bd2febe';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Kaiser';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'x';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/BLInterpolation.hpp';
      sec-mem-desc-line = '242';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Kaiser window.

@param x position in the window (between -1 and 1)

@return the value of Kaiser window at index k
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_b_l_interpolation_1a23d1958ad6c23572e21c39ad421bf2a2';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'add_back_point';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/BLInterpolation.hpp';
      sec-mem-desc-line = '274';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Add a new data point to the buffer. If possible this is taken from
the repository, allocated otherwise.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_b_l_interpolation_1ac9f1957097458403fd2919445d3323db';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'del_front_point';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'n';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/BLInterpolation.hpp';
      sec-mem-desc-line = '282';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Delete some points from the buffer (the oldest ones) and
increment the start of the buffer position mBuffer

@param n number of points to delete from the buffer
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_b_l_interpolation_1adfb54e2b5bd52c05c3caaf062f97d9b6';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
long int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'resampled_available';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/BLInterpolation.hpp';
      sec-mem-desc-line = '290';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This function returns the number of resampled data 
which are available at the current time.

@return resampled data available
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_b_l_interpolation_1a1299ee71922f13c989b9961a0adcd14f';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mChannels';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/BLInterpolation.hpp';
      sec-mem-desc-line = '244';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Number of channels to resample  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_b_l_interpolation_1ab8ea8e129045096ccb53d1b5e6d27329';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mOutData';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/BLInterpolation.hpp';
      sec-mem-desc-line = '245';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Number of resampled data for channel that will be returned if possible at each call  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_b_l_interpolation_1a3fc5200b462e9fbd87644f2d5bfa4381';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mInputRate';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/BLInterpolation.hpp';
      sec-mem-desc-line = '246';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Input rate of data  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_b_l_interpolation_1a4511cbb0d6e97a901e8d52cffad670a1';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mOutputRate';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/BLInterpolation.hpp';
      sec-mem-desc-line = '247';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Output rate of data  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_b_l_interpolation_1aa8c5e5637c561ed9b3eabe6b8027e5da';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mOrder';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/BLInterpolation.hpp';
      sec-mem-desc-line = '248';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Order of the filter  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_b_l_interpolation_1a768c64c85e393f975e2caaaba7bc5f90';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mAlpha';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/BLInterpolation.hpp';
      sec-mem-desc-line = '249';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Parameter of the Kaiser window  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_b_l_interpolation_1ab7b685a2b64f9139ca4ea3907f6b0a07';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::queue< Dvector * >
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mRepository';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/BLInterpolation.hpp';
      sec-mem-desc-line = '251';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Repository for unused data points  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_b_l_interpolation_1ad40701a7e17ce4a2368605c0e77ec6a7';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::deque< Dvector * >
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mBuffer';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/BLInterpolation.hpp';
      sec-mem-desc-line = '252';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Buffer for incoming data points  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_b_l_interpolation_1a7e179ad859cffc61384efe0bc841255b';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
long int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mBufferBase';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/BLInterpolation.hpp';
      sec-mem-desc-line = '253';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Start of the buffer, in ticks units  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_b_l_interpolation_1a21a038009c7323c00263367ca678f767';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mRho';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/BLInterpolation.hpp';
      sec-mem-desc-line = '256';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Normalization factor for upsampling/downsampling  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_b_l_interpolation_1ab0b2cee3d403a0ae8d3cc3d5c0618f02';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Dvector *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mFilter';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/BLInterpolation.hpp';
      sec-mem-desc-line = '257';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Template for the filter  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_b_l_interpolation_1ac7684f2b6ae85030eac7992412df45aa';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
long int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mFilterCenter';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/BLInterpolation.hpp';
      sec-mem-desc-line = '258';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Center of the filter, in ticks units  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_b_l_interpolation_1a5390ed81fda1345890543a95ab91a6e2';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Dvector
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mNormalization';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/BLInterpolation.hpp';
      sec-mem-desc-line = '260';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_b_l_interpolation_1aa41a64576f7c0df22870378780d8f73d';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
NormalizationType
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mNormalizationType';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/BLInterpolation.hpp';
      sec-mem-desc-line = '261';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_b_l_interpolation_1adf29f91edc45fbbf8127732fa4b971f0';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mFirstData';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/BLInterpolation.hpp';
      sec-mem-desc-line = '263';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Flag: is the actual view the first submitted?  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_b_l_interpolation_1afed34dd05a75cc0eb6ce313a584aa9ef';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mStartTime';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/BLInterpolation.hpp';
      sec-mem-desc-line = '264';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Start (physical) time for resampling  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_b_l_interpolation_1a76258e5da0c92a792af987a3f2cf972d';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mSampling';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/BLInterpolation.hpp';
      sec-mem-desc-line = '265';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Physical sampling rate  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/BLInterpolation.hpp';
  cp-fileline  = '74';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Band limited interpolation.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-inheritancegraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 664;
        node-label = 'tsa::BLInterpolation';
        node-link = {
          node-link-id = 'classtsa_1_1_b_l_interpolation';
        };
        node-child = {
          child-id = '665';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 665;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 666;
        node-label = 'tsa::BLInterpolation';
        node-link = {
          node-link-id = 'classtsa_1_1_b_l_interpolation';
        };
        node-child = {
          child-id = '667';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 667;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classtsa_1_1_butterworth_filter';
  cp-name   = 'tsa::ButterworthFilter';
  cp-ref     = {
    ref-type = base;
    ref-id   = 'classtsa_1_1_algo_base';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_butterworth_filter_1a593153a0d04510ed85ddf1464c68dc74';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'ButterworthFilter';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'freq';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'order';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ButterworthFilter.hpp';
      sec-mem-desc-line = '81';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Constructor
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_butterworth_filter_1a085e8ea21b5fb0d564513bca234318df';
      sec-mem-virt = virtual;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
virtual
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '~ButterworthFilter';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ButterworthFilter.hpp';
      sec-mem-desc-line = '86';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Destructor
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_butterworth_filter_1aa38eef705674e3c799e23bd145d243c0';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'operator()';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
SeqViewComplex &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'data';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ButterworthFilter.hpp';
      sec-mem-desc-line = '92';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Write the filter on a view
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_butterworth_filter_1a68cf85f26d694402fe52601707cf9bbb';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'operator()';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
SeqViewComplex &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'datain';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
SeqViewComplex &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'dataout';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ButterworthFilter.hpp';
      sec-mem-desc-line = '99';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Apply the filter on a view
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_butterworth_filter_1ad81a41345c8b088c6aa02f138b39348b';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mOrder';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ButterworthFilter.hpp';
      sec-mem-desc-line = '136';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_butterworth_filter_1a7bff04791bdba8c8b668e8b664f01e60';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mFreq';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ButterworthFilter.hpp';
      sec-mem-desc-line = '137';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_butterworth_filter_1a35cbb21e7a98ac4214147afd1aa5b1fe';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Cdouble *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'poles';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ButterworthFilter.hpp';
      sec-mem-desc-line = '138';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ButterworthFilter.hpp';
  cp-fileline  = '74';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
A generator of random normal numbers.
_EnD_oF_dEf_TeXt_;
  cp-inheritancegraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 668;
        node-label = 'tsa::ButterworthFilter';
        node-link = {
          node-link-id = 'classtsa_1_1_butterworth_filter';
        };
        node-child = {
          child-id = '669';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 669;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 670;
        node-label = 'tsa::ButterworthFilter';
        node-link = {
          node-link-id = 'classtsa_1_1_butterworth_filter';
        };
        node-child = {
          child-id = '671';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 671;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classtsa_1_1_channel_descriptor';
  cp-name   = 'tsa::ChannelDescriptor';
  cp-ref     = {
    ref-type = base;
    ref-id   = 'classtsa_1_1_algo_base';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-ref     = {
    ref-type = derived;
    ref-id   = 'classtsa_1_1_a_d_c___channel';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-ref     = {
    ref-type = derived;
    ref-id   = 'classtsa_1_1_f_r_a_m_e_h___channel';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-ref     = {
    ref-type = derived;
    ref-id   = 'classtsa_1_1_p_r_o_c___channel';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-ref     = {
    ref-type = derived;
    ref-id   = 'classtsa_1_1_s_e_r___channel';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-ref     = {
    ref-type = derived;
    ref-id   = 'classtsa_1_1_s_i_m___channel';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_channel_descriptor_1a320624e156e5d856077465474bc7154f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'ChannelDescriptor';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'id';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp';
      sec-mem-desc-line = '110';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Constructor.

@param id number of data channel
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_channel_descriptor_1aa1e001a5e712415cd4e9d66846914a56';
      sec-mem-virt = virtual;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
virtual void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'AddData';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp';
      sec-mem-desc-line = '118';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This function must be called when there are not enough data 
to fill the output view. In this base class does nothing.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_channel_descriptor_1a456d14e6136c389fbd307fabab7d7b73';
      sec-mem-virt = virtual;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
virtual double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'GetLength';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp';
      sec-mem-desc-line = '127';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Get the maximul time length of data that can be currently filled
without calling AddData.

@return the time length of the data available in seconds
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_channel_descriptor_1a602c501d3fa47c0951ae45f78336a1a8';
      sec-mem-virt = virtual;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
virtual double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'GetRate';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp';
      sec-mem-desc-line = '137';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Get the channel time rate


@return the channel time rate
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_channel_descriptor_1a5ebd9a8bf358666b2cd9ae00056d2728';
      sec-mem-virt = virtual;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
virtual void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'WriteView';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
SeqViewDouble &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'v';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp';
      sec-mem-desc-line = '147';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
A function to write the available data on an output view. Be careful
that if there are not enough data available we get a data loss exception.

@param v output view where the available data are written
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_channel_descriptor_1a6553da04ba33471fc5465b6bd2b5275c';
      sec-mem-virt = virtual;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
virtual void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'FillView';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
SeqViewDouble &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'v';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'tstart';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'tend';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp';
      sec-mem-desc-line = '149';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_channel_descriptor_1a51b2df6d09b5b0b07d2a9ecda6fffa2b';
      sec-mem-virt = virtual;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
virtual void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'WriteView';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
SeqViewDouble &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'v';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
SeqViewDouble &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'validation';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp';
      sec-mem-desc-line = '161';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
A function to write the available data on an output view. Be careful
that if there are not enough data available we get a data loss exception.
At the same time a second view is filled with ones which correspond to 
avaliable data, or zeros which correspond to unavailable data.

@param v output view where the available data are written
@param validation output view where the available data flags are written
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_channel_descriptor_1a2b4f201421dcd2cc9d2c1705fe4bea61';
      sec-mem-virt = virtual;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
virtual
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '~ChannelDescriptor';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp';
      sec-mem-desc-line = '167';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Destructor
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'protected-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_channel_descriptor_1ae3da8cb574d6a43bcca33daca5394530';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'PushValue';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'value';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 't';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'n';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp';
      sec-mem-desc-line = '178';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Call @see Queue n times, passing the given value and the corresponding time.

@param value the value that must be added to the queue
@param t the time which correspond to the data
@param n number of copies of the data that must be added
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_channel_descriptor_1a61cb9c3f50762989afc59c9e365f0927';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'PushFrVect';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
FrVect *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'frv';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 't';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'off';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'offset';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'slope';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp';
      sec-mem-desc-line = '192';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Call @see Queue for a sequence of numerical values. The values are contained
inside a FrVect, starting from a given offset. The effective value which is passed
to @see Queue is given by y=offset+slope*x, where x is the value contained in the 
FrVect.

@param frv pointer to the FrVect containing data
@param t time corresponding to the first data contained in the FrVect (neglecting the offset)
@param off offset in the FrVect
@param offset an optional offset to correct the data
@param slope an optional scaling factor to correct the data
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_channel_descriptor_1ae38a3b6ca5d23123a61a421fe3612b86';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Queue';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'v';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 't';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp';
      sec-mem-desc-line = '204';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Push a given value v, at the given time t, in the output queue. The value is pushed
only if its time is larger or equal that the current mNextTime. If it is larger that the current
mNextTime value a data loss is registered.

The value of mNextTime is updated.

@param v the value
@param t the time
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_channel_descriptor_1a73d060e190a75faa7ac64ee4a328a9d4';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'data_available';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 't';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp';
      sec-mem-desc-line = '215';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Check the availability of a value at a given time, looking in the
set of registered data losses. Remove from this set all the exceptions
which correspond to times lower than t.

@param t requested time

@return true if a number is available at the given time, false otherwise
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'protected-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_channel_descriptor_1a7767947e90a66d41bbd13bd4c54149a6';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
FrameIStream *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mFIS';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp';
      sec-mem-desc-line = '218';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Pointer to the FrameIStream class which contains this descriptor  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_channel_descriptor_1a49d1e3852cb22b0a56ebc03b3176c5b8';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mId';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp';
      sec-mem-desc-line = '219';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
The numerical id of the class  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_channel_descriptor_1a142c7f60e14fa8036340b902529cf956';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mRate';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp';
      sec-mem-desc-line = '220';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
The rate of the data  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_channel_descriptor_1a6bad409238df7dff8b5265570adac8ff';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mNextTime';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp';
      sec-mem-desc-line = '221';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
The time at which the next data to push on the queue is expected  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_channel_descriptor_1ad1568c18971efe9a5cb1d114e06f5050';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::deque< double >
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mData';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp';
      sec-mem-desc-line = '222';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
The data queue  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_channel_descriptor_1ac4103a2793b7e507f8f982070ee27348';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::deque< DataException >
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mExceptions';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp';
      sec-mem-desc-line = '223';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
The set of data loss exceptions  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp';
  cp-fileline  = '101';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
A base class for the descriptor of a data channel.
_EnD_oF_dEf_TeXt_;
  cp-inheritancegraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 674;
        node-label = 'tsa::ADC_Channel';
        node-link = {
          node-link-id = 'classtsa_1_1_a_d_c___channel';
        };
        node-child = {
          child-id = '672';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 677;
        node-label = 'tsa::SER_Channel';
        node-link = {
          node-link-id = 'classtsa_1_1_s_e_r___channel';
        };
        node-child = {
          child-id = '672';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 678;
        node-label = 'tsa::SIM_Channel';
        node-link = {
          node-link-id = 'classtsa_1_1_s_i_m___channel';
        };
        node-child = {
          child-id = '672';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 672;
        node-label = 'tsa::ChannelDescriptor';
        node-link = {
          node-link-id = 'classtsa_1_1_channel_descriptor';
        };
        node-child = {
          child-id = '673';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 673;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */
      node = {
        node-id    = 676;
        node-label = 'tsa::PROC_Channel';
        node-link = {
          node-link-id = 'classtsa_1_1_p_r_o_c___channel';
        };
        node-child = {
          child-id = '672';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 675;
        node-label = 'tsa::FRAMEH_Channel';
        node-link = {
          node-link-id = 'classtsa_1_1_f_r_a_m_e_h___channel';
        };
        node-child = {
          child-id = '672';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 681;
        node-label = 'tsa::FrameIStream';
        node-link = {
          node-link-id = 'classtsa_1_1_frame_i_stream';
        };
        node-child = {
          child-id = '680';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 679;
        node-label = 'tsa::ChannelDescriptor';
        node-link = {
          node-link-id = 'classtsa_1_1_channel_descriptor';
        };
        node-child = {
          child-id = '680';
          relation = public-inheritance;
        }; /* node-child */
        node-child = {
          child-id = '681';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
mFIS
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 680;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classtsa_1_1_cholesky';
  cp-name   = 'tsa::Cholesky';
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_cholesky_1a19dfa3cb6bf14721a91ec6fdcb26dbcf';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Cholesky';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'N';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'eps';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/Cholesky.hpp';
      sec-mem-desc-line = '84';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Constructor
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_cholesky_1a86a264d92076daba27859959741b3627';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Cholesky';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const Cholesky &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'from';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/Cholesky.hpp';
      sec-mem-desc-line = '90';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Copy constructor

@param from The instance that must be copied  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_cholesky_1a45d30ca313f3949504716bacb5036b6d';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = '~Cholesky';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/Cholesky.hpp';
      sec-mem-desc-line = '95';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Destructor
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_cholesky_1a3c86b3ab61a3dd759b067ce685e6f51e';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Cholesky &
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'operator=';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const Cholesky &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'from';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/Cholesky.hpp';
      sec-mem-desc-line = '103';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Assignement operator

@param from The instance to be assigned from

@return a reference to a new object  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_cholesky_1aeebdfa1ac318dceb73fccfe75f3928bc';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mN';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/Cholesky.hpp';
      sec-mem-desc-line = '145';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_cholesky_1afb8463f2c148c8ae2ef2c2914074718a';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Dvector
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mD';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/Cholesky.hpp';
      sec-mem-desc-line = '146';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_cholesky_1a71ce7b253e3824f3629ca31ba049f58e';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Dvector
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mY';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/Cholesky.hpp';
      sec-mem-desc-line = '147';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_cholesky_1a56d3135a9c56e030e9cf876fd99dbbc3';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Dmatrix
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mXL';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/Cholesky.hpp';
      sec-mem-desc-line = '148';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_cholesky_1afc88d4ebf8b5a163a77ef3e3dd90f99d';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mIflag';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/Cholesky.hpp';
      sec-mem-desc-line = '149';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_cholesky_1aa49812e981a177f6792389d0d760db52';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mEps';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/Cholesky.hpp';
      sec-mem-desc-line = '150';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/Cholesky.hpp';
  cp-fileline  = '78';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Perform the Cholesky decomposition

@author Elena Cuoco <elena.cuoco@ego-gw.it>
_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classtsa_1_1_clusterized_event';
  cp-name   = 'tsa::ClusterizedEvent';
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_clusterized_event_1ac94b32f314a2c1ae5618724ea67f5508';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'ClusterizedEvent';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/EventDescription.hpp';
      sec-mem-desc-line = '154';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_clusterized_event_1ab146c7650c0b11d04f201cb56fe8a0c0';
      sec-mem-virt = virtual;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
virtual
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '~ClusterizedEvent';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/EventDescription.hpp';
      sec-mem-desc-line = '162';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_clusterized_event_1ac0dd2efaac85a0995739779c1d093394';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
ClusterizedEvent &
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'operator=';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const ClusterizedEvent &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'from';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/EventDescription.hpp';
      sec-mem-desc-line = '170';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_clusterized_event_1ad2a8ebd1696cd9d050acfedb57cf194c';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mTime';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/EventDescription.hpp';
      sec-mem-desc-line = '165';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_clusterized_event_1a77dc00c177e894b502969f2bd486c2bf';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mLenght';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/EventDescription.hpp';
      sec-mem-desc-line = '166';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_clusterized_event_1a76c2c0a996c70761b5ff0c1ca5c13293';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mSNR';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/EventDescription.hpp';
      sec-mem-desc-line = '167';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_clusterized_event_1aa919cc07d7538dc4c90e6bbd2efd7674';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mWave';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/EventDescription.hpp';
      sec-mem-desc-line = '168';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/EventDescription.hpp';
  cp-fileline  = '151';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classtsa_1_1_clusterized_event_full';
  cp-name   = 'tsa::ClusterizedEventFull';
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_clusterized_event_full_1a93366cd0d1fb34357291f8e7c0838fce';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'ClusterizedEventFull';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/EventDescription.hpp';
      sec-mem-desc-line = '182';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_clusterized_event_full_1a72341c0cabcf33d0cd74eb8396fb4cfa';
      sec-mem-virt = virtual;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
virtual
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '~ClusterizedEventFull';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/EventDescription.hpp';
      sec-mem-desc-line = '193';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_clusterized_event_full_1a59d5af3b33fe416f076a71e127e55e4b';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
ClusterizedEventFull &
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'operator=';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const ClusterizedEventFull &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'from';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/EventDescription.hpp';
      sec-mem-desc-line = '204';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_clusterized_event_full_1a0fda853ee9d8794a2d48aa67cf32139d';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mTime';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/EventDescription.hpp';
      sec-mem-desc-line = '196';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_clusterized_event_full_1ab5bf41bc3aee190a3bacbcf0014151e4';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mTimeMax';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/EventDescription.hpp';
      sec-mem-desc-line = '197';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_clusterized_event_full_1a65296146ead1496fddcc1f574884a6c1';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mLenght';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/EventDescription.hpp';
      sec-mem-desc-line = '198';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_clusterized_event_full_1ad727b114f41379abfbf5eaddbe86b51f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mSNR';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/EventDescription.hpp';
      sec-mem-desc-line = '199';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_clusterized_event_full_1a79694874453fcf2219e339c3d131ba27';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mCmax';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/EventDescription.hpp';
      sec-mem-desc-line = '200';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_clusterized_event_full_1a3defaaf04582b787b42b7fd0b6837058';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mlevel';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/EventDescription.hpp';
      sec-mem-desc-line = '201';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_clusterized_event_full_1ad3d7bb3e8a5e4ebfea14045ed7281c99';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mWave';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/EventDescription.hpp';
      sec-mem-desc-line = '202';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/EventDescription.hpp';
  cp-fileline  = '179';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classtsa_1_1_clusterized_event_full_featured';
  cp-name   = 'tsa::ClusterizedEventFullFeatured';
  cp-section = {
    sec-kind = 'public-type';
    sec-member = {
      sec-mem-kind = 'typedef';
      sec-mem-id   = 'classtsa_1_1_clusterized_event_full_featured_1a3b6ced7b46c6d82cd122cc6c2b5c2178';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
boost::numeric::ublas::vector< double >
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Dvector';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ClusterizedEventFullFeatured.hpp';
      sec-mem-desc-line = '74';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_clusterized_event_full_featured_1aad75a790fba5a423583707053fb8c0e8';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'ClusterizedEventFullFeatured';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'NumCoeff';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ClusterizedEventFullFeatured.hpp';
      sec-mem-desc-line = '76';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_clusterized_event_full_featured_1a9ccf7377b7e46b6e1b93a956cb0970ae';
      sec-mem-virt = virtual;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
virtual
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '~ClusterizedEventFullFeatured';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ClusterizedEventFullFeatured.hpp';
      sec-mem-desc-line = '79';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_clusterized_event_full_featured_1a00c692110c58e51429e08ffdaeb63d2d';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'operator=';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const ClusterizedEventFullFeatured &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'from';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ClusterizedEventFullFeatured.hpp';
      sec-mem-desc-line = '83';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_clusterized_event_full_featured_1aa727b57615697f74fb48a639b0305cd0';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'CEVcopy';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const ClusterizedEventFullFeatured &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'from';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ClusterizedEventFullFeatured.hpp';
      sec-mem-desc-line = '84';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_clusterized_event_full_featured_1ab4f718ffdf7a80ad388f2cf7359df3f8';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'outprint';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ClusterizedEventFullFeatured.hpp';
      sec-mem-desc-line = '86';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_clusterized_event_full_featured_1afd84fc016025a423c11d2febaba095c9';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'SetCoeff';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'i';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'v';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ClusterizedEventFullFeatured.hpp';
      sec-mem-desc-line = '99';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_clusterized_event_full_featured_1afb655951c1bae9f57597fbe05bbea620';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'GetCoeff';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'i';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ClusterizedEventFullFeatured.hpp';
      sec-mem-desc-line = '103';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_clusterized_event_full_featured_1a0dc1898eef01fd58ccfa9270ad24e96a';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mTime';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ClusterizedEventFullFeatured.hpp';
      sec-mem-desc-line = '108';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_clusterized_event_full_featured_1ab4a9b08a4019a112d8ed0ee90c632086';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mTimeMax';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ClusterizedEventFullFeatured.hpp';
      sec-mem-desc-line = '109';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_clusterized_event_full_featured_1a0fa06a03d489ea7f6ebfce8206ec9b6e';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mLenght';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ClusterizedEventFullFeatured.hpp';
      sec-mem-desc-line = '110';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_clusterized_event_full_featured_1a0702a9ea63e99af5f8ec4ff9ce50b30b';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mSNR';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ClusterizedEventFullFeatured.hpp';
      sec-mem-desc-line = '111';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_clusterized_event_full_featured_1a3361bc03902ba355a8f5cd387f57224d';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Dvector
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mCoeff';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ClusterizedEventFullFeatured.hpp';
      sec-mem-desc-line = '112';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_clusterized_event_full_featured_1ae032a372be8aedc0da70062d704d08e8';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mlevel';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ClusterizedEventFullFeatured.hpp';
      sec-mem-desc-line = '113';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_clusterized_event_full_featured_1adfc4ed6458ae50142c291531aa2dd3ed';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mWave';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ClusterizedEventFullFeatured.hpp';
      sec-mem-desc-line = '114';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_clusterized_event_full_featured_1ac4cb0cdaa14a636f67055aa93be5f84f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mNumCoeff';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ClusterizedEventFullFeatured.hpp';
      sec-mem-desc-line = '115';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ClusterizedEventFullFeatured.hpp';
  cp-fileline  = '71';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classtsa_1_1_complex_f_f_t';
  cp-name   = 'tsa::ComplexFFT';
  cp-ref     = {
    ref-type = base;
    ref-id   = 'classtsa_1_1_base_f_f_t';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-section = {
    sec-kind = 'public-type';
    sec-member = {
      sec-mem-kind = 'enum';
      sec-mem-id   = 'classtsa_1_1_complex_f_f_t_1a4e90a372fa0610f957f2c683335aa766';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-name = 'TransformSign';
      sec-mem-enum = { enum-name = FORWARD; };
      sec-mem-enum = { enum-name = BACKWARD; };
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ComplexFFT.hpp';
      sec-mem-desc-line = '80';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Transform sign.
See the fftw documentation.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_complex_f_f_t_1af51dac1a455d6e943de87f1b0cf4d3d7';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'ComplexFFT';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'size';
        sec-mem-param-defval = <<_EnD_oF_dEf_TeXt_
0
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
enum TransformSign
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 's';
        sec-mem-param-defval = <<_EnD_oF_dEf_TeXt_
FORWARD
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
enum FFTPlanningMode
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'mode';
        sec-mem-param-defval = <<_EnD_oF_dEf_TeXt_
ESTIMATE
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'PreserveInput';
        sec-mem-param-defval = <<_EnD_oF_dEf_TeXt_
true
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ComplexFFT.hpp';
      sec-mem-desc-line = '94';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Constructor

@param size the size of the transform
@param s the sign of the transform
@param mode specify the way in which plans are calculated
@param PreserveInput true if the input buffer must be preserved during the transform, false otherwise
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_complex_f_f_t_1a917ecfc43a0499d90abee599755625d7';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'ComplexFFT';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const ComplexFFT &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'from';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ComplexFFT.hpp';
      sec-mem-desc-line = '101';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Copy constructor

@param from The instance that must be copied
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_complex_f_f_t_1a80004962963b35cad0fb581040a47c0d';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = '~ComplexFFT';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ComplexFFT.hpp';
      sec-mem-desc-line = '106';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Destructor
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_complex_f_f_t_1ae644ce76d2adce323c4244f65735d987';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
ComplexFFT &
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'operator=';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const ComplexFFT &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'from';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ComplexFFT.hpp';
      sec-mem-desc-line = '115';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Assignement operator

@param from The instance to be assigned from

@return a reference to a new object
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_complex_f_f_t_1a97a15c1129372c7abb6ba3ba864ca065';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mSign';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ComplexFFT.hpp';
      sec-mem-desc-line = '178';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
The sign of the transform  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ComplexFFT.hpp';
  cp-fileline  = '73';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Multichannel complex FFT.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
This is the implementation of the FFT of a complex multichannel buffer. The transformation
is simply iterated over all the channels.
_EnD_oF_dEf_TeXt_;
  cp-inheritancegraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 690;
        node-label = 'tsa::ComplexFFT';
        node-link = {
          node-link-id = 'classtsa_1_1_complex_f_f_t';
        };
        node-child = {
          child-id = '691';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 691;
        node-label = 'tsa::BaseFFT';
        node-link = {
          node-link-id = 'classtsa_1_1_base_f_f_t';
        };
        node-child = {
          child-id = '692';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 692;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 693;
        node-label = 'tsa::ComplexFFT';
        node-link = {
          node-link-id = 'classtsa_1_1_complex_f_f_t';
        };
        node-child = {
          child-id = '694';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 694;
        node-label = 'tsa::BaseFFT';
        node-link = {
          node-link-id = 'classtsa_1_1_base_f_f_t';
        };
        node-child = {
          child-id = '695';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 695;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classtsa_1_1_cs2_hamming_window';
  cp-name   = 'tsa::Cs2HammingWindow';
  cp-ref     = {
    ref-type = base;
    ref-id   = 'classtsa_1_1_base_window';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_cs2_hamming_window_1a4ae0ec8d18145afbc446edef40842cf4';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Cs2HammingWindow';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'size';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/Cs2HammingWindow.hpp';
      sec-mem-desc-line = '82';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Constructor

@param size the size of the window
@param cached true if the window must be preevaluated in a buffer
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_cs2_hamming_window_1a3f342ff907141da428f5e4255dd7763f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Cs2HammingWindow';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'size';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const std::string &
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/Cs2HammingWindow.hpp';
      sec-mem-desc-line = '88';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_cs2_hamming_window_1a42a7009a9fc8e56f2508cd7d7f563fa3';
      sec-mem-virt = virtual;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
virtual
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '~Cs2HammingWindow';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/Cs2HammingWindow.hpp';
      sec-mem-desc-line = '97';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Destructor
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_cs2_hamming_window_1a269a092db403a2bd7bb93456dc39be60';
      sec-mem-virt = virtual;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'FillWindow';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/Cs2HammingWindow.hpp';
      sec-mem-desc-line = '208';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Initialize the window with the correct values, given
its actual size. This is a pure virtual function, which 
is redefined by each window class.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/Cs2HammingWindow.hpp';
  cp-fileline  = '73';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Cs2Hamming windowing algorithm.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-inheritancegraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 697;
        node-label = 'tsa::BaseWindow';
        node-link = {
          node-link-id = 'classtsa_1_1_base_window';
        };
        node-child = {
          child-id = '698';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 698;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */
      node = {
        node-id    = 696;
        node-label = 'tsa::Cs2HammingWindow';
        node-link = {
          node-link-id = 'classtsa_1_1_cs2_hamming_window';
        };
        node-child = {
          child-id = '697';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 700;
        node-label = 'tsa::BaseWindow';
        node-link = {
          node-link-id = 'classtsa_1_1_base_window';
        };
        node-child = {
          child-id = '701';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 701;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */
      node = {
        node-id    = 699;
        node-label = 'tsa::Cs2HammingWindow';
        node-link = {
          node-link-id = 'classtsa_1_1_cs2_hamming_window';
        };
        node-child = {
          child-id = '700';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classtsa_1_1_cs2_hann_window';
  cp-name   = 'tsa::Cs2HannWindow';
  cp-ref     = {
    ref-type = base;
    ref-id   = 'classtsa_1_1_base_window';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_cs2_hann_window_1aaa914c46b51ba07093b04a473a164699';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Cs2HannWindow';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'size';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/Cs2HannWindow.hpp';
      sec-mem-desc-line = '82';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Constructor

@param size the size of the window
@param cached true if the window must be preevaluated in a buffer
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_cs2_hann_window_1ac32bd6fa3481fd94c0729d6a77ca52c7';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Cs2HannWindow';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'size';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const std::string &
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/Cs2HannWindow.hpp';
      sec-mem-desc-line = '88';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_cs2_hann_window_1ae46ac2cfdbfc9bef375e0cab72e379e2';
      sec-mem-virt = virtual;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
virtual
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '~Cs2HannWindow';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/Cs2HannWindow.hpp';
      sec-mem-desc-line = '97';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Destructor
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_cs2_hann_window_1a0da151916492d8ab9504ee40872131a2';
      sec-mem-virt = virtual;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'FillWindow';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/Cs2HannWindow.hpp';
      sec-mem-desc-line = '199';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Initialize the window with the correct values, given
its actual size. This is a pure virtual function, which 
is redefined by each window class.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/Cs2HannWindow.hpp';
  cp-fileline  = '73';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Cs2Hann windowing algorithm.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-inheritancegraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 703;
        node-label = 'tsa::BaseWindow';
        node-link = {
          node-link-id = 'classtsa_1_1_base_window';
        };
        node-child = {
          child-id = '704';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 702;
        node-label = 'tsa::Cs2HannWindow';
        node-link = {
          node-link-id = 'classtsa_1_1_cs2_hann_window';
        };
        node-child = {
          child-id = '703';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 704;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 706;
        node-label = 'tsa::BaseWindow';
        node-link = {
          node-link-id = 'classtsa_1_1_base_window';
        };
        node-child = {
          child-id = '707';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 705;
        node-label = 'tsa::Cs2HannWindow';
        node-link = {
          node-link-id = 'classtsa_1_1_cs2_hann_window';
        };
        node-child = {
          child-id = '706';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 707;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
struct = {
  cp-id     = 'struct_function_parser_1_1_data';
  cp-name   = 'FunctionParser::Data';
  cp-section = {
    sec-kind = 'public-type';
    sec-member = {
      sec-mem-kind = 'typedef';
      sec-mem-id   = 'struct_function_parser_1_1_data_1a02f3fbca3164d0e498312b418258ea84';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::map< std::string, unsigned >
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'VarMap_t';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/fparser.hpp';
      sec-mem-desc-line = '87';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'typedef';
      sec-mem-id   = 'struct_function_parser_1_1_data_1a74ff90f5d1687b68363d1602ef0ccece';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::map< std::string, double >
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'ConstMap_t';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/fparser.hpp';
      sec-mem-desc-line = '90';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'struct_function_parser_1_1_data_1a2f7002e4cc588de6091472be924689b0';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Data';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/fparser.hpp';
      sec-mem-desc-line = '114';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'struct_function_parser_1_1_data_1a1091c2cf47cbd047273335f913bb2f82';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = '~Data';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/fparser.hpp';
      sec-mem-desc-line = '115';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'struct_function_parser_1_1_data_1a680226a014211a42b2186a3dc0da0292';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Data';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const Data &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-defname = 'cpy';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/fparser.hpp';
      sec-mem-desc-line = '116';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'struct_function_parser_1_1_data_1a5de0c72e14a8dc7fd8d708dfbb013a45';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Data &
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'operator=';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const Data &
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/fparser.hpp';
      sec-mem-desc-line = '118';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'struct_function_parser_1_1_data_1a73a9146066451148d4ec8fe8c0ec8418';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'referenceCounter';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/fparser.hpp';
      sec-mem-desc-line = '82';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'struct_function_parser_1_1_data_1af882554224f4977d69c5593254ac210e';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'varAmount';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/fparser.hpp';
      sec-mem-desc-line = '84';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'struct_function_parser_1_1_data_1a2e34291302b3dfafd29d64a6aacecb1f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'useDegreeConversion';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/fparser.hpp';
      sec-mem-desc-line = '85';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'struct_function_parser_1_1_data_1ab5d416f3bb9086ea069ce85831e4cff6';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
VarMap_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Variables';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/fparser.hpp';
      sec-mem-desc-line = '88';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'struct_function_parser_1_1_data_1a832899b555441fe2ce6bfaf5e0c19f6d';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
ConstMap_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Constants';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/fparser.hpp';
      sec-mem-desc-line = '91';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'struct_function_parser_1_1_data_1aca8bc3c4c9840a4ce7fc75a6fb6d0e61';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
VarMap_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'FuncPtrNames';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/fparser.hpp';
      sec-mem-desc-line = '93';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'struct_function_parser_1_1_data_1a1ba8025daa062d7eef15b95a49c4607f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::vector< FuncPtrData >
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'FuncPtrs';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/fparser.hpp';
      sec-mem-desc-line = '102';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'struct_function_parser_1_1_data_1ac552328a6854b174a7d085d9df0c8943';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
VarMap_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'FuncParserNames';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/fparser.hpp';
      sec-mem-desc-line = '104';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'struct_function_parser_1_1_data_1a29d036708b0524b8ff0ddd3e6248ef6f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::vector< FunctionParser * >
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'FuncParsers';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/fparser.hpp';
      sec-mem-desc-line = '105';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'struct_function_parser_1_1_data_1a113be528db3c02713aa9887732897f8d';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'ByteCode';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/fparser.hpp';
      sec-mem-desc-line = '107';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'struct_function_parser_1_1_data_1a6037b3f5d5d8854dfd9ec15b9ac0924f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'ByteCodeSize';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/fparser.hpp';
      sec-mem-desc-line = '108';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'struct_function_parser_1_1_data_1a5a1b2b3c4adaed1b098413547cc67ce3';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Immed';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/fparser.hpp';
      sec-mem-desc-line = '109';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'struct_function_parser_1_1_data_1a6391f52f7d877cdde635f758d7e9fdbb';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'ImmedSize';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/fparser.hpp';
      sec-mem-desc-line = '110';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'struct_function_parser_1_1_data_1a1ba27ea1afffc0f361e4da36723caaa7';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Stack';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/fparser.hpp';
      sec-mem-desc-line = '111';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'struct_function_parser_1_1_data_1afb5f715f8c45ce98b654cb169e656c8b';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'StackSize';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/fparser.hpp';
      sec-mem-desc-line = '112';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/fparser.hpp';
  cp-fileline  = '81';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structtsa_1_1_data_exception';
  cp-name   = 'tsa::DataException';
  cp-section = {
    sec-kind = 'public-type';
    sec-member = {
      sec-mem-kind = 'enum';
      sec-mem-id   = 'structtsa_1_1_data_exception_1a712f1aa505cbed35af618dd632181d18';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-name = 'exception_type';
      sec-mem-enum = { enum-name = data_loss; };
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp';
      sec-mem-desc-line = '77';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Type of problem.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'structtsa_1_1_data_exception_1a9f85452c8350284658dc9c8389871c19';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'DataException';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'ts';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'te';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
exception_type
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'e';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp';
      sec-mem-desc-line = '89';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Constructor

@param ts start of data loss (included)
@param te end of data loss (excluded)
@param e problem type
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structtsa_1_1_data_exception_1aaae025849a7bf6de877817af91482a55';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
exception_type
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Exception';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp';
      sec-mem-desc-line = '92';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Exception type  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structtsa_1_1_data_exception_1a421e0d69c69536dea4e49a26eb644385';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'StartTime';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp';
      sec-mem-desc-line = '93';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Start time of data loss (included)  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structtsa_1_1_data_exception_1a38964a3999b72d3a8860f6b870eadef6';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'EndTime';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp';
      sec-mem-desc-line = '94';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
End time of data loss (excluded)    
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp';
  cp-fileline  = '71';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
A small structure which contains informations about
a data loss period.
_EnD_oF_dEf_TeXt_;
}; /* struct */
class = {
  cp-id     = 'classtsa_1_1_d_c_t';
  cp-name   = 'tsa::DCT';
  cp-ref     = {
    ref-type = base;
    ref-id   = 'classtsa_1_1_base_f_f_t';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_d_c_t_1af005a7dbab2f6c40e82f54a0bb55a7ec';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'DCT';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'size';
        sec-mem-param-defval = <<_EnD_oF_dEf_TeXt_
0
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
enum FFTPlanningMode
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'mode';
        sec-mem-param-defval = <<_EnD_oF_dEf_TeXt_
ESTIMATE
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'PreserveInput';
        sec-mem-param-defval = <<_EnD_oF_dEf_TeXt_
true
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/DCT.hpp';
      sec-mem-desc-line = '82';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Constructor

@param size the size of the transform
@param mode specify the way in which plans are calculated
@param PreserveInput true if the input buffer must be preserved during the transform, false otherwise
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_d_c_t_1abff7d5fe3f8f732db5963e2dfb22dfa4';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'DCT';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const DCT &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'from';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/DCT.hpp';
      sec-mem-desc-line = '89';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Copy constructor

@param from The instance that must be copied
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_d_c_t_1a014240a8695d47e1f8191d108e88032f';
      sec-mem-virt = virtual;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
virtual
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '~DCT';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/DCT.hpp';
      sec-mem-desc-line = '94';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Destructor
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/DCT.hpp';
  cp-fileline  = '73';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Multichannel Discrete Cosine Transform.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-inheritancegraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 712;
        node-label = 'tsa::DCT';
        node-link = {
          node-link-id = 'classtsa_1_1_d_c_t';
        };
        node-child = {
          child-id = '713';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 713;
        node-label = 'tsa::BaseFFT';
        node-link = {
          node-link-id = 'classtsa_1_1_base_f_f_t';
        };
        node-child = {
          child-id = '714';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 714;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 715;
        node-label = 'tsa::DCT';
        node-link = {
          node-link-id = 'classtsa_1_1_d_c_t';
        };
        node-child = {
          child-id = '716';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 716;
        node-label = 'tsa::BaseFFT';
        node-link = {
          node-link-id = 'classtsa_1_1_base_f_f_t';
        };
        node-child = {
          child-id = '717';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 717;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classtsa_1_1_double_whitening';
  cp-name   = 'tsa::DoubleWhitening';
  cp-ref     = {
    ref-type = base;
    ref-id   = 'classtsa_1_1_algo_base';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_double_whitening_1ae3fdd3dfab61182230994059995ad710';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'DoubleWhitening';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
LatticeView &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'LV';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'OutputSize';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'ExtraSize';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/DoubleWhitening.hpp';
      sec-mem-desc-line = '88';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
 Constructor
@param LV is the view containg the parameters for the Lattice Filter  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_double_whitening_1a58092ba19e23ed52e13c8631dd2bd011';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'DoubleWhitening';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
Dvector &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'ParcorF';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
Dvector &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'ParcorB';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
Dmatrix &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'ErrF';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
Dmatrix &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'ErrB';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'OutputSize';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'ExtraSize';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/DoubleWhitening.hpp';
      sec-mem-desc-line = '90';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_double_whitening_1acb49520a47e49872aa817d09b98e0b76';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'init';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
LatticeView &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'LV';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/DoubleWhitening.hpp';
      sec-mem-desc-line = '94';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_double_whitening_1a313995cfbaec5ed83333b0b63214270b';
      sec-mem-virt = virtual;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
virtual
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '~DoubleWhitening';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/DoubleWhitening.hpp';
      sec-mem-desc-line = '99';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Destructor
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_double_whitening_1ad472c774f12c7ad546950187be9bafce';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
FifoBuffer
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mBuffer';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/DoubleWhitening.hpp';
      sec-mem-desc-line = '259';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_double_whitening_1abcf4caf8a0d07a8ab19c61b73f5e36b7';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mFirstCall';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/DoubleWhitening.hpp';
      sec-mem-desc-line = '260';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_double_whitening_1a921503ab03e5b133a04795f04ee73b42';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mOutputSize';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/DoubleWhitening.hpp';
      sec-mem-desc-line = '261';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_double_whitening_1a2cce95c06b23e6311261476052941d7c';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mTotSize';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/DoubleWhitening.hpp';
      sec-mem-desc-line = '262';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_double_whitening_1afb79abe4e14ab46247a46de61f732db8';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mOrder';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/DoubleWhitening.hpp';
      sec-mem-desc-line = '263';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_double_whitening_1a41231ba5d7395b08cd8a36578dc639a5';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mStartTime';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/DoubleWhitening.hpp';
      sec-mem-desc-line = '264';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_double_whitening_1a2bb0cecac07b14fbd1f05df23138f7e8';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mSampling';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/DoubleWhitening.hpp';
      sec-mem-desc-line = '265';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_double_whitening_1a6a5ffe2b00d598c95a10913b42383361';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Dvector
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mParcorF';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/DoubleWhitening.hpp';
      sec-mem-desc-line = '266';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_double_whitening_1a6b5cc8f3c501692349449d6580b739a5';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Dvector
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mParcorB';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/DoubleWhitening.hpp';
      sec-mem-desc-line = '267';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_double_whitening_1aa89217d3e82036c041f44e8f9d31951c';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Dmatrix
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mErrF';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/DoubleWhitening.hpp';
      sec-mem-desc-line = '268';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_double_whitening_1aeb88a0efebbd64e8b1cacaf574e62cfb';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Dmatrix
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mErrB';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/DoubleWhitening.hpp';
      sec-mem-desc-line = '269';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_double_whitening_1acf877cd00f9096595ccf1bf96e07e70d';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mStatus';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/DoubleWhitening.hpp';
      sec-mem-desc-line = '270';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_double_whitening_1a210ca70e697ac431e21381905392223f';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Dmatrix
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mEf';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/DoubleWhitening.hpp';
      sec-mem-desc-line = '271';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_double_whitening_1a43a337d8f3320fe180dea2d4266a2a2a';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Dmatrix
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mEb';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/DoubleWhitening.hpp';
      sec-mem-desc-line = '272';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_double_whitening_1ae27de92c8e9e51195590dc842ce211e6';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Dmatrix
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mWhitened';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/DoubleWhitening.hpp';
      sec-mem-desc-line = '273';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/DoubleWhitening.hpp';
  cp-fileline  = '81';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Implement the double whitening filter in time domain.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
A more detailed description of DoubleWhitening  
_EnD_oF_dEf_TeXt_;
  cp-inheritancegraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 718;
        node-label = 'tsa::DoubleWhitening';
        node-link = {
          node-link-id = 'classtsa_1_1_double_whitening';
        };
        node-child = {
          child-id = '719';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 719;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 722;
        node-label = 'tsa::FifoBuffer';
        node-link = {
          node-link-id = 'classtsa_1_1_fifo_buffer';
        };
      }; /* node */
      node = {
        node-id    = 720;
        node-label = 'tsa::DoubleWhitening';
        node-link = {
          node-link-id = 'classtsa_1_1_double_whitening';
        };
        node-child = {
          child-id = '721';
          relation = public-inheritance;
        }; /* node-child */
        node-child = {
          child-id = '722';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
mBuffer
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 721;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classtsa_1_1_d_s_t';
  cp-name   = 'tsa::DST';
  cp-ref     = {
    ref-type = base;
    ref-id   = 'classtsa_1_1_base_f_f_t';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_d_s_t_1a903a949ad84aaa3f5ef11e9f08a1abf9';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'DST';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'size';
        sec-mem-param-defval = <<_EnD_oF_dEf_TeXt_
0
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
enum FFTPlanningMode
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'mode';
        sec-mem-param-defval = <<_EnD_oF_dEf_TeXt_
ESTIMATE
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'PreserveInput';
        sec-mem-param-defval = <<_EnD_oF_dEf_TeXt_
true
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/DST.hpp';
      sec-mem-desc-line = '82';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Constructor

@param size the size of the transform
@param mode specify the way in which plans are calculated
@param PreserveInput true if the input buffer must be preserved during the transform, false otherwise
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_d_s_t_1ac7d9747deee363dbd0d20edc19d0028a';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'DST';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const DST &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'from';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/DST.hpp';
      sec-mem-desc-line = '89';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Copy constructor

@param from The instance that must be copied
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_d_s_t_1a670a8bae9d3361b5a0e0be7160fee75c';
      sec-mem-virt = virtual;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
virtual
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '~DST';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/DST.hpp';
      sec-mem-desc-line = '94';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Destructor
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/DST.hpp';
  cp-fileline  = '73';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Multichannel Discrete Sine Transform.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-inheritancegraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 723;
        node-label = 'tsa::DST';
        node-link = {
          node-link-id = 'classtsa_1_1_d_s_t';
        };
        node-child = {
          child-id = '724';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 724;
        node-label = 'tsa::BaseFFT';
        node-link = {
          node-link-id = 'classtsa_1_1_base_f_f_t';
        };
        node-child = {
          child-id = '725';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 725;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 726;
        node-label = 'tsa::DST';
        node-link = {
          node-link-id = 'classtsa_1_1_d_s_t';
        };
        node-child = {
          child-id = '727';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 727;
        node-label = 'tsa::BaseFFT';
        node-link = {
          node-link-id = 'classtsa_1_1_base_f_f_t';
        };
        node-child = {
          child-id = '728';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 728;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classtsa_1_1_event';
  cp-name   = 'tsa::Event';
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_event_1a2d217d1b64da89180b87e58341b8b76f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Event';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/EventDescription.hpp';
      sec-mem-desc-line = '119';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_event_1ae01cd6ea28101fcbf3947de6b4176c3f';
      sec-mem-virt = virtual;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
virtual
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '~Event';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/EventDescription.hpp';
      sec-mem-desc-line = '129';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Destructor
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_event_1a8057303c7d7b0faea2594f86c03e0c97';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Event &
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'operator=';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const Event &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'from';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/EventDescription.hpp';
      sec-mem-desc-line = '141';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param from 
@return 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_event_1ac0e06c387142f5f986e1fa40f0b196a0';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mTime';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/EventDescription.hpp';
      sec-mem-desc-line = '132';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_event_1a740dc0ff8eb9379a52541fe00ab7c293';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mSNR';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/EventDescription.hpp';
      sec-mem-desc-line = '133';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_event_1abbb6ba2540bacfea050d8074d6dd1482';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mWave';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/EventDescription.hpp';
      sec-mem-desc-line = '134';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/EventDescription.hpp';
  cp-fileline  = '116';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classtsa_1_1_event_full';
  cp-name   = 'tsa::EventFull';
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_event_full_1a393a0a4f3d8645e428e1fa859ee6e27b';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'EventFull';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/EventDescription.hpp';
      sec-mem-desc-line = '84';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_event_full_1a4f581518368d444de09bedaff348cf15';
      sec-mem-virt = virtual;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
virtual
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '~EventFull';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/EventDescription.hpp';
      sec-mem-desc-line = '96';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Destructor
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_event_full_1a94cac0a4cea4fc0650ee189717efaf62';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
EventFull &
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'operator=';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const EventFull &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'from';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/EventDescription.hpp';
      sec-mem-desc-line = '105';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_event_full_1afb3f24f8886fd72902f3c24a18c4fac5';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mTime';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/EventDescription.hpp';
      sec-mem-desc-line = '99';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_event_full_1a1cfa881637a706ed70a27cabfa5d8039';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mSNR';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/EventDescription.hpp';
      sec-mem-desc-line = '100';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_event_full_1a8abbd6e97b23d2c69bc57fa4c055e8ec';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mCmax';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/EventDescription.hpp';
      sec-mem-desc-line = '101';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_event_full_1a29245bb8db5f94ca1cb6559b55e741c3';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mlevel';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/EventDescription.hpp';
      sec-mem-desc-line = '102';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_event_full_1a3edd346809a57862f998d60b566320b4';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mWave';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/EventDescription.hpp';
      sec-mem-desc-line = '103';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/EventDescription.hpp';
  cp-fileline  = '81';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
EventDescription is a class container for a transient event.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classtsa_1_1_event_full_featured';
  cp-name   = 'tsa::EventFullFeatured';
  cp-section = {
    sec-kind = 'public-type';
    sec-member = {
      sec-mem-kind = 'typedef';
      sec-mem-id   = 'classtsa_1_1_event_full_featured_1a6488de4b125cea43e4528244e3300ace';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
boost::numeric::ublas::vector< double >
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Dvector';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/EventFullFeatured.hpp';
      sec-mem-desc-line = '84';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_event_full_featured_1a8bc28f8e2fcf53b5f82007e66fd7dcc7';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'EventFullFeatured';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'NumCoeff';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/EventFullFeatured.hpp';
      sec-mem-desc-line = '85';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_event_full_featured_1a388415f631c395f5400fba612dd64fb7';
      sec-mem-virt = virtual;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
virtual
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '~EventFullFeatured';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/EventFullFeatured.hpp';
      sec-mem-desc-line = '91';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Destructor
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_event_full_featured_1af1e6685d67bfcb136997b1bf089a6daf';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'operator=';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const EventFullFeatured &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'from';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/EventFullFeatured.hpp';
      sec-mem-desc-line = '93';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_event_full_featured_1a6b9088ed7c7a397564879061dbec220c';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'EVcopy';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const EventFullFeatured &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'from';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/EventFullFeatured.hpp';
      sec-mem-desc-line = '95';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_event_full_featured_1aeafc3b5782ce26ca5cb7e98ee5786f71';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'outprint';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/EventFullFeatured.hpp';
      sec-mem-desc-line = '97';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_event_full_featured_1a36acadaf6ce17ac9dfe3d8cd2e13aa25';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'SetCoeff';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'i';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'v';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/EventFullFeatured.hpp';
      sec-mem-desc-line = '110';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_event_full_featured_1ac17118b2291d80c701a380cb82af7b66';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'GetCoeff';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'i';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/EventFullFeatured.hpp';
      sec-mem-desc-line = '114';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_event_full_featured_1aa7692d87294f90489dacf523851e3c27';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mTime';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/EventFullFeatured.hpp';
      sec-mem-desc-line = '120';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_event_full_featured_1a49a72cabed27a5469df2f4bcaea6aa3f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mSNR';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/EventFullFeatured.hpp';
      sec-mem-desc-line = '121';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_event_full_featured_1a65ea47ec82b8f5a3c5ea505f9e7416c0';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Dvector
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mCoeff';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/EventFullFeatured.hpp';
      sec-mem-desc-line = '122';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_event_full_featured_1a80b882485bb57e529fdefabbb96d86e8';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mlevel';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/EventFullFeatured.hpp';
      sec-mem-desc-line = '123';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_event_full_featured_1ac7d44616083f5a5b2a403986b0c7bf6c';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mWave';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/EventFullFeatured.hpp';
      sec-mem-desc-line = '124';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/EventFullFeatured.hpp';
  cp-fileline  = '82';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classeternity_1_1exception';
  cp-name   = 'eternity::exception';
  cp-ref     = {
    ref-type = base;
    ref-id   = 'classstd_1_1exception';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classeternity_1_1exception_1a681b708eb4c5870221307180d685ea0f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'exception';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'swhat';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/dynamic.hpp';
      sec-mem-desc-line = '178';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classeternity_1_1exception_1a68454ae0f538c10f63380c6d9954acab';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'exception';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const exception &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'right';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/dynamic.hpp';
      sec-mem-desc-line = '180';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classeternity_1_1exception_1a9723617b72c37884f532451c578a3d39';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
exception &
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'operator=';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const exception &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'right';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/dynamic.hpp';
      sec-mem-desc-line = '184';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classeternity_1_1exception_1a88196166c38b9b66d790cf94be058e18';
      sec-mem-virt = virtual;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
virtual
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '~exception';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/dynamic.hpp';
      sec-mem-desc-line = '189';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classeternity_1_1exception_1a5267219aab7b3bd423a6a751939928a6';
      sec-mem-virt = virtual;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
virtual const char *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'what';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/dynamic.hpp';
      sec-mem-desc-line = '190';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'protected-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classeternity_1_1exception_1ad3190da518fc2bb1dcc50fa665176036';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'm_swhat';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/dynamic.hpp';
      sec-mem-desc-line = '175';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/dynamic.hpp';
  cp-fileline  = '173';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-inheritancegraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 735;
        node-label = 'eternity::exception';
        node-link = {
          node-link-id = 'classeternity_1_1exception';
        };
        node-child = {
          child-id = '736';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 736;
        node-label = 'std::exception';
      }; /* node */

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 737;
        node-label = 'eternity::exception';
        node-link = {
          node-link-id = 'classeternity_1_1exception';
        };
        node-child = {
          child-id = '738';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 738;
        node-label = 'std::exception';
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classstd_1_1exception';
  cp-name   = 'std::exception';
  cp-ref     = {
    ref-type = derived;
    ref-id   = 'classeternity_1_1exception';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/dynamic.hpp';
  cp-fileline  = '173';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-inheritancegraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 740;
        node-label = 'eternity::exception';
        node-link = {
          node-link-id = 'classeternity_1_1exception';
        };
        node-child = {
          child-id = '739';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 739;
        node-label = 'exception';
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classeternity_1_1factory';
  cp-name   = 'eternity::factory';
  cp-ref     = {
    ref-type = base;
    ref-id   = 'classeternity_1_1_ifactory';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classeternity_1_1factory_1a0fc6f0a6ec7ef7057f06924b948d8c94';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'factory';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/dynamic.hpp';
      sec-mem-desc-line = '80';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Default constructor.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
    The default constructor that add this
to the gloab list of factory<t> object.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classeternity_1_1factory_1aabaf1fee796b93628f897af8ac9c3ea9';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'factory';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'conventional_name';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/dynamic.hpp';
      sec-mem-desc-line = '83';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Constructor for cross compiler compatibility.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classeternity_1_1factory_1a5abc378892135b2d5491d7380752bb84';
      sec-mem-virt = virtual;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
virtual
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '~factory';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/dynamic.hpp';
      sec-mem-desc-line = '86';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Remove this from the gloab list of factory<t> object.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classeternity_1_1factory_1a08c1c494bc749955f9b0767d31933c2b';
      sec-mem-virt = virtual;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
virtual void *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'create';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::string &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'class_name';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/dynamic.hpp';
      sec-mem-desc-line = '95';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
create an instance from class t if the same specified in class_name
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
    Return a pointer to a new istance of the class t (the only
template parmeter of factory<t>) only if the string
class_name is actually the name of class t.
Otherwise return a NULL pointer
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classeternity_1_1factory_1a0b7c7bc194b178379eb1b880f87d3b48';
      sec-mem-virt = virtual;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
virtual std::string
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'get_conventional_name';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::string &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'compiler_name';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/dynamic.hpp';
      sec-mem-desc-line = '101';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Return the conventional name of class t if 
    typeid(t).name() match with compiler_name.
    Otherwise return an empty.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classeternity_1_1factory_1abf647d721a959e2a9728ff79b2bf094d';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'm_sConventionalName';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/dynamic.hpp';
      sec-mem-desc-line = '72';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
An istance of the object to dynamic create.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/dynamic.hpp';
  cp-fileline  = '70';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
factory<t> is responsable for the creation
    of object derived by the class t at run-time.
_EnD_oF_dEf_TeXt_;
  cp-inheritancegraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 743;
        node-label = 'eternity::Ifactory';
        node-link = {
          node-link-id = 'classeternity_1_1_ifactory';
        };
      }; /* node */
      node = {
        node-id    = 742;
        node-label = 'eternity::factory< t >';
        node-link = {
          node-link-id = 'classeternity_1_1factory';
        };
        node-child = {
          child-id = '743';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 745;
        node-label = 'eternity::Ifactory';
        node-link = {
          node-link-id = 'classeternity_1_1_ifactory';
        };
        node-child = {
          child-id = '745';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
m_pHead
m_pNext
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 744;
        node-label = 'eternity::factory< t >';
        node-link = {
          node-link-id = 'classeternity_1_1factory';
        };
        node-child = {
          child-id = '745';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classtsa_1_1_fifo_buffer';
  cp-name   = 'tsa::FifoBuffer';
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_fifo_buffer_1ad30fe947e5c2b34614859cbf12d749f1';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'FifoBuffer';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'channels';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FifoBuffer.hpp';
      sec-mem-desc-line = '85';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Constructor.

@param channels number of channels
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_fifo_buffer_1ac6a76ca0fd208c80de6e4e04d5c43173';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'FifoBuffer';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const FifoBuffer &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'from';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FifoBuffer.hpp';
      sec-mem-desc-line = '93';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Copy constructor

@param from The instance that must be copied
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_fifo_buffer_1ad7bec7c4fc528a12763f29c8f6a8e460';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = '~FifoBuffer';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FifoBuffer.hpp';
      sec-mem-desc-line = '98';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Destructor
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_fifo_buffer_1ad3c89a0f4aa3e475e136ec8c47f2165e';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
FifoBuffer &
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'operator=';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const FifoBuffer &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'from';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FifoBuffer.hpp';
      sec-mem-desc-line = '107';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Assignement operator

@param from The instance to be assigned from

@return a reference to a new object
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_fifo_buffer_1add6db36d6910a8b1efba4b2439f4b9c5';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mChannels';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FifoBuffer.hpp';
      sec-mem-desc-line = '266';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Number of channels to resample  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_fifo_buffer_1a538034e48a1c598fbbde1fefb9e92f91';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::queue< Dvector * >
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mRepository';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FifoBuffer.hpp';
      sec-mem-desc-line = '267';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Repository for unused data points  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_fifo_buffer_1aa8039b60b66e4e6bedd661352fff095f';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::deque< Dvector * >
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mBuffer';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FifoBuffer.hpp';
      sec-mem-desc-line = '268';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Buffer for incoming data points  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FifoBuffer.hpp';
  cp-fileline  = '76';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Band limited interpolation.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classeternity_1_1file__archive';
  cp-name   = 'eternity::file_archive';
  cp-ref     = {
    ref-type = base;
    ref-id   = 'classeternity_1_1bin__archive';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classeternity_1_1file__archive_1ab2a892aad41300e922115115b76b7754';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'file_archive';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist.hpp';
      sec-mem-desc-line = '197';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classeternity_1_1file__archive_1a6f7dd96ce65d0be588f31286313a4b5a';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'file_archive';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'file_name';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
opening_mode
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'mode';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist.hpp';
      sec-mem-desc-line = '201';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classeternity_1_1file__archive_1a122b37e9949cd1a2f6279ed23d01d97f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = '~file_archive';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist.hpp';
      sec-mem-desc-line = '203';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classeternity_1_1file__archive_1aa42b3bfaf4e595f61ec07bec48676d46';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'close';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist.hpp';
      sec-mem-desc-line = '209';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
close the archive file and release memory used.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classeternity_1_1file__archive_1a64a17edf2cea4f1582a5a3c44eb86fa4';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'open';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'file_name';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
opening_mode
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'mode';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist.hpp';
      sec-mem-desc-line = '223';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
      initialize the file_archive using the file
named file_name. If mode is load create
the file. Anyway init update archive to
begin persistence operations.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classeternity_1_1file__archive_1a5f97e0b816c5d9406f675b25f34c21f8';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'open';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'sName';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'loading';
        sec-mem-param-defval = <<_EnD_oF_dEf_TeXt_
true
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist.hpp';
      sec-mem-desc-line = '226';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
open the archive file and update this for the serialization
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classeternity_1_1file__archive_1a0eaf4b5937b3ff46df3627f64efc19e8';
      sec-mem-virt = virtual;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
virtual size_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'write';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const void *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'buffer';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
size_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'size';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
size_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'count';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist.hpp';
      sec-mem-desc-line = '228';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
write a buffer of a certain legnth n time in the archive
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classeternity_1_1file__archive_1a307b43ac9f06c7077ac0f7e48dc0d7ab';
      sec-mem-virt = virtual;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
virtual size_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'read';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
void *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'buffer';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
size_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'size';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
size_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'count';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist.hpp';
      sec-mem-desc-line = '230';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
read a buffer of a certain legnth n time in the archive
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classeternity_1_1file__archive_1ac702d57d9633f8695476da8a7d55dd9d';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::fstream
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'stream';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist.hpp';
      sec-mem-desc-line = '194';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist.hpp';
  cp-fileline  = '193';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
    Realize an binary archive using the common file
like stream.
_EnD_oF_dEf_TeXt_;
  cp-inheritancegraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 749;
        node-label = 'eternity::bin_archive';
        node-link = {
          node-link-id = 'classeternity_1_1bin__archive';
        };
        node-child = {
          child-id = '750';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 748;
        node-label = 'eternity::file_archive';
        node-link = {
          node-link-id = 'classeternity_1_1file__archive';
        };
        node-child = {
          child-id = '749';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 750;
        node-label = 'eternity::archive';
        node-link = {
          node-link-id = 'classeternity_1_1archive';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 752;
        node-label = 'eternity::bin_archive';
        node-link = {
          node-link-id = 'classeternity_1_1bin__archive';
        };
        node-child = {
          child-id = '753';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 751;
        node-label = 'eternity::file_archive';
        node-link = {
          node-link-id = 'classeternity_1_1file__archive';
        };
        node-child = {
          child-id = '752';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 753;
        node-label = 'eternity::archive';
        node-link = {
          node-link-id = 'classeternity_1_1archive';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classtsa_1_1_f_r_a_m_e_h___channel';
  cp-name   = 'tsa::FRAMEH_Channel';
  cp-ref     = {
    ref-type = base;
    ref-id   = 'classtsa_1_1_channel_descriptor';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-section = {
    sec-kind = 'public-type';
    sec-member = {
      sec-mem-kind = 'enum';
      sec-mem-id   = 'classtsa_1_1_f_r_a_m_e_h___channel_1af9bd3bfda5ebc40f65e8af27abac9fe3';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-name = 'field_type';
      sec-mem-enum = { enum-name = field_run; };
      sec-mem-enum = { enum-name = field_frame; };
      sec-mem-enum = { enum-name = field_dataQuality; };
      sec-mem-enum = { enum-name = field_GTimeS; };
      sec-mem-enum = { enum-name = field_GTimeN; };
      sec-mem-enum = { enum-name = field_ULeapS; };
      sec-mem-enum = { enum-name = field_dt; };
      sec-mem-enum = { enum-name = field_time; };
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp';
      sec-mem-desc-line = '463';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Field type in the frame to dump on channel
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_f_r_a_m_e_h___channel_1a27a8bc2d9aba282cb68f855c49b2eaba';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'FRAMEH_Channel';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
FrameIStream *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'FIS';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
enum field_type
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'ft';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'id';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp';
      sec-mem-desc-line = '482';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Constructor

@param FIS pointer to the FrameIStream class
@param ft the field type of the requested channel
@param id id of the channel
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_f_r_a_m_e_h___channel_1a6174aa904d4e084e77695f8e19b8fcd2';
      sec-mem-virt = virtual;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
virtual
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '~FRAMEH_Channel';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp';
      sec-mem-desc-line = '488';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Destructor
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_f_r_a_m_e_h___channel_1af757e23c465da95ac0ed7b97876ead66';
      sec-mem-virt = virtual;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
virtual void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'AddData';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp';
      sec-mem-desc-line = '496';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This function must be called when there are not enough data 
to fill the output view. It reads a chunk of data from the 
current frame.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_f_r_a_m_e_h___channel_1a022b134fb62d99e8cb00a6ce28b2d569';
      sec-mem-virt = virtual;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
virtual double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'GetLength';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp';
      sec-mem-desc-line = '504';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Get the maximul time length of data that can be currently filled
without calling AddData.

@return the time length of the data available in seconds
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'public-static-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_f_r_a_m_e_h___channel_1a9a920292ece110df4cdce41f9f8e451b';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
static FRAMEH_Channel *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Create';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
FrameIStream *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'FIS';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'field_name';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'id';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp';
      sec-mem-desc-line = '515';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Create, if possible, an instance of the class

@param FIS pointer to the FrameIStream class instance
@param name name of the channel
@param id index of the channel

@return pointer to the created class instance or null
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_f_r_a_m_e_h___channel_1aff87ea1426812c4e02ccaa741774db29';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mFieldName';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp';
      sec-mem-desc-line = '518';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Field name  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_f_r_a_m_e_h___channel_1a3a63c899c18c606c39c2cd32859d3b05';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
enum field_type
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mFieldType';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp';
      sec-mem-desc-line = '518';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Field type  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp';
  cp-fileline  = '456';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Descriptor for a FrameH field channel.
_EnD_oF_dEf_TeXt_;
  cp-inheritancegraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 755;
        node-label = 'tsa::ChannelDescriptor';
        node-link = {
          node-link-id = 'classtsa_1_1_channel_descriptor';
        };
        node-child = {
          child-id = '756';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 756;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */
      node = {
        node-id    = 754;
        node-label = 'tsa::FRAMEH_Channel';
        node-link = {
          node-link-id = 'classtsa_1_1_f_r_a_m_e_h___channel';
        };
        node-child = {
          child-id = '755';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 760;
        node-label = 'tsa::FrameIStream';
        node-link = {
          node-link-id = 'classtsa_1_1_frame_i_stream';
        };
        node-child = {
          child-id = '759';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 758;
        node-label = 'tsa::ChannelDescriptor';
        node-link = {
          node-link-id = 'classtsa_1_1_channel_descriptor';
        };
        node-child = {
          child-id = '759';
          relation = public-inheritance;
        }; /* node-child */
        node-child = {
          child-id = '760';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
mFIS
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 759;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */
      node = {
        node-id    = 757;
        node-label = 'tsa::FRAMEH_Channel';
        node-link = {
          node-link-id = 'classtsa_1_1_f_r_a_m_e_h___channel';
        };
        node-child = {
          child-id = '758';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classtsa_1_1_frame_i_channel';
  cp-name   = 'tsa::FrameIChannel';
  cp-ref     = {
    ref-type = base;
    ref-id   = 'classtsa_1_1_algo_base';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_frame_i_channel_1acc55687d86116d3cc2db6c4d2b2e7c1e';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'FrameIChannel';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const std::string &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'fileName';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const std::string &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'channelName';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'dLength';
        sec-mem-param-defval = <<_EnD_oF_dEf_TeXt_
1.0
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'tStart';
        sec-mem-param-defval = <<_EnD_oF_dEf_TeXt_
0.0
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIChannel.hpp';
      sec-mem-desc-line = '94';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Constructor

@param fileName the name of the frame file (or a ffl file)
@param channelName the channel's names
@param dLength length of data that will be returned by GetData()
@param tStart start time of the data returned by GetData()
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_frame_i_channel_1ab6f4fd4a65dee05ef58590ed6216408c';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = '~FrameIChannel';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIChannel.hpp';
      sec-mem-desc-line = '101';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Destructor
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_frame_i_channel_1aaca5759288add902732cc640633f17d4';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'PushFrVect';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
FrVect *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'frv';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
Dmatrix &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'data';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'row';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'offset';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'slope';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIChannel.hpp';
      sec-mem-desc-line = '157';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_frame_i_channel_1a8049d4e90ebecce30c7f60573da7fe87';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'ReopenIfModified';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIChannel.hpp';
      sec-mem-desc-line = '159';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_frame_i_channel_1a252988d4bbef0e293be14f3637edc7ef';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mFileName';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIChannel.hpp';
      sec-mem-desc-line = '161';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_frame_i_channel_1aa679a81dbcec2ca8c7126d092de59651';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
FrFile *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'miFile';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIChannel.hpp';
      sec-mem-desc-line = '162';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_frame_i_channel_1a7cc80840311ef703c68393f95b077f9a';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mChannelName';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIChannel.hpp';
      sec-mem-desc-line = '163';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_frame_i_channel_1affbd1b60487a643f2bdec4875f4d3643';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mStartTime';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIChannel.hpp';
      sec-mem-desc-line = '164';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_frame_i_channel_1a32e512e479d9f8eb1de5b7a4cfd53254';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mDataLength';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIChannel.hpp';
      sec-mem-desc-line = '165';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_frame_i_channel_1a12a55e4ea728e58b37c811fe93a7d774';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
FrVect *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mFrameVect';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIChannel.hpp';
      sec-mem-desc-line = '166';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_frame_i_channel_1a90c8009f4280dfee6a8f61b97f246a25';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mAutoIncrement';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIChannel.hpp';
      sec-mem-desc-line = '167';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_frame_i_channel_1a7a643eb00f14d0bbd02f1b04e4e3ccdc';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
time_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mLastModification';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIChannel.hpp';
      sec-mem-desc-line = '168';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIChannel.hpp';
  cp-fileline  = '82';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
A source of data taken from a Frame file.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
This class can be used to read data from a frame file, in a single channel. 
_EnD_oF_dEf_TeXt_;
  cp-inheritancegraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 761;
        node-label = 'tsa::FrameIChannel';
        node-link = {
          node-link-id = 'classtsa_1_1_frame_i_channel';
        };
        node-child = {
          child-id = '762';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 762;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 763;
        node-label = 'tsa::FrameIChannel';
        node-link = {
          node-link-id = 'classtsa_1_1_frame_i_channel';
        };
        node-child = {
          child-id = '764';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 764;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classtsa_1_1_frame_i_stream';
  cp-name   = 'tsa::FrameIStream';
  cp-ref     = {
    ref-type = base;
    ref-id   = 'classtsa_1_1_algo_base';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_frame_i_stream_1a5bd1cb2479b947745f39121ba638d23f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'FrameIStream';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const std::string &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'fileName';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const double &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'StartTime';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp';
      sec-mem-desc-line = '545';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Constructor

@param fileName the name of the frame file (or a ffl file)
@param StartTime start time of the data chunk we want
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_frame_i_stream_1a12f14bd9445709d3f03dcb122dc89889';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'FrameIStream';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const std::string &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'fileName';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const double &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'StartTime';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const double &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'TimeLength';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const std::vector< std::string > &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'channelNames';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp';
      sec-mem-desc-line = '560';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Constructor

@param fileName the name of the frame file (or a ffl file)
@param StartTime start time of the data chunk we want
@param TimeLength time length of requested data
@param channelNames a list of channel's names
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_frame_i_stream_1a867c0e6a3cd0c2405c038026880d268d';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = '~FrameIStream';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp';
      sec-mem-desc-line = '570';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Destructor
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_frame_i_stream_1a6a3a7e4523fed47c0055cb7ae1fd9435';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
ChannelDescriptor *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'CreateChannelDescriptor';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const std::string &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'cname';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'id';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp';
      sec-mem-desc-line = '757';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Create a new channel descriptor.

@param cname the name of the requested channel descriptor
@param id the index of the desired channel descriptor

@return a pointer to the new channel descriptor structure, or null
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_frame_i_stream_1af13e8a06bafa6e63bde6871d763425f1';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'DataRequired';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp';
      sec-mem-desc-line = '765';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Test if some data are required.


@return true if soem data are required
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_frame_i_stream_1a2f95f7fcf1e17f2d1b4a6b3dca976e76';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'GetData';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp';
      sec-mem-desc-line = '771';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Get new data from the file
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_frame_i_stream_1adad4100c6f0691cf47ca247b7b2f0fc6';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mStartTime';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp';
      sec-mem-desc-line = '774';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Start time for the data queue  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_frame_i_stream_1abd897050716a0879d2437a7e4f9f6b38';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mTimeLength';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp';
      sec-mem-desc-line = '775';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Time length of the data given at each request  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_frame_i_stream_1acee6c81e135c34abb9501753f8088a91';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
struct FrFile *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mpFrameFile';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp';
      sec-mem-desc-line = '776';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
The current frame file  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_frame_i_stream_1a68ac0c21e3c23a219359e177623cf4e9';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
FrameH *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mpFrame';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp';
      sec-mem-desc-line = '777';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
The current FrameH structure  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_frame_i_stream_1a14bff233330be1d0f995551d55b8eb98';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::vector< std::string >
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mChannelNames';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp';
      sec-mem-desc-line = '778';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
The list of channel names  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_frame_i_stream_1a888a976c4806d295c7ab6731459a0d90';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mFileName';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp';
      sec-mem-desc-line = '779';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
The file name  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_frame_i_stream_1aef647c717912f7f4522d98fa967de2a0';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::vector< ChannelDescriptor * >
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mChannelDescriptors';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp';
      sec-mem-desc-line = '780';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
list of channel descriptor  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_frame_i_stream_1a12d9c0c136ca288fc1fd64a660062494';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::vector< SeqViewDouble > *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mValidationView';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp';
      sec-mem-desc-line = '781';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Pointer to the validation views  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_frame_i_stream_1aef23fdf187cda4ab4a3aaaa0a9ba59ee';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mDataLoss';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp';
      sec-mem-desc-line = '782';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Data loss flag  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_frame_i_stream_1ab0dfc2d31350678af1d0e1abe165ef65';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::deque< missing_data >
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mMissExceptions';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp';
      sec-mem-desc-line = '783';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Set of data loss exception  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp';
  cp-fileline  = '536';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
A source of data taken from a Frame file.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
This class can be used to read data from a frame file. 
A set of channels can be specified, which are returned together.



Ser data:

Channel:Parameter:Frequency:Default
_EnD_oF_dEf_TeXt_;
  cp-inheritancegraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 765;
        node-label = 'tsa::FrameIStream';
        node-link = {
          node-link-id = 'classtsa_1_1_frame_i_stream';
        };
        node-child = {
          child-id = '766';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 766;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 767;
        node-label = 'tsa::FrameIStream';
        node-link = {
          node-link-id = 'classtsa_1_1_frame_i_stream';
        };
        node-child = {
          child-id = '768';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 768;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
struct = {
  cp-id     = 'struct_f_u_n_c_t_i_o_n_p_a_r_s_e_r_t_y_p_e_s_1_1_func_definition';
  cp-name   = 'FUNCTIONPARSERTYPES::FuncDefinition';
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'struct_f_u_n_c_t_i_o_n_p_a_r_s_e_r_t_y_p_e_s_1_1_func_definition_1aa9bc160b5f3b43d1bbcbccd5d101e2c9';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'operator<';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const FuncDefinition &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'rhs';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/fptypes.hpp';
      sec-mem-desc-line = '62';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'struct_f_u_n_c_t_i_o_n_p_a_r_s_e_r_t_y_p_e_s_1_1_func_definition_1a6871458a853f321b0f566775d5c5d79c';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'name';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/fptypes.hpp';
      sec-mem-desc-line = '54';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'struct_f_u_n_c_t_i_o_n_p_a_r_s_e_r_t_y_p_e_s_1_1_func_definition_1a983fcca7d404cf18feeadf590ea2f01a';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'nameLength';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/fptypes.hpp';
      sec-mem-desc-line = '55';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'struct_f_u_n_c_t_i_o_n_p_a_r_s_e_r_t_y_p_e_s_1_1_func_definition_1a0195d4058feaa7faba3394c44d878503';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'opcode';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/fptypes.hpp';
      sec-mem-desc-line = '56';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'struct_f_u_n_c_t_i_o_n_p_a_r_s_e_r_t_y_p_e_s_1_1_func_definition_1a023b73dfd337217c13d90f6498700094';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'params';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/fptypes.hpp';
      sec-mem-desc-line = '57';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/fptypes.hpp';
  cp-fileline  = '53';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'struct_function_parser_1_1_data_1_1_func_ptr_data';
  cp-name   = 'FunctionParser::Data::FuncPtrData';
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'struct_function_parser_1_1_data_1_1_func_ptr_data_1a9d9f4fac0438cd4cad8edb985c209252';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'FuncPtrData';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
FunctionPtr
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'p';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'par';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/fparser.hpp';
      sec-mem-desc-line = '99';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'struct_function_parser_1_1_data_1_1_func_ptr_data_1a77521adad1c4cb850c9e439c72986a0c';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
FunctionPtr
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'ptr';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/fparser.hpp';
      sec-mem-desc-line = '96';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'struct_function_parser_1_1_data_1_1_func_ptr_data_1aa9389ca2450fe7dbc7618c624280da92';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'params';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/fparser.hpp';
      sec-mem-desc-line = '97';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/fparser.hpp';
  cp-fileline  = '95';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* struct */
class = {
  cp-id     = 'class_function_parser';
  cp-name   = 'FunctionParser';
  cp-section = {
    sec-kind = 'public-type';
    sec-member = {
      sec-mem-kind = 'enum';
      sec-mem-id   = 'class_function_parser_1a0bb74d288d02ba86367cc1c85351c8e7';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-name = 'ParseErrorType';
      sec-mem-enum = { enum-name = SYNTAX_ERROR; enum-value = '= 0'; };
      sec-mem-enum = { enum-name = MISM_PARENTH; };
      sec-mem-enum = { enum-name = MISSING_PARENTH; };
      sec-mem-enum = { enum-name = EMPTY_PARENTH; };
      sec-mem-enum = { enum-name = EXPECT_OPERATOR; };
      sec-mem-enum = { enum-name = OUT_OF_MEMORY; };
      sec-mem-enum = { enum-name = UNEXPECTED_ERROR; };
      sec-mem-enum = { enum-name = INVALID_VARS; };
      sec-mem-enum = { enum-name = ILL_PARAMS_AMOUNT; };
      sec-mem-enum = { enum-name = PREMATURE_EOS; };
      sec-mem-enum = { enum-name = EXPECT_PARENTH_FUNC; };
      sec-mem-enum = { enum-name = FP_NO_ERROR; };
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/fparser.hpp';
      sec-mem-desc-line = '23';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'typedef';
      sec-mem-id   = 'class_function_parser_1acca53651fb8f1c7a44e3d2cac7e62455';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double(*
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'FunctionPtr';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/fparser.hpp';
      sec-mem-desc-line = '47';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_function_parser_1af4e0b209ec9771dcd76e27f3fcad1b51';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Parse';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const std::string &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'Function';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const std::string &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'Vars';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'useDegrees';
        sec-mem-param-defval = <<_EnD_oF_dEf_TeXt_
false
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/fparser.hpp';
      sec-mem-desc-line = '31';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_function_parser_1a000e3edaf5dc8ee121df03b731ff0192';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'ErrorMsg';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/fparser.hpp';
      sec-mem-desc-line = '33';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_function_parser_1ad6ddf1546278fa7148c968374e6a097a';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
ParseErrorType
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'GetParseErrorType';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/fparser.hpp';
      sec-mem-desc-line = '35';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_function_parser_1a8fe3538f4cd207346c390059ba334023';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Eval';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const double *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'Vars';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/fparser.hpp';
      sec-mem-desc-line = '39';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_function_parser_1a94faf9f4616d0850821cce15abbcf421';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'EvalError';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/fparser.hpp';
      sec-mem-desc-line = '41';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_function_parser_1a481976b6eb58b15d31d4f3700d9ad730';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'AddConstant';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const std::string &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'name';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'value';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/fparser.hpp';
      sec-mem-desc-line = '45';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_function_parser_1a8d477dd0041ca594dac795bba24c9f3a';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'AddFunction';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const std::string &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'name';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
FunctionPtr
_EnD_oF_dEf_TeXt_;
        sec-mem-param-defname = 'func';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'paramsAmount';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/fparser.hpp';
      sec-mem-desc-line = '49';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_function_parser_1a7d6c6465658e9831d0c51e3bd6b5a4c0';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'AddFunction';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const std::string &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'name';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
FunctionParser &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-defname = 'parser';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/fparser.hpp';
      sec-mem-desc-line = '51';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_function_parser_1a5466523ee5198fb4b38461b362b1481d';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Optimize';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/fparser.hpp';
      sec-mem-desc-line = '53';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_function_parser_1a18468eeb56ac5c1b1a6a0b0cebb2c045';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'FunctionParser';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/fparser.hpp';
      sec-mem-desc-line = '56';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_function_parser_1a50257dda6ec4f2c4adf6740e31cf7da7';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = '~FunctionParser';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/fparser.hpp';
      sec-mem-desc-line = '57';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_function_parser_1adcfa2c887c17019c29fdbfaa39ab28fb';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'FunctionParser';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const FunctionParser &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-defname = 'cpy';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/fparser.hpp';
      sec-mem-desc-line = '61';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_function_parser_1a316870fce14d0b1d9bc386f23115cc53';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
FunctionParser &
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'operator=';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const FunctionParser &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-defname = 'cpy';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/fparser.hpp';
      sec-mem-desc-line = '62';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_function_parser_1a0af0f9ad348adf7df57fa630eddf8e47';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'copyOnWrite';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/fparser.hpp';
      sec-mem-desc-line = '132';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_function_parser_1abfc0c76a7006ba7b0e45e21bcd6f83cd';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'checkRecursiveLinking';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const FunctionParser *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-defname = 'fp';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/fparser.hpp';
      sec-mem-desc-line = '135';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_function_parser_1a79441f19176e18e88155f1101108dbe6';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'isValidName';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const std::string &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-defname = 'name';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/fparser.hpp';
      sec-mem-desc-line = '137';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_function_parser_1a1c1ea54f04c1dfb8d8609240ba9f5f40';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Data::VarMap_t::const_iterator
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'FindVariable';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-defname = 'F';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const Data::VarMap_t &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-defname = 'vars';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/fparser.hpp';
      sec-mem-desc-line = '138';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_function_parser_1a305fdcea81a498567dc92010338cee7c';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Data::ConstMap_t::const_iterator
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'FindConstant';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-defname = 'F';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/fparser.hpp';
      sec-mem-desc-line = '140';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_function_parser_1a3895fdbb2f21fc7facebcd4a3c2399f7';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'CheckSyntax';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-defname = 'Function';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/fparser.hpp';
      sec-mem-desc-line = '141';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_function_parser_1aa136efc410ad6a9c2992fb6e1c9b057c';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Compile';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-defname = 'Function';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/fparser.hpp';
      sec-mem-desc-line = '142';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_function_parser_1afd635d05f1b4d3ef6f09b75dd92926e5';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'IsVariable';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/fparser.hpp';
      sec-mem-desc-line = '143';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_function_parser_1a714d401cb9368826a87b7f15575de2a3';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'AddCompiledByte';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned
_EnD_oF_dEf_TeXt_;
        sec-mem-param-defname = 'c';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/fparser.hpp';
      sec-mem-desc-line = '144';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_function_parser_1a59cf4b93d74e0572386742603977f886';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'AddImmediate';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
        sec-mem-param-defname = 'i';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/fparser.hpp';
      sec-mem-desc-line = '145';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_function_parser_1aadefd3517f92e066d9926a1998e9fe2f';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'AddFunctionOpcode';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned
_EnD_oF_dEf_TeXt_;
        sec-mem-param-defname = 'opcode';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/fparser.hpp';
      sec-mem-desc-line = '146';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_function_parser_1a2ba1bb889a7035da4a7639d6b7ce53c6';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'incStackPtr';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/fparser.hpp';
      sec-mem-desc-line = '147';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_function_parser_1a9978dd583ee328a7f71a6075a3c5f97c';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'CompileIf';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-defname = 'F';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-defname = 'ind';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/fparser.hpp';
      sec-mem-desc-line = '148';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_function_parser_1a22e24efb5ef28aa34025bf49fe505010';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'CompileFunctionParams';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-defname = 'F';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-defname = 'ind';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned
_EnD_oF_dEf_TeXt_;
        sec-mem-param-defname = 'requiredParams';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/fparser.hpp';
      sec-mem-desc-line = '149';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_function_parser_1a7673096cf704d1fa7ab542db5f22fe95';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'CompileElement';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-defname = 'F';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-defname = 'ind';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/fparser.hpp';
      sec-mem-desc-line = '150';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_function_parser_1a34d2686ecb9619b0b459bfa249b64498';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'CompilePow';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-defname = 'F';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-defname = 'ind';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/fparser.hpp';
      sec-mem-desc-line = '151';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_function_parser_1adda1df6bf29a91d38e838bdf96524f61';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'CompileUnaryMinus';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-defname = 'F';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-defname = 'ind';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/fparser.hpp';
      sec-mem-desc-line = '152';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_function_parser_1ade4859b2f9b822a19a2beccbc25d36b0';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'CompileMult';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-defname = 'F';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-defname = 'ind';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/fparser.hpp';
      sec-mem-desc-line = '153';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_function_parser_1a9b3024d49f9094731f3cbd17eeea29e5';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'CompileAddition';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-defname = 'F';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-defname = 'ind';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/fparser.hpp';
      sec-mem-desc-line = '154';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_function_parser_1a2418f51d1feca9195780bda66a64923a';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'CompileComparison';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-defname = 'F';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-defname = 'ind';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/fparser.hpp';
      sec-mem-desc-line = '155';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_function_parser_1adb0768f374333bbee4c84c30a2769d1b';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'CompileAnd';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-defname = 'F';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-defname = 'ind';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/fparser.hpp';
      sec-mem-desc-line = '156';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_function_parser_1a233a126157058829dcda9aa3f00781f8';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'CompileOr';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-defname = 'F';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-defname = 'ind';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/fparser.hpp';
      sec-mem-desc-line = '157';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_function_parser_1a854c0c23a60d2d206ddf67015747a80a';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'CompileExpression';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-defname = 'F';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-defname = 'ind';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
        sec-mem-param-defname = 'stopAtComma';
        sec-mem-param-defval = <<_EnD_oF_dEf_TeXt_
false
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/fparser.hpp';
      sec-mem-desc-line = '158';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_function_parser_1a8f09d400c39a72c7485d26cbff2543c9';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'MakeTree';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
void *
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/fparser.hpp';
      sec-mem-desc-line = '161';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_function_parser_1a8ae06b8ee6ddb247b6a7c0075fd6cf30';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
ParseErrorType
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'parseErrorType';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/fparser.hpp';
      sec-mem-desc-line = '78';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_function_parser_1a43c35628fcb4a11d459e48265eca45df';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'evalErrorType';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/fparser.hpp';
      sec-mem-desc-line = '79';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_function_parser_1ac4c90e783d1a41f8f842383a9a5088d0';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Data *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'data';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/fparser.hpp';
      sec-mem-desc-line = '121';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_function_parser_1a5b75f74ce82219fc4aaf05665ab46034';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'evalRecursionLevel';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/fparser.hpp';
      sec-mem-desc-line = '122';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_function_parser_1a4a54f868e24abc53d4474ca538c999bf';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'StackPtr';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/fparser.hpp';
      sec-mem-desc-line = '125';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_function_parser_1a78e461023408c6074247df656f93bbae';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::vector< unsigned > *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'tempByteCode';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/fparser.hpp';
      sec-mem-desc-line = '126';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_function_parser_1a9e6c21543859ee17e917a292a16c495a';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::vector< double > *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'tempImmed';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/fparser.hpp';
      sec-mem-desc-line = '127';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/fparser.hpp';
  cp-fileline  = '20';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 774;
        node-label = 'FunctionParser';
        node-link = {
          node-link-id = 'class_function_parser';
        };
        node-child = {
          child-id = '775';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
data
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 775;
        node-label = 'FunctionParser::Data';
        node-link = {
          node-link-id = 'struct_function_parser_1_1_data';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classtsa_1_1_get_abs';
  cp-name   = 'tsa::GetAbs';
  cp-section = {
    sec-kind = 'public-static-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_get_abs_1a2297ebfbeb4294d0569d0772328a6890';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
static double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'convert_double';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const T &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'value';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/tsaUtilityFunctions.hpp';
      sec-mem-desc-line = '302';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/tsaUtilityFunctions.hpp';
  cp-fileline  = '298';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classtsa_1_1_get_abs2';
  cp-name   = 'tsa::GetAbs2';
  cp-section = {
    sec-kind = 'public-static-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_get_abs2_1a318574610c30dad787e395be7ad55baf';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
static double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'convert_double';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const T &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'value';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/tsaUtilityFunctions.hpp';
      sec-mem-desc-line = '312';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/tsaUtilityFunctions.hpp';
  cp-fileline  = '308';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classtsa_1_1_get_im';
  cp-name   = 'tsa::GetIm';
  cp-section = {
    sec-kind = 'public-static-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_get_im_1a73cc32f20ed67dc84b56ed96f6a58750';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
static double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'convert_double';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const T &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'value';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/tsaUtilityFunctions.hpp';
      sec-mem-desc-line = '292';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/tsaUtilityFunctions.hpp';
  cp-fileline  = '288';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classtsa_1_1_get_phase';
  cp-name   = 'tsa::GetPhase';
  cp-section = {
    sec-kind = 'public-static-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_get_phase_1a5682cc958913a5ac9237b3bb1b64f551';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
static double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'convert_double';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const T &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'value';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/tsaUtilityFunctions.hpp';
      sec-mem-desc-line = '322';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/tsaUtilityFunctions.hpp';
  cp-fileline  = '318';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classtsa_1_1_get_re';
  cp-name   = 'tsa::GetRe';
  cp-section = {
    sec-kind = 'public-static-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_get_re_1a856758bf50794098adfa633da0c905ca';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
static double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'convert_double';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const T &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'value';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/tsaUtilityFunctions.hpp';
      sec-mem-desc-line = '283';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/tsaUtilityFunctions.hpp';
  cp-fileline  = '279';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classtsa_1_1_i_d_c_t';
  cp-name   = 'tsa::IDCT';
  cp-ref     = {
    ref-type = base;
    ref-id   = 'classtsa_1_1_base_f_f_t';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_i_d_c_t_1abf50b114d212adc9d1c977db4eee9053';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'IDCT';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'size';
        sec-mem-param-defval = <<_EnD_oF_dEf_TeXt_
0
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
enum FFTPlanningMode
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'mode';
        sec-mem-param-defval = <<_EnD_oF_dEf_TeXt_
ESTIMATE
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'PreserveInput';
        sec-mem-param-defval = <<_EnD_oF_dEf_TeXt_
true
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/IDCT.hpp';
      sec-mem-desc-line = '82';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Constructor

@param size the size of the transform
@param mode specify the way in which plans are calculated
@param PreserveInput true if the input buffer must be preserved during the transform, false otherwise
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_i_d_c_t_1a6747b5a2d41cdd4451e545ff129d5c13';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'IDCT';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const IDCT &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'from';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/IDCT.hpp';
      sec-mem-desc-line = '89';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Copy constructor

@param from The instance that must be copied
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_i_d_c_t_1ae7caa3512626cc407690fc0b9f7eaafb';
      sec-mem-virt = virtual;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
virtual
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '~IDCT';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/IDCT.hpp';
      sec-mem-desc-line = '94';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Destructor
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/IDCT.hpp';
  cp-fileline  = '73';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Multichannel Discrete Cosine Transform.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-inheritancegraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 787;
        node-label = 'tsa::BaseFFT';
        node-link = {
          node-link-id = 'classtsa_1_1_base_f_f_t';
        };
        node-child = {
          child-id = '788';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 788;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */
      node = {
        node-id    = 786;
        node-label = 'tsa::IDCT';
        node-link = {
          node-link-id = 'classtsa_1_1_i_d_c_t';
        };
        node-child = {
          child-id = '787';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 790;
        node-label = 'tsa::BaseFFT';
        node-link = {
          node-link-id = 'classtsa_1_1_base_f_f_t';
        };
        node-child = {
          child-id = '791';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 791;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */
      node = {
        node-id    = 789;
        node-label = 'tsa::IDCT';
        node-link = {
          node-link-id = 'classtsa_1_1_i_d_c_t';
        };
        node-child = {
          child-id = '790';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classeternity_1_1_ifactory';
  cp-name   = 'eternity::Ifactory';
  cp-ref     = {
    ref-type = derived;
    ref-id   = 'classeternity_1_1factory';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classeternity_1_1_ifactory_1a5bcc4b3255bd1030562e0e554ece0a05';
      sec-mem-virt = virtual;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
virtual
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '~Ifactory';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/dynamic.hpp';
      sec-mem-desc-line = '39';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classeternity_1_1_ifactory_1afaca5a9abf52fa3a731c3dfed7cb73b3';
      sec-mem-virt = pure-virtual;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
virtual void *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'create';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::string &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'class_name';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/dynamic.hpp';
      sec-mem-desc-line = '59';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
The signature of create method for derived classes.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classeternity_1_1_ifactory_1a6c2afa73d61aaa81233ab1216c508252';
      sec-mem-virt = pure-virtual;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
virtual std::string
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'get_conventional_name';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::string &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'compiler_name';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/dynamic.hpp';
      sec-mem-desc-line = '63';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
The signature of get_conventional_name method for derived classes.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classeternity_1_1_ifactory_1a6749c6d3f8aea62a3084c0825f0687c5';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Ifactory *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'm_pNext';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/dynamic.hpp';
      sec-mem-desc-line = '55';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
The next item in global factory<t> list.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Each item in the gloabl list of factory<t>
object has a pointer to the next item
named m_pNext. The last element has a NULL
value inside m_pNext.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'public-static-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classeternity_1_1_ifactory_1a106788b385d5f378cb75bfb8f0296525';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
static Ifactory *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'm_pHead';
      sec-mem-initializer = <<_EnD_oF_dEf_TeXt_
= 0
_EnD_oF_dEf_TeXt_;
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/dynamic.hpp';
      sec-mem-desc-line = '47';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
The fist object in global factory<t> list.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
            All instancied factory<t> are collect inside
an unique global list. m_pHead is the head of
that list.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/dynamic.hpp';
  cp-fileline  = '36';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Ifactory is the base abstract class design to manage in
the same way all template classes factory<t>.
_EnD_oF_dEf_TeXt_;
  cp-inheritancegraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 792;
        node-label = 'eternity::Ifactory';
        node-link = {
          node-link-id = 'classeternity_1_1_ifactory';
        };
      }; /* node */
      node = {
        node-id    = 793;
        node-label = 'eternity::factory< t >';
        node-link = {
          node-link-id = 'classeternity_1_1factory';
        };
        node-child = {
          child-id = '792';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 794;
        node-label = 'eternity::Ifactory';
        node-link = {
          node-link-id = 'classeternity_1_1_ifactory';
        };
        node-child = {
          child-id = '794';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
m_pHead
m_pNext
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classstd_1_1invalid__argument';
  cp-name   = 'std::invalid_argument';
  cp-ref     = {
    ref-type = derived;
    ref-id   = 'classtsa_1_1bad__matrix__size';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-ref     = {
    ref-type = derived;
    ref-id   = 'classtsa_1_1bad__vector__size';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/AlgoExceptions.hpp';
  cp-fileline  = '72';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-inheritancegraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 796;
        node-label = 'tsa::bad_matrix_size';
        node-link = {
          node-link-id = 'classtsa_1_1bad__matrix__size';
        };
        node-child = {
          child-id = '795';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 795;
        node-label = 'invalid_argument';
      }; /* node */
      node = {
        node-id    = 797;
        node-label = 'tsa::bad_vector_size';
        node-link = {
          node-link-id = 'classtsa_1_1bad__vector__size';
        };
        node-child = {
          child-id = '795';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classtsa_1_1_inverse_real_f_f_t';
  cp-name   = 'tsa::InverseRealFFT';
  cp-ref     = {
    ref-type = base;
    ref-id   = 'classtsa_1_1_base_f_f_t';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_inverse_real_f_f_t_1a50258b4d4596d93935791135cd22feb9';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'InverseRealFFT';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'size';
        sec-mem-param-defval = <<_EnD_oF_dEf_TeXt_
0
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
enum FFTPlanningMode
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'mode';
        sec-mem-param-defval = <<_EnD_oF_dEf_TeXt_
ESTIMATE
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'PreserveInput';
        sec-mem-param-defval = <<_EnD_oF_dEf_TeXt_
false
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/InverseRealFFT.hpp';
      sec-mem-desc-line = '75';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Constructor

@param size the size of the transform
@param mode specify the way in which plans are calculated
@param PreserveInput true if the input buffer must be preserved during the transform, false otherwise
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_inverse_real_f_f_t_1a5a9e17eaf4fd69e719dca4b881010876';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'InverseRealFFT';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const InverseRealFFT &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'from';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/InverseRealFFT.hpp';
      sec-mem-desc-line = '82';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Copy constructor

@param from The instance that must be copied
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_inverse_real_f_f_t_1a928e08fb19e46a901e0dc42ec5970801';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = '~InverseRealFFT';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/InverseRealFFT.hpp';
      sec-mem-desc-line = '87';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Destructor
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/InverseRealFFT.hpp';
  cp-fileline  = '66';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Multichannel inverse real to complex FFT.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
This is the implementation of the FFT of a real multichannel buffer
_EnD_oF_dEf_TeXt_;
  cp-inheritancegraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 799;
        node-label = 'tsa::InverseRealFFT';
        node-link = {
          node-link-id = 'classtsa_1_1_inverse_real_f_f_t';
        };
        node-child = {
          child-id = '800';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 800;
        node-label = 'tsa::BaseFFT';
        node-link = {
          node-link-id = 'classtsa_1_1_base_f_f_t';
        };
        node-child = {
          child-id = '801';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 801;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 802;
        node-label = 'tsa::InverseRealFFT';
        node-link = {
          node-link-id = 'classtsa_1_1_inverse_real_f_f_t';
        };
        node-child = {
          child-id = '803';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 803;
        node-label = 'tsa::BaseFFT';
        node-link = {
          node-link-id = 'classtsa_1_1_base_f_f_t';
        };
        node-child = {
          child-id = '804';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 804;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classtsa_1_1_kaiser_window';
  cp-name   = 'tsa::KaiserWindow';
  cp-ref     = {
    ref-type = base;
    ref-id   = 'classtsa_1_1_base_window';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_kaiser_window_1a1435f80a21b198c05d60be076fa152b1';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'KaiserWindow';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'size';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/KaiserWindow.hpp';
      sec-mem-desc-line = '86';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Constructor

@param size the size of the window
@param cached true if the window must be preevaluated in a buffer
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_kaiser_window_1ae1de2ef14d0c6b80161d0456502b4753';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'KaiserWindow';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'size';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const std::string &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'par';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/KaiserWindow.hpp';
      sec-mem-desc-line = '93';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_kaiser_window_1a98965a07384b404238a53bf9d66e8c77';
      sec-mem-virt = virtual;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
virtual
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '~KaiserWindow';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/KaiserWindow.hpp';
      sec-mem-desc-line = '104';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Destructor
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_kaiser_window_1a4799ed39290a058eea9d44df73f764ea';
      sec-mem-virt = virtual;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'FillWindow';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/KaiserWindow.hpp';
      sec-mem-desc-line = '217';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Initialize the window with the correct values, given
its actual size. This is a pure virtual function, which 
is redefined by each window class.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_kaiser_window_1a92c5708ea950eaf9845b13f2272cf43f';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mAlpha';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/KaiserWindow.hpp';
      sec-mem-desc-line = '209';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/KaiserWindow.hpp';
  cp-fileline  = '77';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Kaiser windowing algorithm
Harris, F. J. "On the Use of Windows for Harmonic Analysis with the Discrete Fourier Transform." 
Proceedings of the IEEE. Vol. 66 (January 1978). pp. 66-67.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-inheritancegraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 806;
        node-label = 'tsa::BaseWindow';
        node-link = {
          node-link-id = 'classtsa_1_1_base_window';
        };
        node-child = {
          child-id = '807';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 805;
        node-label = 'tsa::KaiserWindow';
        node-link = {
          node-link-id = 'classtsa_1_1_kaiser_window';
        };
        node-child = {
          child-id = '806';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 807;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 809;
        node-label = 'tsa::BaseWindow';
        node-link = {
          node-link-id = 'classtsa_1_1_base_window';
        };
        node-child = {
          child-id = '810';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 808;
        node-label = 'tsa::KaiserWindow';
        node-link = {
          node-link-id = 'classtsa_1_1_kaiser_window';
        };
        node-child = {
          child-id = '809';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 810;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classtsa_1_1_lattice_filter';
  cp-name   = 'tsa::LatticeFilter';
  cp-ref     = {
    ref-type = base;
    ref-id   = 'classtsa_1_1_algo_base';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_lattice_filter_1a2cd66baf212f1b3824016c1e589b014a';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'LatticeFilter';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
LatticeView &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'LV';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/LatticeFilter.hpp';
      sec-mem-desc-line = '86';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Constructor

@param LV is the view containg the parameters for the Lattice Filter
@return 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_lattice_filter_1af2e6c3e8d7fb7399f564f47c060bccc3';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'LatticeFilter';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
Dvector &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'ParcorF';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
Dvector &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'ParcorB';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
Dmatrix &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'ErrF';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
Dmatrix &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'ErrB';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/LatticeFilter.hpp';
      sec-mem-desc-line = '91';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Constructor
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_lattice_filter_1a8a7c4763fe464837766a5beff88d36d5';
      sec-mem-virt = virtual;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
virtual
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '~LatticeFilter';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/LatticeFilter.hpp';
      sec-mem-desc-line = '96';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Destructor
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_lattice_filter_1aa6be240d902449711c1925e464248a1d';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Load';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'filename';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'fmt';
        sec-mem-param-defval = <<_EnD_oF_dEf_TeXt_
"txt"
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/LatticeFilter.hpp';
      sec-mem-desc-line = '98';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_lattice_filter_1ac599ab3a2134d53e0685f91a0a673ed4';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Save';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'filename';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'fmt';
        sec-mem-param-defval = <<_EnD_oF_dEf_TeXt_
"txt"
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/LatticeFilter.hpp';
      sec-mem-desc-line = '105';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_lattice_filter_1ae9bd581cbcd1183a0dd7c557fe687422';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'xml_serialize';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
eternity::xml_archive &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'xml';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'p';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/LatticeFilter.hpp';
      sec-mem-desc-line = '112';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_lattice_filter_1aaff567ffb2c6b13538f138b8d49f3781';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mOrder';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/LatticeFilter.hpp';
      sec-mem-desc-line = '221';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_lattice_filter_1a4a7f9d6020bc4d7cab3d6021bd5338db';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Dvector
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mParcorF';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/LatticeFilter.hpp';
      sec-mem-desc-line = '222';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_lattice_filter_1a0e3a56f45a158477cef36e55cd2e5417';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Dvector
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mParcorB';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/LatticeFilter.hpp';
      sec-mem-desc-line = '223';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_lattice_filter_1a462c5cd31c438a924bfde88d08e12200';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Dmatrix
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mErrF';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/LatticeFilter.hpp';
      sec-mem-desc-line = '224';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_lattice_filter_1a0cd360b9836146c9296798337dd2ee0f';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Dmatrix
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mErrB';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/LatticeFilter.hpp';
      sec-mem-desc-line = '225';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_lattice_filter_1ab480cbe362a358df626bcd0758c0a7ce';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mStatus';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/LatticeFilter.hpp';
      sec-mem-desc-line = '226';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/LatticeFilter.hpp';
  cp-fileline  = '77';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Implement the lattice filter.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-inheritancegraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 811;
        node-label = 'tsa::LatticeFilter';
        node-link = {
          node-link-id = 'classtsa_1_1_lattice_filter';
        };
        node-child = {
          child-id = '812';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 812;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 813;
        node-label = 'tsa::LatticeFilter';
        node-link = {
          node-link-id = 'classtsa_1_1_lattice_filter';
        };
        node-child = {
          child-id = '814';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 814;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classtsa_1_1_lattice_view';
  cp-name   = 'tsa::LatticeView';
  cp-ref     = {
    ref-type = base;
    ref-id   = 'classtsa_1_1_base_view';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_lattice_view_1ab06c208ec07241d525afa95112a49a61';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'LatticeView';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'ArOrder';
        sec-mem-param-defval = <<_EnD_oF_dEf_TeXt_
1
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/LatticeView.hpp';
      sec-mem-desc-line = '81';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Constructor
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_lattice_view_1a2c5158bb8d09c4742906a4eb1c2b8caf';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = '~LatticeView';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/LatticeView.hpp';
      sec-mem-desc-line = '96';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_lattice_view_1a4a8f6b4faf4a5c61cbd66aab056e18ab';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Load';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'filename';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'fmt';
        sec-mem-param-defval = <<_EnD_oF_dEf_TeXt_
"txt"
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/LatticeView.hpp';
      sec-mem-desc-line = '99';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_lattice_view_1a911eefc09c14ed78dee42fffe237ac3a';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Save';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'filename';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'fmt';
        sec-mem-param-defval = <<_EnD_oF_dEf_TeXt_
"txt"
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/LatticeView.hpp';
      sec-mem-desc-line = '106';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_lattice_view_1a9040c52c4481b0e47346aa39f150c3b2';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'xml_serialize';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
eternity::xml_archive &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'xml';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'prefix';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/LatticeView.hpp';
      sec-mem-desc-line = '113';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_lattice_view_1acb69a220044c95ee2b32d90ce4ee2f7c';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mOrder';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/LatticeView.hpp';
      sec-mem-desc-line = '257';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
the Order of the View
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_lattice_view_1ac7976d0ac256453229dec51c14da0c26';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Dmatrix
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mErrorForward';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/LatticeView.hpp';
      sec-mem-desc-line = '258';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
the Error Forward for the Lattice Filter
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_lattice_view_1a9bbdb82e6aee17385ed9cd45da26c6ea';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Dmatrix
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mErrorBackward';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/LatticeView.hpp';
      sec-mem-desc-line = '259';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
the Error Backward for the Lattice Filter
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_lattice_view_1a3fbd93734d9b37488687840609c93e7a';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Dvector
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mParcorF';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/LatticeView.hpp';
      sec-mem-desc-line = '260';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
the vector of forward Parcor
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_lattice_view_1a07aba04a75f98622d97ef4baac7a95e6';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Dvector
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mParcorB';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/LatticeView.hpp';
      sec-mem-desc-line = '261';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
the vector of backward Parcor
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/LatticeView.hpp';
  cp-fileline  = '75';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Define the object needed to implement the Lattice filter.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-inheritancegraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 816;
        node-label = 'tsa::BaseView';
        node-link = {
          node-link-id = 'classtsa_1_1_base_view';
        };
      }; /* node */
      node = {
        node-id    = 815;
        node-label = 'tsa::LatticeView';
        node-link = {
          node-link-id = 'classtsa_1_1_lattice_view';
        };
        node-child = {
          child-id = '816';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 818;
        node-label = 'tsa::BaseView';
        node-link = {
          node-link-id = 'classtsa_1_1_base_view';
        };
      }; /* node */
      node = {
        node-id    = 817;
        node-label = 'tsa::LatticeView';
        node-link = {
          node-link-id = 'classtsa_1_1_lattice_view';
        };
        node-child = {
          child-id = '818';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classtsa_1_1_least_squares_lattice';
  cp-name   = 'tsa::LeastSquaresLattice';
  cp-ref     = {
    ref-type = base;
    ref-id   = 'classtsa_1_1_algo_base';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_least_squares_lattice_1a0fa6ec81a0438b15892c2dbc49932ea0';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'LeastSquaresLattice';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
matrix_row< Dmatrix > &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'LearnData';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
matrix_row< Dmatrix > &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'WhitenData';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'P';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'lambda';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'D';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/LeastSquaresLattice.hpp';
      sec-mem-desc-line = '85';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Constructor
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_least_squares_lattice_1a9a83bde1203dadf87892afcf25729081';
      sec-mem-virt = virtual;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
virtual
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '~LeastSquaresLattice';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/LeastSquaresLattice.hpp';
      sec-mem-desc-line = '93';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Destructor
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_least_squares_lattice_1a7037938b899e80b09bb34c053d1c7f41';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
LeastSquaresLattice &
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'operator=';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const LeastSquaresLattice &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'from';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/LeastSquaresLattice.hpp';
      sec-mem-desc-line = '102';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Assignement operator

@param from The instance to be assigned from

@return a reference to a new object
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_least_squares_lattice_1a714e35374ee38156cf0fa4816340a6df';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mOrder';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/LeastSquaresLattice.hpp';
      sec-mem-desc-line = '135';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_least_squares_lattice_1a00bb9716623be7c8a035c9947023dcda';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mLwsp';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/LeastSquaresLattice.hpp';
      sec-mem-desc-line = '136';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_least_squares_lattice_1a4b1315dc119c22efae15dd97168a5701';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mLambda';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/LeastSquaresLattice.hpp';
      sec-mem-desc-line = '137';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_least_squares_lattice_1a3170c018ba5b3dcfb91c9490e11e6199';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Dmatrix
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mLast';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/LeastSquaresLattice.hpp';
      sec-mem-desc-line = '138';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_least_squares_lattice_1a40b578afe8b8e4523cc827337177412c';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mDirection';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/LeastSquaresLattice.hpp';
      sec-mem-desc-line = '139';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_least_squares_lattice_1a17c54dba21bbf5ae79d6687f554eceb9';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mStep';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/LeastSquaresLattice.hpp';
      sec-mem-desc-line = '140';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_least_squares_lattice_1a720cbccb82705799e96c4053cd1963af';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
LSLLearning
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mLSLlearn';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/LeastSquaresLattice.hpp';
      sec-mem-desc-line = '141';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/LeastSquaresLattice.hpp';
  cp-fileline  = '79';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Estimate the parameters for the Least Squares Lattice filter and implement the adaptive whitening.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-inheritancegraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 819;
        node-label = 'tsa::LeastSquaresLattice';
        node-link = {
          node-link-id = 'classtsa_1_1_least_squares_lattice';
        };
        node-child = {
          child-id = '820';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 820;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 823;
        node-label = 'tsa::LSLLearning';
        node-link = {
          node-link-id = 'classtsa_1_1_l_s_l_learning';
        };
        node-child = {
          child-id = '822';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 821;
        node-label = 'tsa::LeastSquaresLattice';
        node-link = {
          node-link-id = 'classtsa_1_1_least_squares_lattice';
        };
        node-child = {
          child-id = '822';
          relation = public-inheritance;
        }; /* node-child */
        node-child = {
          child-id = '823';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
mLSLlearn
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 822;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classtsa_1_1_lower_triangular';
  cp-name   = 'tsa::LowerTriangular';
  cp-section = {
    sec-kind = 'public-static-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_lower_triangular_1a968298d0e21e8eff3959fe9eb69eee8a';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
static unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Map';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'i';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'j';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'int';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/tsaUtilityFunctions.hpp';
      sec-mem-desc-line = '214';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_lower_triangular_1a553ac56eb5320ef223c61951290429d0';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
static unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Size';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'dim';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/tsaUtilityFunctions.hpp';
      sec-mem-desc-line = '218';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_lower_triangular_1ae0be1ed16dc6f469852699898aa16df3';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
static unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Dimension';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'sz';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/tsaUtilityFunctions.hpp';
      sec-mem-desc-line = '222';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/tsaUtilityFunctions.hpp';
  cp-fileline  = '211';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classtsa_1_1_l_s_lfilter';
  cp-name   = 'tsa::LSLfilter';
  cp-ref     = {
    ref-type = base;
    ref-id   = 'classtsa_1_1_algo_base';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_l_s_lfilter_1a7f49b52bb9e1b935f957e04166bf7c8c';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'LSLfilter';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
LSLLearning &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'LSL';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'lambda';
        sec-mem-param-defval = <<_EnD_oF_dEf_TeXt_
1.0
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'size';
        sec-mem-param-defval = <<_EnD_oF_dEf_TeXt_
1
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'Norm';
        sec-mem-param-defval = <<_EnD_oF_dEf_TeXt_
false
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp';
      sec-mem-desc-line = '88';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Constructor

@param Order Order of the filter
@param sigma guessed value for the initial sigma
@param Lwsp Lenght of workspace
@param lambda forgetting factor
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_l_s_lfilter_1addf16b957be6c848ad1c59ee7cb4dd4e';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = '~LSLfilter';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp';
      sec-mem-desc-line = '95';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Destructor
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_l_s_lfilter_1a737d772a9b51efdd71a01178ec83597f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Load';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'filename';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'fmt';
        sec-mem-param-defval = <<_EnD_oF_dEf_TeXt_
"txt"
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp';
      sec-mem-desc-line = '97';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_l_s_lfilter_1ae8aa6f5275313f49e88bf4f6361092f9';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Save';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'filename';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'fmt';
        sec-mem-param-defval = <<_EnD_oF_dEf_TeXt_
"txt"
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp';
      sec-mem-desc-line = '104';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_l_s_lfilter_1a1adaa3058f09e50b73a88520844d2b90';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'xml_serialize';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
eternity::xml_archive &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'xml';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'p';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp';
      sec-mem-desc-line = '111';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_l_s_lfilter_1a236a35327bce862b6c4f8a9245af7b9c';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'GetDataNeeded';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp';
      sec-mem-desc-line = '295';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Get the number of data needed in order to be able to 
call GetData successfully. If the returned value is less or 
equal than zero no data are needed.

@return the needed data
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_l_s_lfilter_1a95e5134738dd70857cf6c7ac52b11639';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
FifoBuffer
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mBuffer';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp';
      sec-mem-desc-line = '359';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_l_s_lfilter_1a015aba5b8378277ee5cda011ba6b4fe1';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mWinSize';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp';
      sec-mem-desc-line = '360';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_l_s_lfilter_1aa25b337e262a868101f68d8437f162c1';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mOrder';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp';
      sec-mem-desc-line = '361';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Order of the filter  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_l_s_lfilter_1aeae300f77e90ba968cc9c5c0eea38a96';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mLambda';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp';
      sec-mem-desc-line = '362';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Forgetting Factor  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_l_s_lfilter_1aa620a0738568ad5360806ad189aa70c2';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Dvector
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mSigma';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp';
      sec-mem-desc-line = '363';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
The estimated rms  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_l_s_lfilter_1a68dda41fd3d7be90171213425541ea2a';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mNorm';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp';
      sec-mem-desc-line = '364';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_l_s_lfilter_1a9898a4187911d742deb802e51ec1883f';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mSigma0';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp';
      sec-mem-desc-line = '365';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_l_s_lfilter_1a6e679e1858ec5cab2c2ab00d9ad17a4b';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mStartTime';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp';
      sec-mem-desc-line = '366';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_l_s_lfilter_1a7d7cc212e5c6a963560a6f18eff72497';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mSampling';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp';
      sec-mem-desc-line = '367';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_l_s_lfilter_1a23612cc3cfdb9a0dfb38743f54e4d076';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mFirstCall';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp';
      sec-mem-desc-line = '368';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_l_s_lfilter_1a980bad9cc152c400df6f4e1e8c25c111';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Dmatrix
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mEF';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp';
      sec-mem-desc-line = '369';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
ErrorForward  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_l_s_lfilter_1a24ad0a2f6a2b79b01b1e99ef9c663d1e';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Dmatrix
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mEB';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp';
      sec-mem-desc-line = '370';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
ErrorBackward  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_l_s_lfilter_1a571c1d1b411aad2417ce23579a8da9ac';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Dmatrix
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mEpf';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp';
      sec-mem-desc-line = '371';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Mean Square Error Forward  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_l_s_lfilter_1a067ccd52ecffc15945fdcb73fa515244';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Dmatrix
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mEpb';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp';
      sec-mem-desc-line = '372';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Mean Square Error Backward  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_l_s_lfilter_1a83a3095a513fda5efd6b75aaa77495df';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Dvector
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mKf';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp';
      sec-mem-desc-line = '373';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Forward Parcor  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_l_s_lfilter_1ae3b9ac48debc547e1aa69ae0ade36408';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Dvector
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mKb';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp';
      sec-mem-desc-line = '374';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Backward Parcor  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_l_s_lfilter_1a0a2ad9e25528879045483500ff6401b0';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Dvector
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mG';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp';
      sec-mem-desc-line = '375';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Angle parameter  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_l_s_lfilter_1a490187ff893b2ff71a5f36f9b4efe7f3';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mF0';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp';
      sec-mem-desc-line = '376';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
index for the status of the Lattice filter  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp';
  cp-fileline  = '76';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Algorithm for the filter phase of the Adaptive Least Squares Lattice.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-inheritancegraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 826;
        node-label = 'tsa::LSLfilter';
        node-link = {
          node-link-id = 'classtsa_1_1_l_s_lfilter';
        };
        node-child = {
          child-id = '827';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 827;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 830;
        node-label = 'tsa::FifoBuffer';
        node-link = {
          node-link-id = 'classtsa_1_1_fifo_buffer';
        };
      }; /* node */
      node = {
        node-id    = 828;
        node-label = 'tsa::LSLfilter';
        node-link = {
          node-link-id = 'classtsa_1_1_l_s_lfilter';
        };
        node-child = {
          child-id = '829';
          relation = public-inheritance;
        }; /* node-child */
        node-child = {
          child-id = '830';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
mBuffer
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 829;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classtsa_1_1_l_s_l_learning';
  cp-name   = 'tsa::LSLLearning';
  cp-ref     = {
    ref-type = base;
    ref-id   = 'classtsa_1_1_algo_base';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_l_s_l_learning_1ab1065fd9f61b44f25c4a9ee67e95dc1e';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'LSLLearning';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'Order';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'sigma';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'lambda';
        sec-mem-param-defval = <<_EnD_oF_dEf_TeXt_
1.0
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLLearning.hpp';
      sec-mem-desc-line = '86';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Constructor

@param Order Order of the filter
@param sigma guessed value for the initial sigma
@param Lwsp Lenght of workspace
@param lambda forgetting factor
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_l_s_l_learning_1ae1d9f9ea754c88bf19365c680ea2415a';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'LSLLearning';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const LSLLearning &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'from';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLLearning.hpp';
      sec-mem-desc-line = '93';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Copy constructor

@param from The instance that must be copied
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_l_s_l_learning_1aab97f819bb4e1537621d9e84ee0bf140';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = '~LSLLearning';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLLearning.hpp';
      sec-mem-desc-line = '98';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Destructor
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_l_s_l_learning_1a8b2b47d740bd2207f612e9c4aadaf220';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
LSLLearning &
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'operator=';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const LSLLearning &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'from';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLLearning.hpp';
      sec-mem-desc-line = '107';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Assignement operator

@param from The instance to be assigned from

@return a reference to a new object
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_l_s_l_learning_1a0faa13eb2f31988b73c4740c3e1c4085';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Load';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'filename';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'fmt';
        sec-mem-param-defval = <<_EnD_oF_dEf_TeXt_
"txt"
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLLearning.hpp';
      sec-mem-desc-line = '208';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_l_s_l_learning_1aa3397a1d3944fb4ce19c612d74e7018a';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Save';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'filename';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'fmt';
        sec-mem-param-defval = <<_EnD_oF_dEf_TeXt_
"txt"
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLLearning.hpp';
      sec-mem-desc-line = '215';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_l_s_l_learning_1a54c30966b4ddf0327ef5f4b9a8b774f1';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'xml_serialize';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
eternity::xml_archive &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'xml';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'p';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLLearning.hpp';
      sec-mem-desc-line = '222';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_l_s_l_learning_1ae1e400504ab5fc285b4b2d740e4bde72';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mOrder';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLLearning.hpp';
      sec-mem-desc-line = '264';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Order of the filter  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_l_s_l_learning_1a6ba93296df7efc898844ff3ef645b287';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mSigma';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLLearning.hpp';
      sec-mem-desc-line = '265';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
The estimated rms  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_l_s_l_learning_1abc6dbb01c7f1a1b4c1d6ee5cb6ba14e8';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Dmatrix
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mEF';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLLearning.hpp';
      sec-mem-desc-line = '266';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
ErrorForward  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_l_s_l_learning_1aee8f5369206276f3a7faaaaa048485fb';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Dmatrix
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mEB';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLLearning.hpp';
      sec-mem-desc-line = '267';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
ErrorBackward  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_l_s_l_learning_1a5cd2595571d70a64dfefbdd48dd96eb5';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Dmatrix
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mEpf';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLLearning.hpp';
      sec-mem-desc-line = '268';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Mean Square Error Forward  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_l_s_l_learning_1a4ccb655fdbbebb1a9875c6bc8238b373';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Dmatrix
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mEpb';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLLearning.hpp';
      sec-mem-desc-line = '269';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Mean Square Error Backward  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_l_s_l_learning_1ad651adf83f8b9e770446ccf7f41fe61d';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Dvector
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mKf';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLLearning.hpp';
      sec-mem-desc-line = '270';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Forward Parcor  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_l_s_l_learning_1ac895dcbb7407c99df7c8703e27b53ca4';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Dvector
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mKb';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLLearning.hpp';
      sec-mem-desc-line = '271';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Backward Parcor  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_l_s_l_learning_1a4dc069522ea6f00876e144b7c26a8056';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Dvector
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mG';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLLearning.hpp';
      sec-mem-desc-line = '272';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Angle parameter  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_l_s_l_learning_1a15b3df249118e9c6699a39a4b4add1db';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mLambda';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLLearning.hpp';
      sec-mem-desc-line = '273';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Forgetting Factor  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_l_s_l_learning_1ab1e86d5df54de8730402c123caccfd30';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mF0';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLLearning.hpp';
      sec-mem-desc-line = '274';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
index for the status of the Lattice filter  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLLearning.hpp';
  cp-fileline  = '74';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
rithm for the learning phase of the Adaptive Least Squares Lattice
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-inheritancegraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 831;
        node-label = 'tsa::LSLLearning';
        node-link = {
          node-link-id = 'classtsa_1_1_l_s_l_learning';
        };
        node-child = {
          child-id = '832';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 832;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 833;
        node-label = 'tsa::LSLLearning';
        node-link = {
          node-link-id = 'classtsa_1_1_l_s_l_learning';
        };
        node-child = {
          child-id = '834';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 834;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classtsa_1_1_math_utils';
  cp-name   = 'tsa::MathUtils';
  cp-section = {
    sec-kind = 'public-static-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_math_utils_1a4d4f3e95ae31cf490baec26aa6babba6';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
static unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'isqrt';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned long
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'val';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/tsaUtilityFunctions.hpp';
      sec-mem-desc-line = '150';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Evaluate the integer square root of a number.

@param val input number

@return integer square root of val
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_math_utils_1a4edc4a9fbd224706b312200fadfd6e6e';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
static int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'gcd';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'u';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'v';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/tsaUtilityFunctions.hpp';
      sec-mem-desc-line = '169';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Find the great common divisor between two numbers u and v

@param u first number
@param v second number

@return the great common divisor between u and v
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_math_utils_1a52fe9c7e80f1facb7dd118491786ad27';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
static int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'max';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'u';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'v';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/tsaUtilityFunctions.hpp';
      sec-mem-desc-line = '182';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_math_utils_1a00386ddcb986eea58d68e5fb2e4bd9f1';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
static int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'min';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'u';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'v';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/tsaUtilityFunctions.hpp';
      sec-mem-desc-line = '186';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/tsaUtilityFunctions.hpp';
  cp-fileline  = '140';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'class_m_f_carchive';
  cp-name   = 'MFCarchive';
  cp-ref     = {
    ref-type = base;
    ref-id   = 'classeternity_1_1bin__archive';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_m_f_carchive_1a8c5191701a84b9a4d2812887cfc28651';
      sec-mem-virt = virtual;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
virtual size_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'write';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const void *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'buffer';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
size_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'size';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
size_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'count';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/MFCArchive.h';
      sec-mem-desc-line = '38';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
write a buffer of a certain legnth n time in the archive
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_m_f_carchive_1a175a083e8f81fe490714be920539f7b9';
      sec-mem-virt = virtual;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
virtual size_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'read';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
void *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'buffer';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
size_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'size';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
size_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'count';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/MFCArchive.h';
      sec-mem-desc-line = '39';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
read a buffer of a certain legnth n time in the archive
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_m_f_carchive_1adf62fabd21e51cf0f9e1a50fc0367201';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'MFCarchive';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
Carchive &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'ar';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/MFCArchive.h';
      sec-mem-desc-line = '41';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_m_f_carchive_1aa328aff9303e279909cc3855019fdd73';
      sec-mem-virt = virtual;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
virtual
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '~MFCarchive';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/MFCArchive.h';
      sec-mem-desc-line = '43';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'protected-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_m_f_carchive_1a57d8f21676284f6004ce3ca11b573c05';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Carchive &
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'm_ar';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/MFCArchive.h';
      sec-mem-desc-line = '46';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/MFCArchive.h';
  cp-fileline  = '36';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-inheritancegraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 837;
        node-label = 'MFCarchive';
        node-link = {
          node-link-id = 'class_m_f_carchive';
        };
        node-child = {
          child-id = '838';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 838;
        node-label = 'eternity::bin_archive';
        node-link = {
          node-link-id = 'classeternity_1_1bin__archive';
        };
        node-child = {
          child-id = '839';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 839;
        node-label = 'eternity::archive';
        node-link = {
          node-link-id = 'classeternity_1_1archive';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 840;
        node-label = 'MFCarchive';
        node-link = {
          node-link-id = 'class_m_f_carchive';
        };
        node-child = {
          child-id = '841';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 841;
        node-label = 'eternity::bin_archive';
        node-link = {
          node-link-id = 'classeternity_1_1bin__archive';
        };
        node-child = {
          child-id = '842';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 842;
        node-label = 'eternity::archive';
        node-link = {
          node-link-id = 'classeternity_1_1archive';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classtsa_1_1missing__data';
  cp-name   = 'tsa::missing_data';
  cp-ref     = {
    ref-type = base;
    ref-id   = 'classstd_1_1runtime__error';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1missing__data_1a8d5ae46c22478ec86fae022f0044d2b7';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'missing_data';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const std::string &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'msg';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'miss_start';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'miss_end';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'channel';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/AlgoExceptions.hpp';
      sec-mem-desc-line = '176';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Constructor

@param msg error message
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1missing__data_1a14e20caa0f0f2baf341625d09e9da157';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Start';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/AlgoExceptions.hpp';
      sec-mem-desc-line = '185';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1missing__data_1a10c01ad5fd1fd4bc26d69114cb90ee08';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'End';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/AlgoExceptions.hpp';
      sec-mem-desc-line = '189';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1missing__data_1a96f7fd1c113289c1cfd22117fda3ec83';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Channel';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/AlgoExceptions.hpp';
      sec-mem-desc-line = '193';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1missing__data_1a3bb2ac2dd0703730e7f0b29037bf65aa';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mStartPeriod';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/AlgoExceptions.hpp';
      sec-mem-desc-line = '197';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1missing__data_1ae4ac26763b09836066dd3202f421a2cc';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mEndPeriod';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/AlgoExceptions.hpp';
      sec-mem-desc-line = '198';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1missing__data_1ac223001a840eeb59c73cb0cef2483ed2';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mChannel';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/AlgoExceptions.hpp';
      sec-mem-desc-line = '199';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/AlgoExceptions.hpp';
  cp-fileline  = '168';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
This exception should be used when some frames are missing
_EnD_oF_dEf_TeXt_;
  cp-inheritancegraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 844;
        node-label = 'runtime_error';
      }; /* node */
      node = {
        node-id    = 843;
        node-label = 'tsa::missing_data';
        node-link = {
          node-link-id = 'classtsa_1_1missing__data';
        };
        node-child = {
          child-id = '844';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 846;
        node-label = 'runtime_error';
      }; /* node */
      node = {
        node-id    = 845;
        node-label = 'tsa::missing_data';
        node-link = {
          node-link-id = 'classtsa_1_1missing__data';
        };
        node-child = {
          child-id = '846';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classtsa_1_1_m_y_w_e';
  cp-name   = 'tsa::MYWE';
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_m_y_w_e_1a600550470fe4832dfd450a7aa60ad36b';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'MYWE';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'mIP';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'mIQ';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/MYWE.hpp';
      sec-mem-desc-line = '80';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Constructor
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_m_y_w_e_1a1bfa6dd78320a8606653346e2125e96a';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = '~MYWE';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/MYWE.hpp';
      sec-mem-desc-line = '85';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Destructor
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_m_y_w_e_1aaa9191158d3202f9e4e734724e9eaf98';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
MYWE &
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'operator=';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const MYWE &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'from';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/MYWE.hpp';
      sec-mem-desc-line = '93';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Assignement operator

@param from The instance to be assigned from

@return a reference to a new object  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_m_y_w_e_1aefdc7e987eddb2a34daad521dd501840';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mIP';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/MYWE.hpp';
      sec-mem-desc-line = '135';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_m_y_w_e_1a7ad6499007931fab78ffa0300b0c21a5';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mIQ';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/MYWE.hpp';
      sec-mem-desc-line = '136';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_m_y_w_e_1ad2fe73259b41c43616a5e950ae280547';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Dmatrix
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mA';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/MYWE.hpp';
      sec-mem-desc-line = '137';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_m_y_w_e_1a8427296f338e43ee0457e8f2c11481ae';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Dmatrix
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mB';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/MYWE.hpp';
      sec-mem-desc-line = '138';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_m_y_w_e_1af8263479a7212e0ee89aedd7ae098ee0';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Dvector
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mRho';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/MYWE.hpp';
      sec-mem-desc-line = '139';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/MYWE.hpp';
  cp-fileline  = '74';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
A more detailed description of MYWE
_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classtsa_1_1no__data__available';
  cp-name   = 'tsa::no_data_available';
  cp-ref     = {
    ref-type = base;
    ref-id   = 'classstd_1_1runtime__error';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1no__data__available_1aae9e61590d1ca7174180eb4b5c190930';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'no_data_available';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const std::string &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'msg';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/AlgoExceptions.hpp';
      sec-mem-desc-line = '130';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Constructor

@param msg error message
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/AlgoExceptions.hpp';
  cp-fileline  = '122';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
This exception should be used when some processed data cannot be returned
_EnD_oF_dEf_TeXt_;
  cp-inheritancegraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 850;
        node-label = 'runtime_error';
      }; /* node */
      node = {
        node-id    = 849;
        node-label = 'tsa::no_data_available';
        node-link = {
          node-link-id = 'classtsa_1_1no__data__available';
        };
        node-child = {
          child-id = '850';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 852;
        node-label = 'runtime_error';
      }; /* node */
      node = {
        node-id    = 851;
        node-label = 'tsa::no_data_available';
        node-link = {
          node-link-id = 'classtsa_1_1no__data__available';
        };
        node-child = {
          child-id = '852';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classeternity_1_1node';
  cp-name   = 'eternity::node';
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classeternity_1_1node_1a05e3159af39079b860ecb1f79d436bb1';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'dump';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
size_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'indent';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/xmlscanner.hpp';
      sec-mem-desc-line = '46';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classeternity_1_1node_1a35b42655fbf388f225c108f10bf46028';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'intent';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
size_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'pos';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/xmlscanner.hpp';
      sec-mem-desc-line = '47';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classeternity_1_1node_1acab0e3d272545fa2f535d11416119eaf';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'done';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/xmlscanner.hpp';
      sec-mem-desc-line = '48';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classeternity_1_1node_1a17c2bb4c6bb9594076e91935bd970224';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
node *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'foundChild';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'tagName';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
size_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'pos';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/xmlscanner.hpp';
      sec-mem-desc-line = '49';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classeternity_1_1node_1a8aab11da45324aff3018c80a3b489e47';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'node';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/xmlscanner.hpp';
      sec-mem-desc-line = '51';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classeternity_1_1node_1ad95115f371bc4d91338735dd1c168b77';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'node';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = '_name';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/xmlscanner.hpp';
      sec-mem-desc-line = '52';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classeternity_1_1node_1aee2ebc23f893fed356c9c4c123842283';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'node';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
node *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'parentnode';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/xmlscanner.hpp';
      sec-mem-desc-line = '53';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classeternity_1_1node_1a068bb1cebdb8ce5682040fe3ada60718';
      sec-mem-virt = virtual;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
virtual
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '~node';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/xmlscanner.hpp';
      sec-mem-desc-line = '56';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classeternity_1_1node_1aa58fec317429adb430f6d38b3660b69a';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'name';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/xmlscanner.hpp';
      sec-mem-desc-line = '39';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classeternity_1_1node_1af12d6ec498fd30def4c6b4f21fa181c7';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::map< std::string, std::string >
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'attributes';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/xmlscanner.hpp';
      sec-mem-desc-line = '40';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classeternity_1_1node_1a8daefdb6d1fffd05b08a2f8e07c9ffb4';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'value';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/xmlscanner.hpp';
      sec-mem-desc-line = '42';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classeternity_1_1node_1ac1d7dfa57dd7ad2c13f0d6e0594d7e7f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::vector< node * >
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'childs';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/xmlscanner.hpp';
      sec-mem-desc-line = '43';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classeternity_1_1node_1a11a3dc9c5a20a7cae619e7bf69e09131';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
node *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'parent';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/xmlscanner.hpp';
      sec-mem-desc-line = '44';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/xmlscanner.hpp';
  cp-fileline  = '37';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 854;
        node-label = 'eternity::node';
        node-link = {
          node-link-id = 'classeternity_1_1node';
        };
        node-child = {
          child-id = '854';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
parent
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classtsa_1_1_notch_widrow';
  cp-name   = 'tsa::NotchWidrow';
  cp-ref     = {
    ref-type = base;
    ref-id   = 'classtsa_1_1_algo_base';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_notch_widrow_1a7e25ed1b1078586eeba5042708604f3c';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'NotchWidrow';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'channels';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
Dmatrix &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'FrequencyList';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'C';
        sec-mem-param-defval = <<_EnD_oF_dEf_TeXt_
1.0
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/NotchWidrow.hpp';
      sec-mem-desc-line = '78';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Constructor
@param FrequencyList is a matrix containing the list of frequency to be removed.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_notch_widrow_1a035983c44683b3cebc0cc658625766f8';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'NotchWidrow';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const NotchWidrow &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'from';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/NotchWidrow.hpp';
      sec-mem-desc-line = '85';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Copy constructor

@param from The instance that must be copied
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_notch_widrow_1a6001ad30b1394347df1be5d9a77a46de';
      sec-mem-virt = virtual;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
virtual
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '~NotchWidrow';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/NotchWidrow.hpp';
      sec-mem-desc-line = '90';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Destructor
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_notch_widrow_1af11452f632cdcb6587b6e38902739418';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'operator()';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
SeqViewDouble &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'InputData';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
SeqViewDouble &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'CleanedData';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/NotchWidrow.hpp';
      sec-mem-desc-line = '98';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param InputData
@param CleanedData
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_notch_widrow_1a1a5e3856299c5c1ee5f395dcf3a84b45';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'operator()';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
SeqViewDouble &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'InputData';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
SeqViewDouble &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'CleanedData';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
SeqViewDouble &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'ReferenceSignal';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/NotchWidrow.hpp';
      sec-mem-desc-line = '106';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param InputData
@param CleanedData
@param ReferenceSignal
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_notch_widrow_1a5742384848310dde0e8cc5ffc8a59b22';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
NotchWidrow &
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'operator=';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const NotchWidrow &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'from';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/NotchWidrow.hpp';
      sec-mem-desc-line = '114';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Assignement operator

@param from The instance to be assigned from

@return a reference to a new object
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_notch_widrow_1a391286f42ba0dbede784bc90446833e4';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Dmatrix
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mFrequencyList';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/NotchWidrow.hpp';
      sec-mem-desc-line = '159';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_notch_widrow_1a73d8df3ec7105a4f481edc807123df5c';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Dmatrix
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mWeight1';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/NotchWidrow.hpp';
      sec-mem-desc-line = '160';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_notch_widrow_1a942bc010a02f09c124589a5f467b9100';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Dmatrix
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mWeight2';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/NotchWidrow.hpp';
      sec-mem-desc-line = '161';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_notch_widrow_1af4771f4a7d4b59bb804ee77679e13284';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Dvector
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mX1';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/NotchWidrow.hpp';
      sec-mem-desc-line = '162';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_notch_widrow_1adde0e4f47ee24c548101b61e864da073';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Dvector
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mX2';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/NotchWidrow.hpp';
      sec-mem-desc-line = '163';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_notch_widrow_1afa8a7585ecbd88d110ab096e344d2c0c';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Dvector
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mCs';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/NotchWidrow.hpp';
      sec-mem-desc-line = '164';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_notch_widrow_1a7b4784ec034908142ed52fa9fe33363c';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Dvector
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mSn';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/NotchWidrow.hpp';
      sec-mem-desc-line = '165';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_notch_widrow_1a16272fe55b1ddf22dcc04e7db1e92397';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mlstart';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/NotchWidrow.hpp';
      sec-mem-desc-line = '166';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_notch_widrow_1a11653cedb6210434d45a8f30e1dc37b8';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Dmatrix
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mRefSign';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/NotchWidrow.hpp';
      sec-mem-desc-line = '167';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_notch_widrow_1acbc33d87e8a0dd156dacf5bfe40ff493';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mAmp';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/NotchWidrow.hpp';
      sec-mem-desc-line = '168';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/NotchWidrow.hpp';
  cp-fileline  = '71';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Implement the lines removal using adaptive notch filters, with the Least Mean Squared method, Widrow's like.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-inheritancegraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 855;
        node-label = 'tsa::NotchWidrow';
        node-link = {
          node-link-id = 'classtsa_1_1_notch_widrow';
        };
        node-child = {
          child-id = '856';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 856;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 857;
        node-label = 'tsa::NotchWidrow';
        node-link = {
          node-link-id = 'classtsa_1_1_notch_widrow';
        };
        node-child = {
          child-id = '858';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 858;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
struct = {
  cp-id     = 'structeternity_1_1objects';
  cp-name   = 'eternity::objects';
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'structeternity_1_1objects_1a1c4f6adbfec429e299ed9b87d3e882dc';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'xml_write';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
Archive &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'archive';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'key';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
T &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'x';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/algorithms.hpp';
      sec-mem-desc-line = '82';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'structeternity_1_1objects_1a784de99cba7a1d4a1a048fa6a4ac5a4f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'xml_read';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
Archive &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'archive';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'key';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
ValueType *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'var';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
size_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'pos';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/algorithms.hpp';
      sec-mem-desc-line = '85';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'structeternity_1_1objects_1a4a22aa281cdd22163b1a4f52065185e6';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'write';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
Archive &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'archive';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
T &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'x';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/algorithms.hpp';
      sec-mem-desc-line = '88';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'structeternity_1_1objects_1a7454fa173d59bfe23b5ac6fa78cbdfc9';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'read';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
Archive &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'archive';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
ValueType *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'var';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/algorithms.hpp';
      sec-mem-desc-line = '91';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/algorithms.hpp';
  cp-fileline  = '80';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Manage persistence of object containers (e.g. collections of stack allocated objects)
    This struct is not intended to direct use but must be passed as template parameter of
    sequence struct.
_EnD_oF_dEf_TeXt_;
}; /* struct */
class = {
  cp-id     = 'classtsa_1_1_parcor2_a_r';
  cp-name   = 'tsa::Parcor2AR';
  cp-ref     = {
    ref-type = base;
    ref-id   = 'classtsa_1_1_algo_base';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_parcor2_a_r_1a071a1e9ef52185df08d6889937bf4a15';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Parcor2AR';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/Parcor2AR.hpp';
      sec-mem-desc-line = '78';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Constructor
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_parcor2_a_r_1a048e923396810067505a8a18ca95ec3a';
      sec-mem-virt = virtual;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
virtual
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '~Parcor2AR';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/Parcor2AR.hpp';
      sec-mem-desc-line = '83';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Destructor
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_parcor2_a_r_1aa87caf6b20cdb03a33fddf7e8c9beeef';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Dvector
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'operator()';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
Dvector
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'Parcor';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/Parcor2AR.hpp';
      sec-mem-desc-line = '85';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/Parcor2AR.hpp';
  cp-fileline  = '72';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Estimate the AR parameters by the Parcor.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-inheritancegraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 861;
        node-label = 'tsa::Parcor2AR';
        node-link = {
          node-link-id = 'classtsa_1_1_parcor2_a_r';
        };
        node-child = {
          child-id = '862';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 862;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 863;
        node-label = 'tsa::Parcor2AR';
        node-link = {
          node-link-id = 'classtsa_1_1_parcor2_a_r';
        };
        node-child = {
          child-id = '864';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 864;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classtsa_1_1_parse_parameter_string';
  cp-name   = 'tsa::ParseParameterString';
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_parse_parameter_string_1a68e6d37bb098c062d0e4eba92847c4fe';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'ParseParameterString';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const std::string &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'parlist';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/tsaUtilityFunctions.hpp';
      sec-mem-desc-line = '77';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_parse_parameter_string_1a67bcdd6d213f9dcc3a229a105e8ad319';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = '~ParseParameterString';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/tsaUtilityFunctions.hpp';
      sec-mem-desc-line = '83';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_parse_parameter_string_1a36f54e156537db06f4aca02194cba5cf';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'GetFloat';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'n';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/tsaUtilityFunctions.hpp';
      sec-mem-desc-line = '87';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_parse_parameter_string_1ac4ebad66e2a7645e1c49ecb87a126003';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'GetInt';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'n';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/tsaUtilityFunctions.hpp';
      sec-mem-desc-line = '102';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_parse_parameter_string_1a37cb52222e539bd6a3cf56cbeec0b958';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'GetString';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'n';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/tsaUtilityFunctions.hpp';
      sec-mem-desc-line = '117';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_parse_parameter_string_1ab2648c4056632b436348effef55e73e5';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
FunctionParser
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'fparser';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/tsaUtilityFunctions.hpp';
      sec-mem-desc-line = '135';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_parse_parameter_string_1aa90c11badf0c45d4efc7e2dd2c912100';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mParList';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/tsaUtilityFunctions.hpp';
      sec-mem-desc-line = '136';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_parse_parameter_string_1a3632dcdadae1f3578194c9ba14d4b7c8';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mTmp';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/tsaUtilityFunctions.hpp';
      sec-mem-desc-line = '137';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/tsaUtilityFunctions.hpp';
  cp-fileline  = '74';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 867;
        node-label = 'FunctionParser';
        node-link = {
          node-link-id = 'class_function_parser';
        };
        node-child = {
          child-id = '868';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
data
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 868;
        node-label = 'FunctionParser::Data';
        node-link = {
          node-link-id = 'struct_function_parser_1_1_data';
        };
      }; /* node */
      node = {
        node-id    = 866;
        node-label = 'tsa::ParseParameterString';
        node-link = {
          node-link-id = 'classtsa_1_1_parse_parameter_string';
        };
        node-child = {
          child-id = '867';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
fparser
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
struct = {
  cp-id     = 'structeternity_1_1pointers';
  cp-name   = 'eternity::pointers';
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'structeternity_1_1pointers_1a9ac5397bcf7d4e363f80c325b86e7966';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'xml_write';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
Archive &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'archive';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'key';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
T &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'x';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/algorithms.hpp';
      sec-mem-desc-line = '120';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'structeternity_1_1pointers_1a82633874b86bdf07241befe07601fa10';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'xml_read';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
Archive &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'archive';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'key';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
ValueType *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'var';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
size_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'pos';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/algorithms.hpp';
      sec-mem-desc-line = '123';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'structeternity_1_1pointers_1a5b2f7a5240aa5f6b19b3e615886ae5a3';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'write';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
Archive &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'archive';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
T &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'x';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/algorithms.hpp';
      sec-mem-desc-line = '126';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'structeternity_1_1pointers_1a393c2b0b219bf16b8fcc372aaa19f185';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'read';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
Archive &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'archive';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
ValueType *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'var';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/algorithms.hpp';
      sec-mem-desc-line = '129';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/algorithms.hpp';
  cp-fileline  = '118';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Manage persistence of object pointers containers (e.g. collections of heap allocated objects)
    This struct is not intended to direct use but must be passed as template parameter of
    sequence struct.
_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structeternity_1_1primitives';
  cp-name   = 'eternity::primitives';
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'structeternity_1_1primitives_1af5a6a3550f36eb25ad9372989614f162';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'xml_write';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
Archive &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'archive';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'key';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
T &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'x';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/algorithms.hpp';
      sec-mem-desc-line = '44';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'structeternity_1_1primitives_1af056cf9c18929b6ec47552e9cbb16b77';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'xml_read';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
Archive &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'archive';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'key';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
ValueType *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'var';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
size_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'pos';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/algorithms.hpp';
      sec-mem-desc-line = '47';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'structeternity_1_1primitives_1ace523d3626457362731f78d6a8b3d325';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'write';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
Archive &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'archive';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
T &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'x';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/algorithms.hpp';
      sec-mem-desc-line = '50';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'structeternity_1_1primitives_1a9770d350c89a97245bf15447586e40cb';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'read';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
Archive &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'archive';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
ValueType *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'var';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/algorithms.hpp';
      sec-mem-desc-line = '53';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/algorithms.hpp';
  cp-fileline  = '42';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Manage persistence of primitive containers (e.g. collections of int, float, double. etc.)
    This struct is not intended to direct use but must be passed as template parameter of
    sequence struct.
_EnD_oF_dEf_TeXt_;
}; /* struct */
class = {
  cp-id     = 'classtsa_1_1_p_r_o_c___channel';
  cp-name   = 'tsa::PROC_Channel';
  cp-ref     = {
    ref-type = base;
    ref-id   = 'classtsa_1_1_channel_descriptor';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_p_r_o_c___channel_1ab92dfa656aaf23e89436ba364d573980';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'PROC_Channel';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
FrameIStream *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'FIS';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
FrProcData *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'proc';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'id';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp';
      sec-mem-desc-line = '296';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Constructor

@param FIS pointer to the FrameIStream class
@param proc pointer to the first FrProcData structure
@param id id of the channel
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_p_r_o_c___channel_1acba6a69209ee63e13427046085d2be8d';
      sec-mem-virt = virtual;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
virtual
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '~PROC_Channel';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp';
      sec-mem-desc-line = '302';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Destructor
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_p_r_o_c___channel_1ab4f986f7829c52ca6c0d8c244be7c617';
      sec-mem-virt = virtual;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
virtual void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'AddData';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp';
      sec-mem-desc-line = '310';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This function must be called when there are not enough data 
to fill the output view. It reads a chunk of data from the next
FrProcData structure.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_p_r_o_c___channel_1ac29ae55cbededca3814b30e1186a4650';
      sec-mem-virt = virtual;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
virtual double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'GetLength';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp';
      sec-mem-desc-line = '318';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Get the maximul time length of data that can be currently filled
without calling AddData.

@return the time length of the data available in seconds
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_p_r_o_c___channel_1a84f00b22077b0aa41dba95ac0aaf0478';
      sec-mem-virt = virtual;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
virtual void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'FillView';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
SeqViewDouble &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'v';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'tstart';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'tend';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp';
      sec-mem-desc-line = '332';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'public-static-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_p_r_o_c___channel_1ae1d07e5c6af50796d0e97e4258807521';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
static PROC_Channel *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Create';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
FrameIStream *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'FIS';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'name';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'id';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp';
      sec-mem-desc-line = '329';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Create, if possible, an instance of the class

@param FIS pointer to the FrameIStream class instance
@param name name of the channel
@param id index of the channel

@return pointer to the created class instance or null
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_p_r_o_c___channel_1a81ce6bd37c7c57c76da43519841e0c85';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mName';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp';
      sec-mem-desc-line = '335';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
The channel's name  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp';
  cp-fileline  = '285';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
A descriptor for a proc channel
_EnD_oF_dEf_TeXt_;
  cp-inheritancegraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 874;
        node-label = 'tsa::ChannelDescriptor';
        node-link = {
          node-link-id = 'classtsa_1_1_channel_descriptor';
        };
        node-child = {
          child-id = '875';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 875;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */
      node = {
        node-id    = 873;
        node-label = 'tsa::PROC_Channel';
        node-link = {
          node-link-id = 'classtsa_1_1_p_r_o_c___channel';
        };
        node-child = {
          child-id = '874';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 879;
        node-label = 'tsa::FrameIStream';
        node-link = {
          node-link-id = 'classtsa_1_1_frame_i_stream';
        };
        node-child = {
          child-id = '878';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 877;
        node-label = 'tsa::ChannelDescriptor';
        node-link = {
          node-link-id = 'classtsa_1_1_channel_descriptor';
        };
        node-child = {
          child-id = '878';
          relation = public-inheritance;
        }; /* node-child */
        node-child = {
          child-id = '879';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
mFIS
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 878;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */
      node = {
        node-id    = 876;
        node-label = 'tsa::PROC_Channel';
        node-link = {
          node-link-id = 'classtsa_1_1_p_r_o_c___channel';
        };
        node-child = {
          child-id = '877';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classtsa_1_1quality__change';
  cp-name   = 'tsa::quality_change';
  cp-ref     = {
    ref-type = base;
    ref-id   = 'classstd_1_1runtime__error';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1quality__change_1af530cc58e7eeb50f31ddb700bfea79f4';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'quality_change';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const std::string &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'msg';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'change_time';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'old_flag';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'new_flag';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/AlgoExceptions.hpp';
      sec-mem-desc-line = '215';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Constructor

@param msg error message
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1quality__change_1a71190c89b87f044b190e67be16f4c1a4';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'EventTime';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/AlgoExceptions.hpp';
      sec-mem-desc-line = '224';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1quality__change_1af1f74fabce5ad05c2088a7e99a68cb6a';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'OldFlag';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/AlgoExceptions.hpp';
      sec-mem-desc-line = '228';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1quality__change_1a6de5d5aea1cf03c5d4d2d69014d78d2d';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'NewFlag';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/AlgoExceptions.hpp';
      sec-mem-desc-line = '232';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1quality__change_1a5bbdd6247455082169c25acf8c092186';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mEventTime';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/AlgoExceptions.hpp';
      sec-mem-desc-line = '236';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1quality__change_1aca073076da85ec9eab1fa6d9b7e99a2b';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mOldFlag';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/AlgoExceptions.hpp';
      sec-mem-desc-line = '237';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1quality__change_1a90e75c508ba37e01d11727853e401919';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mNewFlag';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/AlgoExceptions.hpp';
      sec-mem-desc-line = '238';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/AlgoExceptions.hpp';
  cp-fileline  = '207';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
This exception should be used when data quality change
_EnD_oF_dEf_TeXt_;
  cp-inheritancegraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 880;
        node-label = 'tsa::quality_change';
        node-link = {
          node-link-id = 'classtsa_1_1quality__change';
        };
        node-child = {
          child-id = '881';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 881;
        node-label = 'std::runtime_error';
      }; /* node */

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 882;
        node-label = 'tsa::quality_change';
        node-link = {
          node-link-id = 'classtsa_1_1quality__change';
        };
        node-child = {
          child-id = '883';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 883;
        node-label = 'std::runtime_error';
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classtsa_1_1_real_f_f_t';
  cp-name   = 'tsa::RealFFT';
  cp-ref     = {
    ref-type = base;
    ref-id   = 'classtsa_1_1_base_f_f_t';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_real_f_f_t_1a5da04120c5120c230282a6833b8871ae';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'RealFFT';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'size';
        sec-mem-param-defval = <<_EnD_oF_dEf_TeXt_
0
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
enum FFTPlanningMode
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'mode';
        sec-mem-param-defval = <<_EnD_oF_dEf_TeXt_
ESTIMATE
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'PreserveInput';
        sec-mem-param-defval = <<_EnD_oF_dEf_TeXt_
true
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/RealFFT.hpp';
      sec-mem-desc-line = '83';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Constructor

@param size the size of the transform
@param mode specify the way in which plans are calculated
@param PreserveInput true if the input buffer must be preserved during the transform, false otherwise
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_real_f_f_t_1a2c65c00ea09121cceb8804b9d5e1c395';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'RealFFT';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const RealFFT &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'from';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/RealFFT.hpp';
      sec-mem-desc-line = '90';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Copy constructor

@param from The instance that must be copied
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_real_f_f_t_1a51eccd426b1802e0c245c8dd4006dc3e';
      sec-mem-virt = virtual;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
virtual
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '~RealFFT';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/RealFFT.hpp';
      sec-mem-desc-line = '95';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Destructor
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/RealFFT.hpp';
  cp-fileline  = '74';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Multichannel real to complex FFT.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
This is the implementation of the FFT of a real multichannel buffer
_EnD_oF_dEf_TeXt_;
  cp-inheritancegraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 885;
        node-label = 'tsa::BaseFFT';
        node-link = {
          node-link-id = 'classtsa_1_1_base_f_f_t';
        };
        node-child = {
          child-id = '886';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 886;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */
      node = {
        node-id    = 884;
        node-label = 'tsa::RealFFT';
        node-link = {
          node-link-id = 'classtsa_1_1_real_f_f_t';
        };
        node-child = {
          child-id = '885';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 888;
        node-label = 'tsa::BaseFFT';
        node-link = {
          node-link-id = 'classtsa_1_1_base_f_f_t';
        };
        node-child = {
          child-id = '889';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 889;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */
      node = {
        node-id    = 887;
        node-label = 'tsa::RealFFT';
        node-link = {
          node-link-id = 'classtsa_1_1_real_f_f_t';
        };
        node-child = {
          child-id = '888';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classtsa_1_1_r_l_s_canceler';
  cp-name   = 'tsa::RLSCanceler';
  cp-ref     = {
    ref-type = base;
    ref-id   = 'classtsa_1_1_algo_base';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_r_l_s_canceler_1aab2d9be86611bc4b0f2912e7f673e478';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'RLSCanceler';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'Order';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'delta';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'lambda';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'Channels';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/RLSCanceler.hpp';
      sec-mem-desc-line = '84';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Constructor


@param Order order of the filter
@param delta guessed inverse rms
@param lambda forgetting factor
@param Channels number of channels of the incoming data
@return 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_r_l_s_canceler_1a80a39cdda14b8d902e720932b5fcf052';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'RLSCanceler';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const RLSCanceler &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'from';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/RLSCanceler.hpp';
      sec-mem-desc-line = '91';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Copy constructor

@param from The instance that must be copied
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_r_l_s_canceler_1a3aadd00151305795177bf2b2e394f140';
      sec-mem-virt = virtual;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
virtual
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '~RLSCanceler';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/RLSCanceler.hpp';
      sec-mem-desc-line = '96';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Destructor
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_r_l_s_canceler_1ad37c41807b26bb323a1fc044b17a5ca9';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
RLSCanceler &
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'operator=';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const RLSCanceler &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'from';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/RLSCanceler.hpp';
      sec-mem-desc-line = '105';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Assignement operator

@param from The instance to be assigned from

@return a reference to a new object
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_r_l_s_canceler_1aa83e2ee91b1e68b54099455dc6e5f3c6';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'operator()';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
SeqViewDouble &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'InputData';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
SeqViewDouble &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'CleanedData';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/RLSCanceler.hpp';
      sec-mem-desc-line = '112';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param InputData
@param CleanedData
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_r_l_s_canceler_1a8801aca2920a4cdaca83c41fdc5d7754';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'operator()';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
SeqViewDouble &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'InputData';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
SeqViewDouble &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'CleanedData';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
SeqViewDouble &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'ReferenceSignal';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/RLSCanceler.hpp';
      sec-mem-desc-line = '120';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param InputData
@param CleanedData
@param ReferenceSignal
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_r_l_s_canceler_1ac96db09b7154fb657b33325c7dcb0ba9';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mP';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/RLSCanceler.hpp';
      sec-mem-desc-line = '179';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
order of the model  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_r_l_s_canceler_1a689a06e01e97d29f98be6f37c2ac229d';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mdelta';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/RLSCanceler.hpp';
      sec-mem-desc-line = '180';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
guessed average 1.0/sigma*sigma  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_r_l_s_canceler_1a3c2ce539583693961306866f2d0d0b40';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mlambda';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/RLSCanceler.hpp';
      sec-mem-desc-line = '181';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
forgetting factor  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_r_l_s_canceler_1a9abd498386c6750bfa22910242ace12e';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Dmatrix
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mWeights';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/RLSCanceler.hpp';
      sec-mem-desc-line = '182';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
P weights for noise removal  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_r_l_s_canceler_1a5f45c202fd98fb28fc600747bda6d8e3';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Dmatrix
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mC';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/RLSCanceler.hpp';
      sec-mem-desc-line = '183';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Gain matrix  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_r_l_s_canceler_1ac555ed3641b607e0818eb0d55d09e024';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Dvector
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mX';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/RLSCanceler.hpp';
      sec-mem-desc-line = '184';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
P-length data buffer  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_r_l_s_canceler_1ab23f9b24f1909251587df0ec11218a4e';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Dvector
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mM';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/RLSCanceler.hpp';
      sec-mem-desc-line = '185';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
learning parameter  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_r_l_s_canceler_1aca9845a6e34fb8ce588d9b8e7e44b489';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Dvector
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mG';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/RLSCanceler.hpp';
      sec-mem-desc-line = '186';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
gain vector  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_r_l_s_canceler_1a68cb1250ac509a8f038e6541b5b14c99';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mlstart';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/RLSCanceler.hpp';
      sec-mem-desc-line = '187';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
starting point for buffered inputs  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_r_l_s_canceler_1a290c458da793dc228fb0a2c2fc0cfd8a';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'msigma';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/RLSCanceler.hpp';
      sec-mem-desc-line = '188';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
estimation of sigma of the data  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/RLSCanceler.hpp';
  cp-fileline  = '71';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-inheritancegraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 890;
        node-label = 'tsa::RLSCanceler';
        node-link = {
          node-link-id = 'classtsa_1_1_r_l_s_canceler';
        };
        node-child = {
          child-id = '891';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 891;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 892;
        node-label = 'tsa::RLSCanceler';
        node-link = {
          node-link-id = 'classtsa_1_1_r_l_s_canceler';
        };
        node-child = {
          child-id = '893';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 893;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classstd_1_1runtime__error';
  cp-name   = 'std::runtime_error';
  cp-ref     = {
    ref-type = derived;
    ref-id   = 'classtsa_1_1bad__value';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-ref     = {
    ref-type = derived;
    ref-id   = 'classtsa_1_1missing__data';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-ref     = {
    ref-type = derived;
    ref-id   = 'classtsa_1_1no__data__available';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-ref     = {
    ref-type = derived;
    ref-id   = 'classtsa_1_1quality__change';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/AlgoExceptions.hpp';
  cp-fileline  = '207';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-inheritancegraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 898;
        node-label = 'tsa::quality_change';
        node-link = {
          node-link-id = 'classtsa_1_1quality__change';
        };
        node-child = {
          child-id = '894';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 894;
        node-label = 'runtime_error';
      }; /* node */
      node = {
        node-id    = 896;
        node-label = 'tsa::missing_data';
        node-link = {
          node-link-id = 'classtsa_1_1missing__data';
        };
        node-child = {
          child-id = '894';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 895;
        node-label = 'tsa::bad_value';
        node-link = {
          node-link-id = 'classtsa_1_1bad__value';
        };
        node-child = {
          child-id = '894';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 897;
        node-label = 'tsa::no_data_available';
        node-link = {
          node-link-id = 'classtsa_1_1no__data__available';
        };
        node-child = {
          child-id = '894';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classtsa_1_1_selection_order_criteria';
  cp-name   = 'tsa::SelectionOrderCriteria';
  cp-ref     = {
    ref-type = base;
    ref-id   = 'classtsa_1_1_algo_base';
    ref-prot = private;
    ref-virt = non-virtual;
  };
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_selection_order_criteria_1a0f94155c1a172ae6368f8ffdc33092e9';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'SelectionOrderCriteria';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'N';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'Order';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/SelectionOrderCriteria.hpp';
      sec-mem-desc-line = '84';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Constructor
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_selection_order_criteria_1a5c3fd909a347a327ecc326bd2be51893';
      sec-mem-virt = virtual;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
virtual
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '~SelectionOrderCriteria';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/SelectionOrderCriteria.hpp';
      sec-mem-desc-line = '89';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Destructor
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_selection_order_criteria_1a2b364448fe8af2072b3c4443a611200c';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mMaxOrder';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/SelectionOrderCriteria.hpp';
      sec-mem-desc-line = '176';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_selection_order_criteria_1a838d65217ce4468ea6e3a26343d051b1';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mN';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/SelectionOrderCriteria.hpp';
      sec-mem-desc-line = '177';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_selection_order_criteria_1a0628c9e68c9c176c700f8605a5292fb0';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mSelOrd';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/SelectionOrderCriteria.hpp';
      sec-mem-desc-line = '178';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_selection_order_criteria_1af943c278592db40087a1dc8f7e55422d';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Dvector
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mEps';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/SelectionOrderCriteria.hpp';
      sec-mem-desc-line = '179';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_selection_order_criteria_1a661541b1bd821838cff0d7dc74f5b074';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Dvector
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mFpe';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/SelectionOrderCriteria.hpp';
      sec-mem-desc-line = '180';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_selection_order_criteria_1a6aff5035c2b110a5e81ba55c296a6012';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Dvector
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mMdl';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/SelectionOrderCriteria.hpp';
      sec-mem-desc-line = '181';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_selection_order_criteria_1a80e4268e4f5f617411d8529c9f4d3b76';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Dvector
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mAic';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/SelectionOrderCriteria.hpp';
      sec-mem-desc-line = '182';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_selection_order_criteria_1acde6db27b392c9a0c62becf4128f9ef8';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Dvector
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mAicC';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/SelectionOrderCriteria.hpp';
      sec-mem-desc-line = '183';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_selection_order_criteria_1ad94e1f1c5867ddbdc0209067e840d433';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Dvector
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mCat';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/SelectionOrderCriteria.hpp';
      sec-mem-desc-line = '184';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_selection_order_criteria_1ae5332ab27aff98eed6f196387dd83a51';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Dvector
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mHQ';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/SelectionOrderCriteria.hpp';
      sec-mem-desc-line = '185';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_selection_order_criteria_1a6c76b9bb7bdb04d6c983dba37c76fadd';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Dvector
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mFsic';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/SelectionOrderCriteria.hpp';
      sec-mem-desc-line = '186';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_selection_order_criteria_1a6028ff4ec0b73586797d81dad9eeabc1';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Dvector
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mCic';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/SelectionOrderCriteria.hpp';
      sec-mem-desc-line = '187';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/SelectionOrderCriteria.hpp';
  cp-fileline  = '78';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
A more detailed description of SelectionOrderCriteria   
Produce order selection criteria
_EnD_oF_dEf_TeXt_;
  cp-inheritancegraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 900;
        node-label = 'tsa::SelectionOrderCriteria';
        node-link = {
          node-link-id = 'classtsa_1_1_selection_order_criteria';
        };
        node-child = {
          child-id = '901';
          relation = private-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 901;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 902;
        node-label = 'tsa::SelectionOrderCriteria';
        node-link = {
          node-link-id = 'classtsa_1_1_selection_order_criteria';
        };
        node-child = {
          child-id = '903';
          relation = private-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 903;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
struct = {
  cp-id     = 'structeternity_1_1sequence';
  cp-name   = 'eternity::sequence';
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'structeternity_1_1sequence_1a4e7cf210d285c8b3f72faa3d81ef9bad';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
size_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'xml_write';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
InputIterator
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'first';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
InputIterator
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'last';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
Archive &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'archive';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/algorithms.hpp';
      sec-mem-desc-line = '160';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'structeternity_1_1sequence_1ae510997cf3ed034443737ca0f05e9a34';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'xml_read';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
Container &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'container';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
InputIterator
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'insert';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
size_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'len';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
Archive &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'archive';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/algorithms.hpp';
      sec-mem-desc-line = '163';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'structeternity_1_1sequence_1a5339872e64fcb9636ef080e5b932658a';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
size_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'write';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
InputIterator
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'first';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
InputIterator
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'last';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
Archive &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'archive';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/algorithms.hpp';
      sec-mem-desc-line = '166';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'structeternity_1_1sequence_1ac0bc259640bda1d30744b14c59539d20';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'read';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
Container &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'container';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
InputIterator
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'insert';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
size_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'len';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
Archive &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'archive';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/algorithms.hpp';
      sec-mem-desc-line = '169';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/algorithms.hpp';
  cp-fileline  = '158';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Manage persistence of sequence containers (e.g. vector, list).
    Use template parameter to specify contents type (e.g. primitives, objects or pointers).
    This struct is not intended to direct use but must be passed as template parameter of
    xml_serialize() or serialize() algorithms.
_EnD_oF_dEf_TeXt_;
}; /* struct */
class = {
  cp-id     = 'classtsa_1_1_seq_view';
  cp-name   = 'tsa::SeqView';
  cp-ref     = {
    ref-type = base;
    ref-id   = 'classtsa_1_1_base_view';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-section = {
    sec-kind = 'public-type';
    sec-member = {
      sec-mem-kind = 'typedef';
      sec-mem-id   = 'classtsa_1_1_seq_view_1a72b689db78d0feea3305e62cc3852a1d';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
T
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'numericType';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/SeqView.hpp';
      sec-mem-desc-line = '27';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'typedef';
      sec-mem-id   = 'classtsa_1_1_seq_view_1a2402583f29cfbb491586ab529be3e27f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
boost::numeric::ublas::matrix< T >
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'matrixType';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/SeqView.hpp';
      sec-mem-desc-line = '28';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_seq_view_1ad5d0fa3c39a124fec0c4b4711f1f621c';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'SeqView';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/SeqView.hpp';
      sec-mem-desc-line = '35';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Constructor.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_seq_view_1aee8aba59ff1ffae588b594b055ad3dc7';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'SeqView';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'aStart';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'aSampling';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'ChannelSize';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const std::string &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'aName';
        sec-mem-param-defval = <<_EnD_oF_dEf_TeXt_
std::string()
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'ColumnDim';
        sec-mem-param-defval = <<_EnD_oF_dEf_TeXt_
1
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/SeqView.hpp';
      sec-mem-desc-line = '56';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Constructor.

@param aStart start of the sequence
@param aSampling sampling the sequence
@param ChannelSize the number of data in each channel
@param aName a name for the data
@param ColumnDim the dimension of the column structure
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_seq_view_1aebaf0de2a3d001035e64878b75b336c2';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'SeqView';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const SeqView &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'from';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/SeqView.hpp';
      sec-mem-desc-line = '77';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Copy constructor

@param from The instance that must be copied
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_seq_view_1a92d9c5d9ae07e3b648469cf2a642b813';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = '~SeqView';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/SeqView.hpp';
      sec-mem-desc-line = '91';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Destructor
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'protected-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_seq_view_1a400883f9563926797fdfe3e0fd89faa9';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Rescale';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/SeqView.hpp';
      sec-mem-desc-line = '533';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Rescale the data, setting the auxiliary scale to one.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'protected-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_seq_view_1a7534776ab98f82620fd02d021309251a';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
boost::numeric::ublas::matrix< numericType >
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mData';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/SeqView.hpp';
      sec-mem-desc-line = '538';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
The data array.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_seq_view_1ac581e81bc585bf0b3587b728c51b5cd5';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mScale';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/SeqView.hpp';
      sec-mem-desc-line = '539';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
The auxiliary scale.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_seq_view_1a08dbe816c3c5acbf43fbce7205a9dccb';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mStart';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/SeqView.hpp';
      sec-mem-desc-line = '540';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
The start time.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_seq_view_1a824069f8c77d6971304be1005244e490';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mSampling';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/SeqView.hpp';
      sec-mem-desc-line = '541';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
The sampling time.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/SeqView.hpp';
  cp-fileline  = '25';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Time view: container for time series.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-inheritancegraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 906;
        node-label = 'tsa::SeqView< T >';
        node-link = {
          node-link-id = 'classtsa_1_1_seq_view';
        };
        node-child = {
          child-id = '907';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 907;
        node-label = 'tsa::BaseView';
        node-link = {
          node-link-id = 'classtsa_1_1_base_view';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 908;
        node-label = 'tsa::SeqView< T >';
        node-link = {
          node-link-id = 'classtsa_1_1_seq_view';
        };
        node-child = {
          child-id = '909';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 909;
        node-label = 'tsa::BaseView';
        node-link = {
          node-link-id = 'classtsa_1_1_base_view';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classtsa_1_1_s_e_r___channel';
  cp-name   = 'tsa::SER_Channel';
  cp-ref     = {
    ref-type = base;
    ref-id   = 'classtsa_1_1_channel_descriptor';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_s_e_r___channel_1a9fd72d943a55cf2b6dd6f7116b188be1';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'SER_Channel';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
FrameIStream *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'FIS';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'smsName';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'smsParam';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'id';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp';
      sec-mem-desc-line = '411';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Constructor

@param FIS pointer to the FrameIStream class
@param smsName the serial structure name
@param smsParam the serial parameter name
@param id id of the channel
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_s_e_r___channel_1a7445edda361e4b3f5381efb687c5aaba';
      sec-mem-virt = virtual;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
virtual
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '~SER_Channel';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp';
      sec-mem-desc-line = '417';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Destructor
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_s_e_r___channel_1a77efdde9aaa7bbd356088bb1c15e59bf';
      sec-mem-virt = virtual;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
virtual void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'AddData';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp';
      sec-mem-desc-line = '425';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This function must be called when there are not enough data 
to fill the output view. It reads a chunk of data from the next
serial data structure.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_s_e_r___channel_1ac2cb2ded2f417590ed1da5c5e2315569';
      sec-mem-virt = virtual;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
virtual double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'GetLength';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp';
      sec-mem-desc-line = '433';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Get the maximul time length of data that can be currently filled
without calling AddData.

@return the time length of the data available in seconds
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'public-static-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_s_e_r___channel_1a27205b1cfec759cc2922db6dc9d93115';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
static SER_Channel *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Create';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
FrameIStream *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'FIS';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'name';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'id';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp';
      sec-mem-desc-line = '444';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Create, if possible, an instance of the class

@param FIS pointer to the FrameIStream class instance
@param name name of the channel
@param id index of the channel

@return pointer to the created class instance or null
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_s_e_r___channel_1ab132f8f0cd0652f3fb43b24d2ec9590c';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mSmsName';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp';
      sec-mem-desc-line = '447';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
The serial channel name  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_s_e_r___channel_1a6967202b96d336dbbef38b67724cf295';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mSmsParam';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp';
      sec-mem-desc-line = '448';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
The serial channel parameter name  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp';
  cp-fileline  = '399';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
A descriptor for a SER channel
_EnD_oF_dEf_TeXt_;
  cp-inheritancegraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 910;
        node-label = 'tsa::SER_Channel';
        node-link = {
          node-link-id = 'classtsa_1_1_s_e_r___channel';
        };
        node-child = {
          child-id = '911';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 911;
        node-label = 'tsa::ChannelDescriptor';
        node-link = {
          node-link-id = 'classtsa_1_1_channel_descriptor';
        };
        node-child = {
          child-id = '912';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 912;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 916;
        node-label = 'tsa::FrameIStream';
        node-link = {
          node-link-id = 'classtsa_1_1_frame_i_stream';
        };
        node-child = {
          child-id = '915';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 913;
        node-label = 'tsa::SER_Channel';
        node-link = {
          node-link-id = 'classtsa_1_1_s_e_r___channel';
        };
        node-child = {
          child-id = '914';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 914;
        node-label = 'tsa::ChannelDescriptor';
        node-link = {
          node-link-id = 'classtsa_1_1_channel_descriptor';
        };
        node-child = {
          child-id = '915';
          relation = public-inheritance;
        }; /* node-child */
        node-child = {
          child-id = '916';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
mFIS
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 915;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classtsa_1_1_s_i_m___channel';
  cp-name   = 'tsa::SIM_Channel';
  cp-ref     = {
    ref-type = base;
    ref-id   = 'classtsa_1_1_channel_descriptor';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_s_i_m___channel_1ae75272a802bff2d5164d405021c5f720';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'SIM_Channel';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
FrameIStream *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'FIS';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
FrSimData *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'sim';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'id';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp';
      sec-mem-desc-line = '355';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Constructor

@param FIS pointer to the FrameIStream class
@param sim pointer to the first FrSimData structure
@param id id of the channel
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_s_i_m___channel_1a73d2a4e58efdc273a39486c35e7e1097';
      sec-mem-virt = virtual;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
virtual
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '~SIM_Channel';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp';
      sec-mem-desc-line = '361';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Destructor
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_s_i_m___channel_1ada133d83befff9b1bde7e13bb78df7e0';
      sec-mem-virt = virtual;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
virtual void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'AddData';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp';
      sec-mem-desc-line = '369';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This function must be called when there are not enough data 
to fill the output view. It reads a chunk of data from the next
FrSimData structure.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_s_i_m___channel_1a99941fc8df0c8bbc32091e7e87d20de8';
      sec-mem-virt = virtual;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
virtual double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'GetLength';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp';
      sec-mem-desc-line = '377';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Get the maximul time length of data that can be currently filled
without calling AddData.

@return the time length of the data available in seconds
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'public-static-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_s_i_m___channel_1a5448e85710d2de326584711d01f27e72';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
static SIM_Channel *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Create';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
FrameIStream *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'FIS';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'name';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'id';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp';
      sec-mem-desc-line = '388';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Create, if possible, an instance of the class

@param FIS pointer to the FrameIStream class instance
@param name name of the channel
@param id index of the channel

@return pointer to the created class instance or null
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_s_i_m___channel_1a927b435b91632d523d59b89f75a01c66';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mName';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp';
      sec-mem-desc-line = '391';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
The channel's name  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp';
  cp-fileline  = '344';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
A descriptor for a SIM channel
_EnD_oF_dEf_TeXt_;
  cp-inheritancegraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 917;
        node-label = 'tsa::SIM_Channel';
        node-link = {
          node-link-id = 'classtsa_1_1_s_i_m___channel';
        };
        node-child = {
          child-id = '918';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 918;
        node-label = 'tsa::ChannelDescriptor';
        node-link = {
          node-link-id = 'classtsa_1_1_channel_descriptor';
        };
        node-child = {
          child-id = '919';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 919;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 923;
        node-label = 'tsa::FrameIStream';
        node-link = {
          node-link-id = 'classtsa_1_1_frame_i_stream';
        };
        node-child = {
          child-id = '922';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 920;
        node-label = 'tsa::SIM_Channel';
        node-link = {
          node-link-id = 'classtsa_1_1_s_i_m___channel';
        };
        node-child = {
          child-id = '921';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 921;
        node-label = 'tsa::ChannelDescriptor';
        node-link = {
          node-link-id = 'classtsa_1_1_channel_descriptor';
        };
        node-child = {
          child-id = '922';
          relation = public-inheritance;
        }; /* node-child */
        node-child = {
          child-id = '923';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
mFIS
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 922;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classtsa_1_1_square';
  cp-name   = 'tsa::Square';
  cp-section = {
    sec-kind = 'public-static-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_square_1adde315df70bffcc16a4293676d4e8efc';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
static unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Map';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'i';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'j';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'lda';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/tsaUtilityFunctions.hpp';
      sec-mem-desc-line = '265';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_square_1a6ed8a7a76c2b315cdc7dee7ccf8d5395';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
static unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Size';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'dim';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/tsaUtilityFunctions.hpp';
      sec-mem-desc-line = '269';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_square_1aa2538e6f3c7086a4a7b25c21ac0d7f4d';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
static unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Dimension';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'sz';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/tsaUtilityFunctions.hpp';
      sec-mem-desc-line = '273';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/tsaUtilityFunctions.hpp';
  cp-fileline  = '262';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classtsa_1_1_strict_lower_triangular';
  cp-name   = 'tsa::StrictLowerTriangular';
  cp-section = {
    sec-kind = 'public-static-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_strict_lower_triangular_1a69fb9a803dfb8a4a9228a23ef3250e22';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
static unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Map';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'i';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'j';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'int';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/tsaUtilityFunctions.hpp';
      sec-mem-desc-line = '249';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_strict_lower_triangular_1a06a17741f97088e8a67885c618368de5';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
static unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Size';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'dim';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/tsaUtilityFunctions.hpp';
      sec-mem-desc-line = '253';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_strict_lower_triangular_1a4147086de61984dc37416df9676626bd';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
static unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Dimension';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'sz';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/tsaUtilityFunctions.hpp';
      sec-mem-desc-line = '257';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/tsaUtilityFunctions.hpp';
  cp-fileline  = '246';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classtsa_1_1_strict_upper_triangular';
  cp-name   = 'tsa::StrictUpperTriangular';
  cp-section = {
    sec-kind = 'public-static-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_strict_upper_triangular_1a181559cdcde4660621e9c4d593cdb91b';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
static unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Map';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'i';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'j';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'dim';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/tsaUtilityFunctions.hpp';
      sec-mem-desc-line = '232';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_strict_upper_triangular_1a07caedb4fa38d3e286e392633c7c8d51';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
static unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Size';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'dim';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/tsaUtilityFunctions.hpp';
      sec-mem-desc-line = '236';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_strict_upper_triangular_1adc6c120ca12440c7679a0323f88f1c9c';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
static unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Dimension';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'sz';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/tsaUtilityFunctions.hpp';
      sec-mem-desc-line = '240';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/tsaUtilityFunctions.hpp';
  cp-fileline  = '229';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classtsa_1_1_t_f2_p_s_d';
  cp-name   = 'tsa::TF2PSD';
  cp-ref     = {
    ref-type = base;
    ref-id   = 'classtsa_1_1_algo_base';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_t_f2_p_s_d_1a0557e0572905d9c92cec5c42851f00f9';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'TF2PSD';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'squared';
        sec-mem-param-defval = <<_EnD_oF_dEf_TeXt_
false
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/TF2Psd.hpp';
      sec-mem-desc-line = '77';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Constructor
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_t_f2_p_s_d_1a180ccd6544ef862a0b63a962e4c3e9b6';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'TF2PSD';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const TF2PSD &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'from';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/TF2Psd.hpp';
      sec-mem-desc-line = '86';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Copy constructor

@param from The instance that must be copied
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_t_f2_p_s_d_1a99c083327989d11f095fb2194f02c852';
      sec-mem-virt = virtual;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
virtual
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '~TF2PSD';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/TF2Psd.hpp';
      sec-mem-desc-line = '93';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Destructor
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_t_f2_p_s_d_1a27a169e96e34605ccd463ca3f66e2cd1';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
TF2PSD &
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'operator=';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const TF2PSD &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'from';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/TF2Psd.hpp';
      sec-mem-desc-line = '104';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Assignement operator

@param from The instance to be assigned from

@return a reference to a new object
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_t_f2_p_s_d_1a9f8b0c7e90cf9e22c994313e5e92cabe';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mSquaredFlag';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/TF2Psd.hpp';
      sec-mem-desc-line = '183';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/TF2Psd.hpp';
  cp-fileline  = '71';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Convert a transfer function to a PSD 
_EnD_oF_dEf_TeXt_;
  cp-inheritancegraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 930;
        node-label = 'tsa::TF2PSD';
        node-link = {
          node-link-id = 'classtsa_1_1_t_f2_p_s_d';
        };
        node-child = {
          child-id = '931';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 931;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 932;
        node-label = 'tsa::TF2PSD';
        node-link = {
          node-link-id = 'classtsa_1_1_t_f2_p_s_d';
        };
        node-child = {
          child-id = '933';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 933;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classtsa_1_1_t_f_view';
  cp-name   = 'tsa::TFView';
  cp-ref     = {
    ref-type = base;
    ref-id   = 'classtsa_1_1_base_view';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-section = {
    sec-kind = 'public-type';
    sec-member = {
      sec-mem-kind = 'typedef';
      sec-mem-id   = 'classtsa_1_1_t_f_view_1a9dcd740f5d29edefd0a181917a9c700b';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
T
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'numericType';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/TFView.hpp';
      sec-mem-desc-line = '26';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_t_f_view_1a03015be7d08c3aa9ac9fa82210706990';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'TFView';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'FrequencySize';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'TimeSize';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'aStartT';
        sec-mem-param-defval = <<_EnD_oF_dEf_TeXt_
0.0
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'aSamplingT';
        sec-mem-param-defval = <<_EnD_oF_dEf_TeXt_
1.0
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'aStartF';
        sec-mem-param-defval = <<_EnD_oF_dEf_TeXt_
0.0
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'aSamplingF';
        sec-mem-param-defval = <<_EnD_oF_dEf_TeXt_
1.0
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/TFView.hpp';
      sec-mem-desc-line = '39';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Constructor.

@param FrequencySize the number of data on frequency axis
@param TimeSize the number of data on time axis
@param aStartT start time
@param aSamplingT time step
@param aStartF start frequency
@param aSamplingF frequency step
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_t_f_view_1abdab74797261823f5f66dc8faf53373f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = '~TFView';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/TFView.hpp';
      sec-mem-desc-line = '62';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Destructor
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'protected-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_t_f_view_1ac93678cadb31386dfffd7e9e0ce2fb0b';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Rescale';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/TFView.hpp';
      sec-mem-desc-line = '194';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Rescale the data, setting the auxiliary scale to one.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'protected-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_t_f_view_1a2681e1d8a18806d0add738068a43bf11';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
boost::numeric::ublas::matrix< numericType >
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mData';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/TFView.hpp';
      sec-mem-desc-line = '199';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
The data array.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_t_f_view_1a1f7ed10cd264a12d99744197c134e1bf';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mScale';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/TFView.hpp';
      sec-mem-desc-line = '200';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
The auxiliary scale.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_t_f_view_1a42d5dc9edb5b4d6c746d5c1a1614abb4';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mStartT';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/TFView.hpp';
      sec-mem-desc-line = '201';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
The start time.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_t_f_view_1a0195d10ff8a0c865975f81ea67c64816';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mSamplingT';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/TFView.hpp';
      sec-mem-desc-line = '202';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
The sampling in time.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_t_f_view_1afd3043fa47a3c337b1eedcb5cad1aa63';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mStartF';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/TFView.hpp';
      sec-mem-desc-line = '203';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
The start frequency.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_t_f_view_1a7c966f8d9d2e2f2e4790ed5067f46f40';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mSamplingF';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/TFView.hpp';
      sec-mem-desc-line = '204';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
The sampling in frequency.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/TFView.hpp';
  cp-fileline  = '24';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Time view: container for time series.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-inheritancegraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 935;
        node-label = 'tsa::BaseView';
        node-link = {
          node-link-id = 'classtsa_1_1_base_view';
        };
      }; /* node */
      node = {
        node-id    = 934;
        node-label = 'tsa::TFView< T >';
        node-link = {
          node-link-id = 'classtsa_1_1_t_f_view';
        };
        node-child = {
          child-id = '935';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 937;
        node-label = 'tsa::BaseView';
        node-link = {
          node-link-id = 'classtsa_1_1_base_view';
        };
      }; /* node */
      node = {
        node-id    = 936;
        node-label = 'tsa::TFView< T >';
        node-link = {
          node-link-id = 'classtsa_1_1_t_f_view';
        };
        node-child = {
          child-id = '937';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classtsa_1_1_tukey_hann_window';
  cp-name   = 'tsa::TukeyHannWindow';
  cp-ref     = {
    ref-type = base;
    ref-id   = 'classtsa_1_1_base_window';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_tukey_hann_window_1abdd4209c65b5774c0279a7ea2ce2fa7b';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'TukeyHannWindow';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'size';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/TukeyHannWindow.hpp';
      sec-mem-desc-line = '77';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Constructor

@param size the size of the window
@param cached true if the window must be preevaluated in a buffer
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_tukey_hann_window_1ab883fbdd5791e0bbedede99126e17bf7';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'TukeyHannWindow';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'size';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const std::string &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'p';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/TukeyHannWindow.hpp';
      sec-mem-desc-line = '88';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_tukey_hann_window_1af6b96cf901725bc0bcc7cf79bef2d766';
      sec-mem-virt = virtual;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
virtual
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '~TukeyHannWindow';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/TukeyHannWindow.hpp';
      sec-mem-desc-line = '103';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Destructor
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_tukey_hann_window_1a041a98810aa841fd88d19139bf0e977f';
      sec-mem-virt = virtual;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'FillWindow';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/TukeyHannWindow.hpp';
      sec-mem-desc-line = '205';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Initialize the window with the correct values, given
its actual size. This is a pure virtual function, which 
is redefined by each window class.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_tukey_hann_window_1a6d97dd74ecf13fce86fc5a9349cbd598';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Dirichlet';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'theta';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/TukeyHannWindow.hpp';
      sec-mem-desc-line = '222';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Dirichlet's function

@param theta argument

@return the Dirichlet's function
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/TukeyHannWindow.hpp';
  cp-fileline  = '68';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
TukeyHann windowing algorithm.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-inheritancegraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 939;
        node-label = 'tsa::BaseWindow';
        node-link = {
          node-link-id = 'classtsa_1_1_base_window';
        };
        node-child = {
          child-id = '940';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 938;
        node-label = 'tsa::TukeyHannWindow';
        node-link = {
          node-link-id = 'classtsa_1_1_tukey_hann_window';
        };
        node-child = {
          child-id = '939';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 940;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 942;
        node-label = 'tsa::BaseWindow';
        node-link = {
          node-link-id = 'classtsa_1_1_base_window';
        };
        node-child = {
          child-id = '943';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 941;
        node-label = 'tsa::TukeyHannWindow';
        node-link = {
          node-link-id = 'classtsa_1_1_tukey_hann_window';
        };
        node-child = {
          child-id = '942';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 943;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classtsa_1_1_tukey_window';
  cp-name   = 'tsa::TukeyWindow';
  cp-ref     = {
    ref-type = base;
    ref-id   = 'classtsa_1_1_base_window';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_tukey_window_1a89a3f0600e965141831da4dd53e2d9e6';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'TukeyWindow';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'size';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/TukeyWindow.hpp';
      sec-mem-desc-line = '85';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Constructor

@param size the size of the window
@param cached true if the window must be preevaluated in a buffer
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_tukey_window_1a4931ad836232c2620337127bade405d0';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'TukeyWindow';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'size';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const std::string &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'par';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/TukeyWindow.hpp';
      sec-mem-desc-line = '100';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_tukey_window_1afa847725559d456b9088f5b83023571e';
      sec-mem-virt = virtual;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
virtual
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '~TukeyWindow';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/TukeyWindow.hpp';
      sec-mem-desc-line = '118';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Destructor
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_tukey_window_1a9c44b527df2c303511322face00a5d33';
      sec-mem-virt = virtual;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'FillWindow';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/TukeyWindow.hpp';
      sec-mem-desc-line = '231';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Initialize the window with the correct values, given
its actual size. This is a pure virtual function, which 
is redefined by each window class.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_tukey_window_1a351edf4bf44bbbda5a7fc6dd629837a2';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mR';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/TukeyWindow.hpp';
      sec-mem-desc-line = '223';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/TukeyWindow.hpp';
  cp-fileline  = '76';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Tukey windowing algorithm
Harris, F. J. "On the Use of Windows for Harmonic Analysis with the Discrete Fourier Transform." 
Proceedings of the IEEE. Vol. 66 (January 1978). pp. 66-67.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-inheritancegraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 945;
        node-label = 'tsa::BaseWindow';
        node-link = {
          node-link-id = 'classtsa_1_1_base_window';
        };
        node-child = {
          child-id = '946';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 944;
        node-label = 'tsa::TukeyWindow';
        node-link = {
          node-link-id = 'classtsa_1_1_tukey_window';
        };
        node-child = {
          child-id = '945';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 946;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 948;
        node-label = 'tsa::BaseWindow';
        node-link = {
          node-link-id = 'classtsa_1_1_base_window';
        };
        node-child = {
          child-id = '949';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 947;
        node-label = 'tsa::TukeyWindow';
        node-link = {
          node-link-id = 'classtsa_1_1_tukey_window';
        };
        node-child = {
          child-id = '948';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 949;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classtsa_1_1_type_traits';
  cp-name   = 'tsa::TypeTraits';
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/tsaTraits.hpp';
  cp-fileline  = '71';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classtsa_1_1_type_traits_3_01double_01_4';
  cp-name   = 'tsa::TypeTraits< double >';
  cp-section = {
    sec-kind = 'public-static-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_type_traits_3_01double_01_4_1aafff3eab224af5ae3f4dea65aeb3f611';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
static double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'conj';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const double &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'x';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/tsaTraits.hpp';
      sec-mem-desc-line = '77';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_type_traits_3_01double_01_4_1aacaf66bc787883b8cd043fa65a77ab2b';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
static double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'real';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const double &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'x';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/tsaTraits.hpp';
      sec-mem-desc-line = '81';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_type_traits_3_01double_01_4_1a98ded872afb62012bd9595b1b032fb7e';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
static double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'imag';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const double &
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/tsaTraits.hpp';
      sec-mem-desc-line = '85';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_type_traits_3_01double_01_4_1aa10a603ba4edcfcb09985d7c7bc2fb78';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
static double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'abs';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const double &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'x';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/tsaTraits.hpp';
      sec-mem-desc-line = '89';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_type_traits_3_01double_01_4_1a4771ebd87b610400d5623f76dd58d7b3';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
static double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'abs2';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const double &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'x';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/tsaTraits.hpp';
      sec-mem-desc-line = '93';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_type_traits_3_01double_01_4_1a6488c1cb2f330e72537a488589197df6';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
static double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'phase';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const double &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'x';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/tsaTraits.hpp';
      sec-mem-desc-line = '97';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/tsaTraits.hpp';
  cp-fileline  = '74';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classtsa_1_1_type_traits_3_01std_1_1complex_3_01double_01_4_01_4';
  cp-name   = 'tsa::TypeTraits< std::complex< double > >';
  cp-section = {
    sec-kind = 'public-static-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_type_traits_3_01std_1_1complex_3_01double_01_4_01_4_1a9eced3592f7dafac90d6f7d6aa9bca66';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
static std::complex< double >
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'conj';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const std::complex< double > &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'x';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/tsaTraits.hpp';
      sec-mem-desc-line = '106';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_type_traits_3_01std_1_1complex_3_01double_01_4_01_4_1ab79705afcbcb0c504ecd924f57c1ed49';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
static double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'real';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const std::complex< double > &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'x';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/tsaTraits.hpp';
      sec-mem-desc-line = '110';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_type_traits_3_01std_1_1complex_3_01double_01_4_01_4_1a6bf03301824846b16d9927ab5d841ed4';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
static double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'imag';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const std::complex< double > &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'x';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/tsaTraits.hpp';
      sec-mem-desc-line = '114';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_type_traits_3_01std_1_1complex_3_01double_01_4_01_4_1ad25e2572dee56a68dde04217087b95ad';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
static double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'abs';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::complex< double >
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'x';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/tsaTraits.hpp';
      sec-mem-desc-line = '118';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_type_traits_3_01std_1_1complex_3_01double_01_4_01_4_1aff1b7714042e772177e6031c9df77e34';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
static double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'abs2';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const std::complex< double > &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'x';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/tsaTraits.hpp';
      sec-mem-desc-line = '122';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_type_traits_3_01std_1_1complex_3_01double_01_4_01_4_1ae96f4d0c1512efbf11bfb92907115431';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
static double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'phase';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const std::complex< double > &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'x';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/tsaTraits.hpp';
      sec-mem-desc-line = '126';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/tsaTraits.hpp';
  cp-fileline  = '103';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classtsa_1_1_upper_triangular';
  cp-name   = 'tsa::UpperTriangular';
  cp-section = {
    sec-kind = 'public-static-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_upper_triangular_1a5f1438749cd68c2d37bdab3746fdc89a';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
static unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Map';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'i';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'j';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'dim';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/tsaUtilityFunctions.hpp';
      sec-mem-desc-line = '196';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_upper_triangular_1ae7dd3b19c6587107501dcdda9276e581';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
static unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Size';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'dim';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/tsaUtilityFunctions.hpp';
      sec-mem-desc-line = '200';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_upper_triangular_1a66ef91ddaab559ac8caceae49df911d6';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
static unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Dimension';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'sz';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/tsaUtilityFunctions.hpp';
      sec-mem-desc-line = '204';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/tsaUtilityFunctions.hpp';
  cp-fileline  = '193';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classtsa_1_1_util';
  cp-name   = 'tsa::Util';
  cp-ref     = {
    ref-type = base;
    ref-id   = 'classtsa_1_1_algo_base';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_util_1a739335d45cc8262c48457f760844b57e';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Apply';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::complex< double >(*)(std::complex< double >)
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'func';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
SeqViewComplex &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'fs';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/Util.hpp';
      sec-mem-desc-line = '143';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_util_1af2b974e7bd7581f138b00db9640b3813';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Apply';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::complex< double >(*)(std::complex< double >)
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'func';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
SeqViewComplex &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'fs';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
SeqViewComplex &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'res';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/Util.hpp';
      sec-mem-desc-line = '155';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'public-static-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_util_1a16b9b14ed5803ca10e8497543d9a2d54';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
static void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Apply';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
double(*)(double)
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'func';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
SeqViewDouble &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'ts';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/Util.hpp';
      sec-mem-desc-line = '67';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_util_1af4136a5000f4168d4ba4db40c3aa2080';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
static void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Apply';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
double(*)(double)
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'func';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
SeqViewDouble &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'ts';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
SeqViewDouble &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'res';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/Util.hpp';
      sec-mem-desc-line = '79';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_util_1afbd158ce20afc089209fb7322ef13777';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
static void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'BinOp';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
double(*)(double, double)
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'func';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
SeqViewDouble &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'ts1';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
SeqViewDouble &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'ts2';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
SeqViewDouble &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'res';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/Util.hpp';
      sec-mem-desc-line = '96';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_util_1ad39a3bcca5699dfa0a9672f764f97805';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
static void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Norm';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
double(*)(double)
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'func';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
SeqViewDouble &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'ts1';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
SeqViewDouble &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'res';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/Util.hpp';
      sec-mem-desc-line = '118';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_util_1adf9b21b326aec4a49d09083d35eaca91';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
static void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Sum';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
SeqViewDouble &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'res';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'scale';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
SeqViewDouble &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'ts';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/Util.hpp';
      sec-mem-desc-line = '172';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/Util.hpp';
  cp-fileline  = '64';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-inheritancegraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 958;
        node-label = 'tsa::Util';
        node-link = {
          node-link-id = 'classtsa_1_1_util';
        };
        node-child = {
          child-id = '959';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 959;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 960;
        node-label = 'tsa::Util';
        node-link = {
          node-link-id = 'classtsa_1_1_util';
        };
        node-child = {
          child-id = '961';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 961;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classtsa_1_1_v_arma2_t_f';
  cp-name   = 'tsa::VArma2TF';
  cp-ref     = {
    ref-type = base;
    ref-id   = 'classtsa_1_1_algo_base';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_v_arma2_t_f_1a70dbd25e305c6dc002b56994e249fb7e';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'VArma2TF';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/VArma2TF.hpp';
      sec-mem-desc-line = '75';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Constructor
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_v_arma2_t_f_1acb49999f01a40c655b7a29aac47024fc';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'VArma2TF';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const VArma2TF &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'from';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/VArma2TF.hpp';
      sec-mem-desc-line = '82';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Copy constructor

@param from The instance that must be copied
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_v_arma2_t_f_1a04c81fb435781fe74cb6108f64761b0d';
      sec-mem-virt = virtual;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
virtual
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '~VArma2TF';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/VArma2TF.hpp';
      sec-mem-desc-line = '87';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Destructor
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_v_arma2_t_f_1a8e3f21b2a104259f2b27e5ea03bc500e';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
VArma2TF &
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'operator=';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const VArma2TF &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'from';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/VArma2TF.hpp';
      sec-mem-desc-line = '96';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Assignement operator

@param from The instance to be assigned from

@return a reference to a new object
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_v_arma2_t_f_1a140ef6079dc2bc152a9a8b220c278fd8';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
LUComplexSolve
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mLUsolver';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/VArma2TF.hpp';
      sec-mem-desc-line = '132';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/VArma2TF.hpp';
  cp-fileline  = '69';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Estimate the Transfer function using the ARMA parametrization.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-inheritancegraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 962;
        node-label = 'tsa::VArma2TF';
        node-link = {
          node-link-id = 'classtsa_1_1_v_arma2_t_f';
        };
        node-child = {
          child-id = '963';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 963;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 964;
        node-label = 'tsa::VArma2TF';
        node-link = {
          node-link-id = 'classtsa_1_1_v_arma2_t_f';
        };
        node-child = {
          child-id = '965';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 965;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classtsa_1_1_view_traits';
  cp-name   = 'tsa::ViewTraits';
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/tsaTraits.hpp';
  cp-fileline  = '67';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classtsa_1_1_view_util';
  cp-name   = 'tsa::ViewUtil';
  cp-ref     = {
    ref-type = base;
    ref-id   = 'classtsa_1_1_algo_base';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_view_util_1a13cb83b6780a27612d34d893272e72f9';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'ViewUtil';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ViewUtil.hpp';
      sec-mem-desc-line = '79';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Constructor
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_view_util_1a3c85be8329c8c4f7d60d8ba78b59b4e4';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = '~ViewUtil';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ViewUtil.hpp';
      sec-mem-desc-line = '85';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Destructor
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ViewUtil.hpp';
  cp-fileline  = '73';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
This is a short description of the class ViewUtil.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
A more detailed description of ViewUtil start here
_EnD_oF_dEf_TeXt_;
  cp-inheritancegraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 968;
        node-label = 'tsa::ViewUtil';
        node-link = {
          node-link-id = 'classtsa_1_1_view_util';
        };
        node-child = {
          child-id = '969';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 969;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 970;
        node-label = 'tsa::ViewUtil';
        node-link = {
          node-link-id = 'classtsa_1_1_view_util';
        };
        node-child = {
          child-id = '971';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 971;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classtsa_1_1_wavelet_threshold';
  cp-name   = 'tsa::WaveletThreshold';
  cp-section = {
    sec-kind = 'public-type';
    sec-member = {
      sec-mem-kind = 'enum';
      sec-mem-id   = 'classtsa_1_1_wavelet_threshold_1a50c42c95dae960986a985157ca038fae';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-name = 'WaveletThresholding';
      sec-mem-enum = { enum-name = highest; };
      sec-mem-enum = { enum-name = dohonojohnston; };
      sec-mem-enum = { enum-name = cuoco; };
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WaveletThreshold.hpp';
      sec-mem-desc-line = '80';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'enum';
      sec-mem-id   = 'classtsa_1_1_wavelet_threshold_1a93d14df024bbc8c3da182bf5899f8f83';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-name = 'ThresholdingMode';
      sec-mem-enum = { enum-name = hard; };
      sec-mem-enum = { enum-name = soft; };
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WaveletThreshold.hpp';
      sec-mem-desc-line = '86';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_wavelet_threshold_1a2815780145d4327729f21aa42eb08ddc';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'WaveletThreshold';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'N';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'ncoeff';
        sec-mem-param-defval = <<_EnD_oF_dEf_TeXt_
0
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'sigma';
        sec-mem-param-defval = <<_EnD_oF_dEf_TeXt_
1.0
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WaveletThreshold.hpp';
      sec-mem-desc-line = '93';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Constructor
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_wavelet_threshold_1a7a3219da0f0f814157c7a7c3d41a17cc';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = '~WaveletThreshold';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WaveletThreshold.hpp';
      sec-mem-desc-line = '97';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Destructor
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_wavelet_threshold_1a033b585f29f5e95f7e525e993569e781';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mAbsCoeff';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WaveletThreshold.hpp';
      sec-mem-desc-line = '155';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_wavelet_threshold_1a937714dbfda90649e89c445837bf7bd3';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
size_t *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mP';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WaveletThreshold.hpp';
      sec-mem-desc-line = '156';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_wavelet_threshold_1a8491f1b1b3679c964294a3b277513374';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
size_t *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mPAC';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WaveletThreshold.hpp';
      sec-mem-desc-line = '157';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_wavelet_threshold_1a85ce0caeabe9ca87f46e6a87df776262';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mOrd';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WaveletThreshold.hpp';
      sec-mem-desc-line = '158';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_wavelet_threshold_1a5ee193a15408f941545c28a04cd3f71f';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mN';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WaveletThreshold.hpp';
      sec-mem-desc-line = '159';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_wavelet_threshold_1a94759bf0bffb9f82c4544ace28d511ff';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mMedian';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WaveletThreshold.hpp';
      sec-mem-desc-line = '160';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_wavelet_threshold_1abce83133feca77b08cfc7efdb017e8ca';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mThresh';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WaveletThreshold.hpp';
      sec-mem-desc-line = '161';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_wavelet_threshold_1a1cde32dc32105b805047c8f59fa96057';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mNcoeff';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WaveletThreshold.hpp';
      sec-mem-desc-line = '162';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_wavelet_threshold_1a99b389ace8c9d6578e356b7a1c6855d9';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mSigma';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WaveletThreshold.hpp';
      sec-mem-desc-line = '163';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_wavelet_threshold_1af3141e33035206b95835c279a39393eb';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mlevel';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WaveletThreshold.hpp';
      sec-mem-desc-line = '164';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_wavelet_threshold_1afb847894dc69de8339ceb444bc8e1dca';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mC';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WaveletThreshold.hpp';
      sec-mem-desc-line = '165';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WaveletThreshold.hpp';
  cp-fileline  = '77';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Perform threshold on wavelet coefficients
_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classtsa_1_1_wavelet_transform';
  cp-name   = 'tsa::WaveletTransform';
  cp-ref     = {
    ref-type = base;
    ref-id   = 'classtsa_1_1_algo_base';
    ref-prot = private;
    ref-virt = non-virtual;
  };
  cp-section = {
    sec-kind = 'public-type';
    sec-member = {
      sec-mem-kind = 'enum';
      sec-mem-id   = 'classtsa_1_1_wavelet_transform_1a5a529de70e0004333fcf23b9cca88ce7';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-name = 'WaveletType';
      sec-mem-enum = { enum-name = Daub4; };
      sec-mem-enum = { enum-name = Daub6; };
      sec-mem-enum = { enum-name = Daub8; };
      sec-mem-enum = { enum-name = Daub10; };
      sec-mem-enum = { enum-name = Daub12; };
      sec-mem-enum = { enum-name = Daub14; };
      sec-mem-enum = { enum-name = Daub16; };
      sec-mem-enum = { enum-name = Daub18; };
      sec-mem-enum = { enum-name = Daub20; };
      sec-mem-enum = { enum-name = DaubC4; };
      sec-mem-enum = { enum-name = DaubC6; };
      sec-mem-enum = { enum-name = DaubC8; };
      sec-mem-enum = { enum-name = DaubC10; };
      sec-mem-enum = { enum-name = DaubC12; };
      sec-mem-enum = { enum-name = DaubC14; };
      sec-mem-enum = { enum-name = DaubC16; };
      sec-mem-enum = { enum-name = DaubC18; };
      sec-mem-enum = { enum-name = DaubC20; };
      sec-mem-enum = { enum-name = Haar; };
      sec-mem-enum = { enum-name = HaarC; };
      sec-mem-enum = { enum-name = Bspline103; };
      sec-mem-enum = { enum-name = Bspline105; };
      sec-mem-enum = { enum-name = Bspline202; };
      sec-mem-enum = { enum-name = Bspline204; };
      sec-mem-enum = { enum-name = Bspline206; };
      sec-mem-enum = { enum-name = Bspline208; };
      sec-mem-enum = { enum-name = Bspline301; };
      sec-mem-enum = { enum-name = Bspline303; };
      sec-mem-enum = { enum-name = Bspline305; };
      sec-mem-enum = { enum-name = Bspline307; };
      sec-mem-enum = { enum-name = Bspline309; };
      sec-mem-enum = { enum-name = BsplineC103; };
      sec-mem-enum = { enum-name = BsplineC105; };
      sec-mem-enum = { enum-name = BsplineC202; };
      sec-mem-enum = { enum-name = BsplineC204; };
      sec-mem-enum = { enum-name = BsplineC206; };
      sec-mem-enum = { enum-name = BsplineC208; };
      sec-mem-enum = { enum-name = BsplineC301; };
      sec-mem-enum = { enum-name = BsplineC303; };
      sec-mem-enum = { enum-name = BsplineC305; };
      sec-mem-enum = { enum-name = BsplineC307; };
      sec-mem-enum = { enum-name = BsplineC309; };
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WaveletTransform.hpp';
      sec-mem-desc-line = '78';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_wavelet_transform_1a311a12f22747485e6e3ecb0ede6143a7';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'WaveletTransform';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'N';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
enum WaveletType
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'wt';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WaveletTransform.hpp';
      sec-mem-desc-line = '126';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Constructor
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_wavelet_transform_1a1ce7211ad9ce11058575e94c15ca2c6e';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'WaveletTransform';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const WaveletTransform &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'from';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WaveletTransform.hpp';
      sec-mem-desc-line = '132';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Copy constructor

@param from The instance that must be copied  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_wavelet_transform_1a119186776e4cc28d80d5d8d72cf12a5a';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = '~WaveletTransform';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WaveletTransform.hpp';
      sec-mem-desc-line = '137';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Destructor
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_wavelet_transform_1af8ca4e2e5be0413ef4ed484d27e2ff8b';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
WaveletTransform &
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'operator=';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const WaveletTransform &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'from';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WaveletTransform.hpp';
      sec-mem-desc-line = '145';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Assignement operator

@param from The instance to be assigned from

@return a reference to a new object  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_wavelet_transform_1a5ee4ab685e354aafa0a1f617f0b624b4';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
gsl_wavelet *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mW';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WaveletTransform.hpp';
      sec-mem-desc-line = '193';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_wavelet_transform_1a0629db488589d2b7451746747456cee2';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
gsl_wavelet_workspace *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mWork';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WaveletTransform.hpp';
      sec-mem-desc-line = '194';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_wavelet_transform_1a8497adc5f0a85650a880992b3765f75a';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mN';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WaveletTransform.hpp';
      sec-mem-desc-line = '195';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Lenght of input data. It must be a power of 2.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WaveletTransform.hpp';
  cp-fileline  = '75';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Compute the wavelet transform
_EnD_oF_dEf_TeXt_;
  cp-inheritancegraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 975;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */
      node = {
        node-id    = 974;
        node-label = 'tsa::WaveletTransform';
        node-link = {
          node-link-id = 'classtsa_1_1_wavelet_transform';
        };
        node-child = {
          child-id = '975';
          relation = private-inheritance;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 977;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */
      node = {
        node-id    = 976;
        node-label = 'tsa::WaveletTransform';
        node-link = {
          node-link-id = 'classtsa_1_1_wavelet_transform';
        };
        node-child = {
          child-id = '977';
          relation = private-inheritance;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classtsa_1_1_wav_reconstruction';
  cp-name   = 'tsa::WavReconstruction';
  cp-ref     = {
    ref-type = base;
    ref-id   = 'classtsa_1_1_algo_base';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_wav_reconstruction_1a30e49dd92bc216fdc8a8411914bac3da';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'WavReconstruction';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'N';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
enum WaveletTransform::WaveletType
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'F';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'Th';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WavReconstruction.hpp';
      sec-mem-desc-line = '84';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Constructor
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_wav_reconstruction_1a98992576615196547b63822980a1c9d3';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = '~WavReconstruction';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WavReconstruction.hpp';
      sec-mem-desc-line = '90';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Destructor
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_wav_reconstruction_1af5a0010f467f436732548165315efeb0';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'operator()';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
SeqViewDouble &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'InputData';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WavReconstruction.hpp';
      sec-mem-desc-line = '93';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_wav_reconstruction_1a27b9eb7cb4914273f4551579aba645a6';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mN';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WavReconstruction.hpp';
      sec-mem-desc-line = '134';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_wav_reconstruction_1a12d1f32ebdce8967bc9faacc7be2bad2';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Dmatrix
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mBuff';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WavReconstruction.hpp';
      sec-mem-desc-line = '135';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_wav_reconstruction_1ad97d775e3186bf6b642526359fa88580';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
enum WaveletTransform::WaveletType
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mWt';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WavReconstruction.hpp';
      sec-mem-desc-line = '135';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_wav_reconstruction_1a23f1a718111dd2028f82b954e85115b6';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
WaveletTransform
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mWT';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WavReconstruction.hpp';
      sec-mem-desc-line = '137';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_wav_reconstruction_1a79826cf2c35973c054b45fa1e0e0a8f7';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
enum WaveletThreshold::WaveletThresholding
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mT';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WavReconstruction.hpp';
      sec-mem-desc-line = '137';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_wav_reconstruction_1a487dbe8b4e390594631931f6bf7c60db';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
WaveletThreshold
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mWavThres';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WavReconstruction.hpp';
      sec-mem-desc-line = '139';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WavReconstruction.hpp';
  cp-fileline  = '78';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Reconstructed the wavelet transformed signal.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
 A more detailed description of WavReconstruction
_EnD_oF_dEf_TeXt_;
  cp-inheritancegraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 978;
        node-label = 'tsa::WavReconstruction';
        node-link = {
          node-link-id = 'classtsa_1_1_wav_reconstruction';
        };
        node-child = {
          child-id = '979';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 979;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 982;
        node-label = 'tsa::WaveletThreshold';
        node-link = {
          node-link-id = 'classtsa_1_1_wavelet_threshold';
        };
      }; /* node */
      node = {
        node-id    = 980;
        node-label = 'tsa::WavReconstruction';
        node-link = {
          node-link-id = 'classtsa_1_1_wav_reconstruction';
        };
        node-child = {
          child-id = '981';
          relation = public-inheritance;
        }; /* node-child */
        node-child = {
          child-id = '982';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
mWavThres
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
        node-child = {
          child-id = '983';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
mWT
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 981;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */
      node = {
        node-id    = 983;
        node-label = 'tsa::WaveletTransform';
        node-link = {
          node-link-id = 'classtsa_1_1_wavelet_transform';
        };
        node-child = {
          child-id = '981';
          relation = private-inheritance;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classtsa_1_1_w_d_f2_classify';
  cp-name   = 'tsa::WDF2Classify';
  cp-ref     = {
    ref-type = base;
    ref-id   = 'classtsa_1_1_algo_base';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_w_d_f2_classify_1a1149d3b3364891a001ed37a78a085932';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'WDF2Classify';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'window';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'overlap';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'thresh';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'sigma';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'ncoeff';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
enum WaveletThreshold::WaveletThresholding
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'WTh';
        sec-mem-param-defval = <<_EnD_oF_dEf_TeXt_
WaveletThreshold::cuoco
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WDF2Classify.hpp';
      sec-mem-desc-line = '91';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Constructor
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_w_d_f2_classify_1aca93650a5449192353412584c67102eb';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = '~WDF2Classify';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WDF2Classify.hpp';
      sec-mem-desc-line = '97';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Destructor
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_w_d_f2_classify_1ad43aff1c0e620adc555fe8330dc2fc87';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mWindow';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WDF2Classify.hpp';
      sec-mem-desc-line = '212';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_w_d_f2_classify_1a0fe8b454c89c103dbcc43b97c028a6e6';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mOverlap';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WDF2Classify.hpp';
      sec-mem-desc-line = '213';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_w_d_f2_classify_1ae3c2eb273280319045076acf41ace9ff';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mStep';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WDF2Classify.hpp';
      sec-mem-desc-line = '214';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_w_d_f2_classify_1aaadd89368b07c41bfe272600eacabf0d';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mNCoeff';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WDF2Classify.hpp';
      sec-mem-desc-line = '215';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_w_d_f2_classify_1a8d229f13b7b5fec695785f644eafffb8';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mThresh';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WDF2Classify.hpp';
      sec-mem-desc-line = '216';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_w_d_f2_classify_1a0f73327c9983554d190029fa532d20dd';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mSigma';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WDF2Classify.hpp';
      sec-mem-desc-line = '217';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_w_d_f2_classify_1a0fd805367fac9aac89e1cc6d7157921f';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mSigmaH';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WDF2Classify.hpp';
      sec-mem-desc-line = '218';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_w_d_f2_classify_1a78835e7f67c9dd1179ce65f0a287f8c3';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mSigma4';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WDF2Classify.hpp';
      sec-mem-desc-line = '219';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_w_d_f2_classify_1a35b02c94d5db7b334d12449699bbe08c';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mSigmaC8';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WDF2Classify.hpp';
      sec-mem-desc-line = '220';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_w_d_f2_classify_1a1a127de2a534323cf00e5dcd981094c6';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mSigma10';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WDF2Classify.hpp';
      sec-mem-desc-line = '221';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_w_d_f2_classify_1ae883c682179f3dcbd09627cf70eb7b13';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mSigma12';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WDF2Classify.hpp';
      sec-mem-desc-line = '222';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_w_d_f2_classify_1a4048cccdaaebf02c10d35cb3e9a4171e';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mSigmaC16';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WDF2Classify.hpp';
      sec-mem-desc-line = '223';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_w_d_f2_classify_1a55e158a86a9860d186ed02a3785ecfe1';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mSigma20';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WDF2Classify.hpp';
      sec-mem-desc-line = '224';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_w_d_f2_classify_1a9a03a8cb74146c9bdc2fa83d14f2ed9e';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mSigmaC20';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WDF2Classify.hpp';
      sec-mem-desc-line = '225';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_w_d_f2_classify_1a0d00e5f6ad0ad0a5c705501ef4a9d143';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mSigmaBsC206';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WDF2Classify.hpp';
      sec-mem-desc-line = '226';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_w_d_f2_classify_1a5ebaed77b5148f9a34c269bc92c676d4';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mSigmaBsC103';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WDF2Classify.hpp';
      sec-mem-desc-line = '227';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_w_d_f2_classify_1a2ec13dd4aa8e12b1d26b16067c7028b1';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mSigmaBsC309';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WDF2Classify.hpp';
      sec-mem-desc-line = '228';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_w_d_f2_classify_1a9df97d5cf9e81798c79e92e47c9aac2e';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mSigmaDCT';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WDF2Classify.hpp';
      sec-mem-desc-line = '229';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_w_d_f2_classify_1abbaaaa7ad220ba5b3a2bb63b7294a113';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
FifoBuffer
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mBuffer';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WDF2Classify.hpp';
      sec-mem-desc-line = '230';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_w_d_f2_classify_1a7f025cb0556b8e15d16889c741431caf';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mStartTime';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WDF2Classify.hpp';
      sec-mem-desc-line = '232';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_w_d_f2_classify_1ac56cfaa6f0a904d5f15e916c3646ddfc';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mSampling';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WDF2Classify.hpp';
      sec-mem-desc-line = '233';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_w_d_f2_classify_1a0fec828c6f0668c1e7df1adb72e36f75';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Dmatrix
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mBuff';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WDF2Classify.hpp';
      sec-mem-desc-line = '234';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_w_d_f2_classify_1aeb84c3ffdea9f78af3d4f83461f806ab';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
EventFullFeatured
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mEvFF';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WDF2Classify.hpp';
      sec-mem-desc-line = '235';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_w_d_f2_classify_1af6eb80034fbf746a2b9518345616407e';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
enum WaveletTransform::WaveletType
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mWtH';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WDF2Classify.hpp';
      sec-mem-desc-line = '235';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_w_d_f2_classify_1a57dc2b30913652447a8abd4c1ac7fb0f';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
WaveletTransform
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mWTH';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WDF2Classify.hpp';
      sec-mem-desc-line = '238';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_w_d_f2_classify_1a209bba3065cf607d1ecc47d4d599d139';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
enum WaveletTransform::WaveletType
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mWt4';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WDF2Classify.hpp';
      sec-mem-desc-line = '238';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_w_d_f2_classify_1acb6943d4b183f37e6a6f236d7d6c2484';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
WaveletTransform
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mWT4';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WDF2Classify.hpp';
      sec-mem-desc-line = '240';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_w_d_f2_classify_1a3a1938c2a75205c988fc0b199d248b05';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
enum WaveletTransform::WaveletType
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mWtC8';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WDF2Classify.hpp';
      sec-mem-desc-line = '240';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_w_d_f2_classify_1acdb5794a62be9190bf8e495b13b6a79f';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
WaveletTransform
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mWTC8';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WDF2Classify.hpp';
      sec-mem-desc-line = '242';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_w_d_f2_classify_1a17b190834294293f935a8ff2baf96a2f';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
enum WaveletTransform::WaveletType
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mWt10';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WDF2Classify.hpp';
      sec-mem-desc-line = '242';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_w_d_f2_classify_1a76e2e8df164b04fd2cfdde2b7c757d8b';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
WaveletTransform
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mWT10';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WDF2Classify.hpp';
      sec-mem-desc-line = '244';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_w_d_f2_classify_1a680bfb1cce916b4f0c8dde32c9b5ba56';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
enum WaveletTransform::WaveletType
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mWt12';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WDF2Classify.hpp';
      sec-mem-desc-line = '244';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_w_d_f2_classify_1ac8e6dc4957dfa6f59ff7ccc29f2ce43d';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
WaveletTransform
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mWT12';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WDF2Classify.hpp';
      sec-mem-desc-line = '246';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_w_d_f2_classify_1a86fd375260ff0a37e35a907faef1aece';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
enum WaveletTransform::WaveletType
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mWtC16';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WDF2Classify.hpp';
      sec-mem-desc-line = '246';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_w_d_f2_classify_1af835a72fb26db49ef93cbd021f8e4bdb';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
WaveletTransform
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mWTC16';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WDF2Classify.hpp';
      sec-mem-desc-line = '248';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_w_d_f2_classify_1a1d1fd6a041771fb798fedf0a5cf93c0e';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
enum WaveletTransform::WaveletType
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mWt20';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WDF2Classify.hpp';
      sec-mem-desc-line = '248';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_w_d_f2_classify_1a1d63a00182c81bacff1db01478515ed4';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
WaveletTransform
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mWT20';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WDF2Classify.hpp';
      sec-mem-desc-line = '250';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_w_d_f2_classify_1ad6da16716d8395a4f1369617e21de922';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
enum WaveletTransform::WaveletType
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mWtC20';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WDF2Classify.hpp';
      sec-mem-desc-line = '250';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_w_d_f2_classify_1a89d405377ab84a4b331c426e62e547f2';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
WaveletTransform
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mWTC20';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WDF2Classify.hpp';
      sec-mem-desc-line = '252';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_w_d_f2_classify_1a65eb9f16c9a193b616dbb61a14e2ffa3';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
enum WaveletTransform::WaveletType
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mWtBsC206';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WDF2Classify.hpp';
      sec-mem-desc-line = '252';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_w_d_f2_classify_1a1749a1dfb97e35df3a0eb81888e3d08a';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
WaveletTransform
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mWTBsC206';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WDF2Classify.hpp';
      sec-mem-desc-line = '254';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_w_d_f2_classify_1ae58565c51462fa2453ae29550e9a1067';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
enum WaveletTransform::WaveletType
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mWtBsC103';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WDF2Classify.hpp';
      sec-mem-desc-line = '254';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_w_d_f2_classify_1a6727f3e9350844a3f58ecb547c5ee43e';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
WaveletTransform
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mWTBsC103';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WDF2Classify.hpp';
      sec-mem-desc-line = '256';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_w_d_f2_classify_1af2358ebcb57c3f4403aa18e42749cf9b';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
enum WaveletTransform::WaveletType
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mWtBsC309';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WDF2Classify.hpp';
      sec-mem-desc-line = '256';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_w_d_f2_classify_1a8edb800d43b0ca29226cce44e71e0b29';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
WaveletTransform
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mWTBsC309';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WDF2Classify.hpp';
      sec-mem-desc-line = '258';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_w_d_f2_classify_1a58dda0f0890a77d38d1850bf8fc52e47';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
enum WaveletThreshold::WaveletThresholding
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mT';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WDF2Classify.hpp';
      sec-mem-desc-line = '258';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_w_d_f2_classify_1a9ad2280ce3bf48639f2a2a8dfea91d75';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
WaveletThreshold
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mWavThres';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WDF2Classify.hpp';
      sec-mem-desc-line = '260';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_w_d_f2_classify_1af4b2e7e38686958add4de8e6d9ad00f0';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
DCT
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mDct';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WDF2Classify.hpp';
      sec-mem-desc-line = '261';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_w_d_f2_classify_1a2a01ab9900e2ebecce3102e2a3f108b5';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Dmatrix
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mBuffDct';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WDF2Classify.hpp';
      sec-mem-desc-line = '262';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_w_d_f2_classify_1a3bc01eda0b34064bfc9157a1ff708391';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Cs2HammingWindow
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mWindowing';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WDF2Classify.hpp';
      sec-mem-desc-line = '263';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WDF2Classify.hpp';
  cp-fileline  = '85';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Time domain detection of transients based on wavelet transform.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-inheritancegraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 984;
        node-label = 'tsa::WDF2Classify';
        node-link = {
          node-link-id = 'classtsa_1_1_w_d_f2_classify';
        };
        node-child = {
          child-id = '985';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 985;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 991;
        node-label = 'tsa::WaveletThreshold';
        node-link = {
          node-link-id = 'classtsa_1_1_wavelet_threshold';
        };
      }; /* node */
      node = {
        node-id    = 989;
        node-label = 'tsa::DCT';
        node-link = {
          node-link-id = 'classtsa_1_1_d_c_t';
        };
        node-child = {
          child-id = '990';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 994;
        node-label = 'tsa::BaseWindow';
        node-link = {
          node-link-id = 'classtsa_1_1_base_window';
        };
        node-child = {
          child-id = '987';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 988;
        node-label = 'tsa::FifoBuffer';
        node-link = {
          node-link-id = 'classtsa_1_1_fifo_buffer';
        };
      }; /* node */
      node = {
        node-id    = 992;
        node-label = 'tsa::EventFullFeatured';
        node-link = {
          node-link-id = 'classtsa_1_1_event_full_featured';
        };
      }; /* node */
      node = {
        node-id    = 986;
        node-label = 'tsa::WDF2Classify';
        node-link = {
          node-link-id = 'classtsa_1_1_w_d_f2_classify';
        };
        node-child = {
          child-id = '987';
          relation = public-inheritance;
        }; /* node-child */
        node-child = {
          child-id = '988';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
mBuffer
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
        node-child = {
          child-id = '989';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
mDct
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
        node-child = {
          child-id = '991';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
mWavThres
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
        node-child = {
          child-id = '992';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
mEvFF
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
        node-child = {
          child-id = '993';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
mWindowing
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
        node-child = {
          child-id = '995';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
mWTC16
mWTH
mWT20
mWTBsC309
mWTBsC206
mWT10
mWT12
mWTC20
mWTC8
mWT4
...
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 990;
        node-label = 'tsa::BaseFFT';
        node-link = {
          node-link-id = 'classtsa_1_1_base_f_f_t';
        };
        node-child = {
          child-id = '987';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 987;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */
      node = {
        node-id    = 995;
        node-label = 'tsa::WaveletTransform';
        node-link = {
          node-link-id = 'classtsa_1_1_wavelet_transform';
        };
        node-child = {
          child-id = '987';
          relation = private-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 993;
        node-label = 'tsa::Cs2HammingWindow';
        node-link = {
          node-link-id = 'classtsa_1_1_cs2_hamming_window';
        };
        node-child = {
          child-id = '994';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classtsa_1_1_w_d_f2_reconstruct';
  cp-name   = 'tsa::WDF2Reconstruct';
  cp-ref     = {
    ref-type = base;
    ref-id   = 'classtsa_1_1_algo_base';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_w_d_f2_reconstruct_1adfa6c8b28248983673226fd3617b553d';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'WDF2Reconstruct';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'window';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'overlap';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'thresh';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'sigma';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'ncoeff';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
enum WaveletThreshold::WaveletThresholding
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'WTh';
        sec-mem-param-defval = <<_EnD_oF_dEf_TeXt_
WaveletThreshold::cuoco
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WDF2Reconstruct.hpp';
      sec-mem-desc-line = '90';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Constructor
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_w_d_f2_reconstruct_1a0f5a941f09423254ceaff5d60365d894';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = '~WDF2Reconstruct';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WDF2Reconstruct.hpp';
      sec-mem-desc-line = '96';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Destructor
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_w_d_f2_reconstruct_1a97572713b59f4cc16d3ac49e459383f9';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mWindow';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WDF2Reconstruct.hpp';
      sec-mem-desc-line = '211';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_w_d_f2_reconstruct_1a07d67a2edb1226a9fe59ad22c1de6ed0';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mOverlap';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WDF2Reconstruct.hpp';
      sec-mem-desc-line = '212';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_w_d_f2_reconstruct_1aa8a8e91d9a534af546624733364a2980';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mStep';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WDF2Reconstruct.hpp';
      sec-mem-desc-line = '213';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_w_d_f2_reconstruct_1a36c49edf04b207715deed1029e67f660';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mNCoeff';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WDF2Reconstruct.hpp';
      sec-mem-desc-line = '214';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_w_d_f2_reconstruct_1a3c8f4a6b926cbf3954528beddb924c82';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mThresh';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WDF2Reconstruct.hpp';
      sec-mem-desc-line = '215';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_w_d_f2_reconstruct_1a72591dca797b6437ece8fedaab01780d';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mSigma';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WDF2Reconstruct.hpp';
      sec-mem-desc-line = '216';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_w_d_f2_reconstruct_1aca130a979033ef5580368a4d5b86e96b';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mSigmaH';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WDF2Reconstruct.hpp';
      sec-mem-desc-line = '217';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_w_d_f2_reconstruct_1afe74f7265462b0999a81a46406e936b1';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mSigmaBsC309';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WDF2Reconstruct.hpp';
      sec-mem-desc-line = '218';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_w_d_f2_reconstruct_1aebba7cbb7525432c73a7820db5decd6d';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
FifoBuffer
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mBuffer';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WDF2Reconstruct.hpp';
      sec-mem-desc-line = '219';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_w_d_f2_reconstruct_1a64e24fd8947b0a8e0c49163203a32b99';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mStartTime';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WDF2Reconstruct.hpp';
      sec-mem-desc-line = '221';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_w_d_f2_reconstruct_1af0f0480296cff77e3e87decb61b37347';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mSampling';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WDF2Reconstruct.hpp';
      sec-mem-desc-line = '222';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_w_d_f2_reconstruct_1a08fb7c45a063d9143cd616e4d20e06da';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Dmatrix
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mBuff';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WDF2Reconstruct.hpp';
      sec-mem-desc-line = '223';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_w_d_f2_reconstruct_1ac875897ba2a68b32a8fc5bb5943be1db';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
EventFullFeatured
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mEvFF';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WDF2Reconstruct.hpp';
      sec-mem-desc-line = '224';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_w_d_f2_reconstruct_1a4950183a20397f47d014e1abc9271f78';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
enum WaveletTransform::WaveletType
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mWtH';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WDF2Reconstruct.hpp';
      sec-mem-desc-line = '224';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_w_d_f2_reconstruct_1af77219bc01d5cb4f609484186cbae5ad';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
WaveletTransform
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mWTH';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WDF2Reconstruct.hpp';
      sec-mem-desc-line = '227';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_w_d_f2_reconstruct_1a519de0df835b67a827d294e3b7f81f2c';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
enum WaveletTransform::WaveletType
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mWtBsC309';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WDF2Reconstruct.hpp';
      sec-mem-desc-line = '227';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_w_d_f2_reconstruct_1aa1285fe7b4f8823822f615c7b3c2fc96';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
WaveletTransform
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mWTBsC309';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WDF2Reconstruct.hpp';
      sec-mem-desc-line = '229';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_w_d_f2_reconstruct_1ae36f218c387d68609cbeb6301061d2c6';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
enum WaveletThreshold::WaveletThresholding
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mT';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WDF2Reconstruct.hpp';
      sec-mem-desc-line = '229';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_w_d_f2_reconstruct_1a529018ba087a57db45f9aa578c3b4cb0';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
WaveletThreshold
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mWavThres';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WDF2Reconstruct.hpp';
      sec-mem-desc-line = '231';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classtsa_1_1_w_d_f2_reconstruct_1a761d1ab7e8909495fb393fab825535a0';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Cs2HammingWindow
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mWindowing';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WDF2Reconstruct.hpp';
      sec-mem-desc-line = '232';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WDF2Reconstruct.hpp';
  cp-fileline  = '84';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Time domain detection of transients based on wavelet transform.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-inheritancegraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 996;
        node-label = 'tsa::WDF2Reconstruct';
        node-link = {
          node-link-id = 'classtsa_1_1_w_d_f2_reconstruct';
        };
        node-child = {
          child-id = '997';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 997;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 1001;
        node-label = 'tsa::WaveletThreshold';
        node-link = {
          node-link-id = 'classtsa_1_1_wavelet_threshold';
        };
      }; /* node */
      node = {
        node-id    = 1004;
        node-label = 'tsa::BaseWindow';
        node-link = {
          node-link-id = 'classtsa_1_1_base_window';
        };
        node-child = {
          child-id = '999';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 1000;
        node-label = 'tsa::FifoBuffer';
        node-link = {
          node-link-id = 'classtsa_1_1_fifo_buffer';
        };
      }; /* node */
      node = {
        node-id    = 1002;
        node-label = 'tsa::EventFullFeatured';
        node-link = {
          node-link-id = 'classtsa_1_1_event_full_featured';
        };
      }; /* node */
      node = {
        node-id    = 998;
        node-label = 'tsa::WDF2Reconstruct';
        node-link = {
          node-link-id = 'classtsa_1_1_w_d_f2_reconstruct';
        };
        node-child = {
          child-id = '999';
          relation = public-inheritance;
        }; /* node-child */
        node-child = {
          child-id = '1000';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
mBuffer
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
        node-child = {
          child-id = '1001';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
mWavThres
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
        node-child = {
          child-id = '1002';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
mEvFF
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
        node-child = {
          child-id = '1003';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
mWindowing
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
        node-child = {
          child-id = '1005';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
mWTH
mWTBsC309
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 999;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */
      node = {
        node-id    = 1005;
        node-label = 'tsa::WaveletTransform';
        node-link = {
          node-link-id = 'classtsa_1_1_wavelet_transform';
        };
        node-child = {
          child-id = '999';
          relation = private-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 1003;
        node-label = 'tsa::Cs2HammingWindow';
        node-link = {
          node-link-id = 'classtsa_1_1_cs2_hamming_window';
        };
        node-child = {
          child-id = '1004';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classtsa_1_1_welch_window';
  cp-name   = 'tsa::WelchWindow';
  cp-ref     = {
    ref-type = base;
    ref-id   = 'classtsa_1_1_base_window';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_welch_window_1a81dc23dff14e460bd12c738ac8d92f5e';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'WelchWindow';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'size';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WelchWindow.hpp';
      sec-mem-desc-line = '78';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Constructor

@param size the size of the window
@param cached true if the window must be preevaluated in a buffer
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_welch_window_1a2ca3b163864f922f0c31196a772e6d03';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'WelchWindow';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'size';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const std::string &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'p';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WelchWindow.hpp';
      sec-mem-desc-line = '89';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_welch_window_1a19fa30d5b4d564780e748464e0bcc245';
      sec-mem-virt = virtual;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
virtual
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '~WelchWindow';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WelchWindow.hpp';
      sec-mem-desc-line = '104';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Destructor
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classtsa_1_1_welch_window_1aa5dd01231aa4a33fb43473209a679309';
      sec-mem-virt = virtual;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'FillWindow';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WelchWindow.hpp';
      sec-mem-desc-line = '207';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Initialize the window with the correct values, given
its actual size. This is a pure virtual function, which 
is redefined by each window class.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WelchWindow.hpp';
  cp-fileline  = '69';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Welch windowing algorithm.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-inheritancegraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 1006;
        node-label = 'tsa::WelchWindow';
        node-link = {
          node-link-id = 'classtsa_1_1_welch_window';
        };
        node-child = {
          child-id = '1007';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 1007;
        node-label = 'tsa::BaseWindow';
        node-link = {
          node-link-id = 'classtsa_1_1_base_window';
        };
        node-child = {
          child-id = '1008';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 1008;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 1009;
        node-label = 'tsa::WelchWindow';
        node-link = {
          node-link-id = 'classtsa_1_1_welch_window';
        };
        node-child = {
          child-id = '1010';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 1010;
        node-label = 'tsa::BaseWindow';
        node-link = {
          node-link-id = 'classtsa_1_1_base_window';
        };
        node-child = {
          child-id = '1011';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 1011;
        node-label = 'tsa::AlgoBase';
        node-link = {
          node-link-id = 'classtsa_1_1_algo_base';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classeternity_1_1xml__archive';
  cp-name   = 'eternity::xml_archive';
  cp-ref     = {
    ref-type = base;
    ref-id   = 'classeternity_1_1archive';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classeternity_1_1xml__archive_1a51f29738b694efdf35486b8d6146f7c8';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'xml_archive';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist_xml.hpp';
      sec-mem-desc-line = '42';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classeternity_1_1xml__archive_1aed17710a8c15f35f9296d8805299f619';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = '~xml_archive';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist_xml.hpp';
      sec-mem-desc-line = '46';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classeternity_1_1xml__archive_1acd5ef97a7b6a113e64e735270634bea1';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'open';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'file_name';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
opening_mode
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'mode';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist_xml.hpp';
      sec-mem-desc-line = '55';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
      initialize and XML archive using the file
named file_name. If mode is load create
the file. Anyway init update archive to
begin persistence operations.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classeternity_1_1xml__archive_1a27ed416689f3c9da532fcb91eed88217';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'init';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'file_name';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'loading';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist_xml.hpp';
      sec-mem-desc-line = '63';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
      initialize and XML archive using the file
named file_name. If loading is true create
the file. Anyway init update archive to
begin persistence operations.
    Deprecated: use open instead
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classeternity_1_1xml__archive_1a9f27feeac62aa0c3370ef9bcc60d86c6';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'close';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist_xml.hpp';
      sec-mem-desc-line = '68';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
      End the persistence operation, release the file
handle and clear all allocated buffers.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classeternity_1_1xml__archive_1a946e60b3bd83fc8cf65d740b4ebf63e0';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'done';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist_xml.hpp';
      sec-mem-desc-line = '76';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
      End the persistence operation, release the file
handle and clear all allocated buffers.
    Deprecated: use close instead
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classeternity_1_1xml__archive_1a53816e7723e949920db15981b91fc3c1';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'formatting';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist_xml.hpp';
      sec-mem-desc-line = '95';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Indent XML output for nested class persistence.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classeternity_1_1xml__archive_1a2e0b9a16f4b02b391967718f18175fc2';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'read';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'key';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'pos';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist_xml.hpp';
      sec-mem-desc-line = '99';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
read (and return) a string with label key at position pos
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
read (and return) a string with label key at position pos
deprecated, use read(std::string key, std::string &value, int pos) instead  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classeternity_1_1xml__archive_1ac8267a952c5c9a6caa8b434f80d1b9d2';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'read';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'key';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::string &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'value';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'pos';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist_xml.hpp';
      sec-mem-desc-line = '102';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
read (and put in value) a string with label key at position pos
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classeternity_1_1xml__archive_1adbfbeeb5a86ecf4bfccdba1054d9c50a';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'read';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'key';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'value';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'pos';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist_xml.hpp';
      sec-mem-desc-line = '105';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
read (and put in value) a int with label key at position pos
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classeternity_1_1xml__archive_1ab38c114af01eaffade2ab426f73a5575';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'read';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'key';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'value';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'pos';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist_xml.hpp';
      sec-mem-desc-line = '108';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
read (and put in value) a int with label key at position pos
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classeternity_1_1xml__archive_1a7b72b8361778f9a98bed64e9d23a760d';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'read';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'key';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
float &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'value';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'pos';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist_xml.hpp';
      sec-mem-desc-line = '111';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
read (and put in value) a float with label key at position pos
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classeternity_1_1xml__archive_1a83705b3ef651a402e886d73f288800ef';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'read';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'key';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
double &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'value';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'pos';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist_xml.hpp';
      sec-mem-desc-line = '114';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
read (and put in value) a double with label key at position pos
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classeternity_1_1xml__archive_1ab64fb09677fff76fb2935930f73365a6';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'write';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'key';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
T
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'value';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist_xml.hpp';
      sec-mem-desc-line = '118';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
write the content of value
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classeternity_1_1xml__archive_1abc5b89e39007323cefb8855492795631';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
t *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'get_object';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'key';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
t **
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'ppObj';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'pos';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist_xml.hpp';
      sec-mem-desc-line = '121';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Retreive an object pointer from the XMLarchive.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classeternity_1_1xml__archive_1af471f4a154095b98cf33dacd984281df';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
t *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'put_object';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'key';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
t *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'pObj';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist_xml.hpp';
      sec-mem-desc-line = '124';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Put an object pointer inside XMLarchive.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classeternity_1_1xml__archive_1a8b43bda52a9429f6b4d6e4501f42fe60';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'get_stack_object';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'key';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
t &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'Obj';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'pos';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist_xml.hpp';
      sec-mem-desc-line = '127';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Retreive an object allocated to the stack from the XMLarchive.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classeternity_1_1xml__archive_1aac3817831029d6b510aead5978aac61e';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'put_stack_object';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'key';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
t &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'Obj';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist_xml.hpp';
      sec-mem-desc-line = '130';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Put an object allocated in the stack inside XMLarchive.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classeternity_1_1xml__archive_1afe1ed2f449872273acc2ca8753d4057d';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'make_branch';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'name';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::map< std::string, std::string >
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'attributes';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist_xml.hpp';
      sec-mem-desc-line = '133';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Create a node (e.g. <name attributes>) and set it as current one (enter branch)
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classeternity_1_1xml__archive_1a58b5909bfe2c5aba094633f5f38f850a';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::map< std::string, std::string >
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'enter_branch';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'name';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
size_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'pos';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist_xml.hpp';
      sec-mem-desc-line = '136';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Enter in the node with tag equals to name and return its attributes.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classeternity_1_1xml__archive_1ae15514bf5e058364d30faac3553e201b';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'leave_current_branch';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist_xml.hpp';
      sec-mem-desc-line = '139';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Leaves current node and returns to its parent.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'protected-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classeternity_1_1xml__archive_1a58de0ad659427698ef66be97b220b541';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
xml_scanner
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'm_oParser';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist_xml.hpp';
      sec-mem-desc-line = '142';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classeternity_1_1xml__archive_1af41ae6859a9ff2e6ec10e3a5e283d463';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::ofstream
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'm_oOut';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist_xml.hpp';
      sec-mem-desc-line = '143';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classeternity_1_1xml__archive_1ad41bc7c410f309e3036987f6ff93d34f';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
size_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'm_nTab';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist_xml.hpp';
      sec-mem-desc-line = '144';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classeternity_1_1xml__archive_1a5b0cb5a429e2b76d4b11bfccc7b91d8d';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
node *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'm_pCurElement';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist_xml.hpp';
      sec-mem-desc-line = '145';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classeternity_1_1xml__archive_1a6a1cf4a481b75dd3c3688e1c0ae6e2bb';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
deque< node * >
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'm_dBranches';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist_xml.hpp';
      sec-mem-desc-line = '146';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist_xml.hpp';
  cp-fileline  = '39';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
xml_archive is the specialization of class archive able
to manage XML persistence.
_EnD_oF_dEf_TeXt_;
  cp-inheritancegraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 1013;
        node-label = 'eternity::archive';
        node-link = {
          node-link-id = 'classeternity_1_1archive';
        };
      }; /* node */
      node = {
        node-id    = 1012;
        node-label = 'eternity::xml_archive';
        node-link = {
          node-link-id = 'classeternity_1_1xml__archive';
        };
        node-child = {
          child-id = '1013';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 1017;
        node-label = 'eternity::xml_scanner';
        node-link = {
          node-link-id = 'classeternity_1_1xml__scanner';
        };
        node-child = {
          child-id = '1016';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
rootnode
currnode
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 1016;
        node-label = 'eternity::node';
        node-link = {
          node-link-id = 'classeternity_1_1node';
        };
        node-child = {
          child-id = '1016';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
parent
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 1015;
        node-label = 'eternity::archive';
        node-link = {
          node-link-id = 'classeternity_1_1archive';
        };
      }; /* node */
      node = {
        node-id    = 1014;
        node-label = 'eternity::xml_archive';
        node-link = {
          node-link-id = 'classeternity_1_1xml__archive';
        };
        node-child = {
          child-id = '1015';
          relation = public-inheritance;
        }; /* node-child */
        node-child = {
          child-id = '1016';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
m_pCurElement
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
        node-child = {
          child-id = '1017';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
m_oParser
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classeternity_1_1xml__scanner';
  cp-name   = 'eternity::xml_scanner';
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classeternity_1_1xml__scanner_1aada242623cfe6db20f8c37a8e8f65860';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'xml_scanner';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/xmlscanner.hpp';
      sec-mem-desc-line = '72';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classeternity_1_1xml__scanner_1a32ad22476378295dddbc6e6632087111';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = '~xml_scanner';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/xmlscanner.hpp';
      sec-mem-desc-line = '73';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classeternity_1_1xml__scanner_1a7ea884c9c01bd7efe14c49c341b07757';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'close';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/xmlscanner.hpp';
      sec-mem-desc-line = '75';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
close the archive file and release memory used.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classeternity_1_1xml__scanner_1adacdcc2fe2a312411ac59ed6760d9c83';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
node *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'scan_file';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'filePath';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/xmlscanner.hpp';
      sec-mem-desc-line = '76';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'protected-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classeternity_1_1xml__scanner_1a30953343be7681f13754b7ca239a1731';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
char
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'read_next_char';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/xmlscanner.hpp';
      sec-mem-desc-line = '79';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classeternity_1_1xml__scanner_1a2c83fb7bc8a7208e18abde0af1e9f8dd';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
char
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'read_next_non_space_char';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/xmlscanner.hpp';
      sec-mem-desc-line = '80';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classeternity_1_1xml__scanner_1a036421e922b108f4f5830693ef29f7a1';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'read_literal';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/xmlscanner.hpp';
      sec-mem-desc-line = '81';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classeternity_1_1xml__scanner_1a9bfbec818a6e30a441a46ffc34faff52';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'read_word';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/xmlscanner.hpp';
      sec-mem-desc-line = '82';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classeternity_1_1xml__scanner_1a660fac686fecd6778777d5b3e3ec0f99';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'read_value';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/xmlscanner.hpp';
      sec-mem-desc-line = '83';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classeternity_1_1xml__scanner_1a7394e05ca6c942057a24dcd2ce227931';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'read_tag_name';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/xmlscanner.hpp';
      sec-mem-desc-line = '84';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classeternity_1_1xml__scanner_1a1e29dfbc46de1741707e9e63dffaee25';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'read_close_tag';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/xmlscanner.hpp';
      sec-mem-desc-line = '85';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classeternity_1_1xml__scanner_1aed55ba6dede7eae6e069a423e2accc4e';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'read_attributes';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/xmlscanner.hpp';
      sec-mem-desc-line = '86';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classeternity_1_1xml__scanner_1a06510f110112a2b808c9f79136e1c11b';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'read_attribute_value';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/xmlscanner.hpp';
      sec-mem-desc-line = '87';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classeternity_1_1xml__scanner_1a360c38ea21cf8abad35a91e812658edf';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'close_bracket';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/xmlscanner.hpp';
      sec-mem-desc-line = '88';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classeternity_1_1xml__scanner_1a0f8d1cdba0e72846f8dd9710eedcc7c8';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'read_comment';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/xmlscanner.hpp';
      sec-mem-desc-line = '89';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classeternity_1_1xml__scanner_1a869bad0bc0339550434cd9b00b517296';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'read_doc_type';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/xmlscanner.hpp';
      sec-mem-desc-line = '90';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-type';
    sec-member = {
      sec-mem-kind = 'enum';
      sec-mem-id   = 'classeternity_1_1xml__scanner_1a97fff18c2e2004f157a42001010b84cf';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-name = 'context_mode';
      sec-mem-enum = { enum-name = value; };
      sec-mem-enum = { enum-name = tagname; };
      sec-mem-enum = { enum-name = comment; };
      sec-mem-enum = { enum-name = doctype; };
      sec-mem-enum = { enum-name = attr; };
      sec-mem-enum = { enum-name = attrvalue; };
      sec-mem-enum = { enum-name = closebracket; };
      sec-mem-enum = { enum-name = closetag; };
      sec-mem-enum = { enum-name = endfile; };
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/xmlscanner.hpp';
      sec-mem-desc-line = '67';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classeternity_1_1xml__scanner_1aa2c16eaaca14155bfa84a9b3307b3afe';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::fstream
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'stream';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/xmlscanner.hpp';
      sec-mem-desc-line = '61';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classeternity_1_1xml__scanner_1a5b233a950be70889f4db08d8fa713e66';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
node
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'rootnode';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/xmlscanner.hpp';
      sec-mem-desc-line = '62';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classeternity_1_1xml__scanner_1ae40ec446a15f3ed7394d875473be3676';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
node *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'currnode';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/xmlscanner.hpp';
      sec-mem-desc-line = '63';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classeternity_1_1xml__scanner_1afe2104df644a31c03e948a9f1e4203b1';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'currAttribute';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/xmlscanner.hpp';
      sec-mem-desc-line = '65';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classeternity_1_1xml__scanner_1ab1eb4acdc4a28ccd587413bcc504aa01';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
enum eternity::xml_scanner::context_mode
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'context';
      sec-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/xmlscanner.hpp';
      sec-mem-desc-line = '69';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/xmlscanner.hpp';
  cp-fileline  = '59';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 1019;
        node-label = 'eternity::xml_scanner';
        node-link = {
          node-link-id = 'classeternity_1_1xml__scanner';
        };
        node-child = {
          child-id = '1020';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
rootnode
currnode
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 1020;
        node-label = 'eternity::node';
        node-link = {
          node-link-id = 'classeternity_1_1node';
        };
        node-child = {
          child-id = '1020';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
parent
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
file = {
  file-id   = 'index_8md';
  file-name = 'index.md';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/docs/index.md';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_algo_base_8hpp';
  file-name = 'AlgoBase.hpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/AlgoBase.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_
  Copyright (C) 2004 by Giancarlo Cella
  giancarlo.cella@pi.infn.it

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the
  Free Software Foundation, Inc.,
  59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.


@author Giancarlo Cella <giancarlo.cella@pi.infn.it>
@date   Sat Nov 13 17:21:06 2004
_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_algo_exceptions_8hpp';
  file-name = 'AlgoExceptions.hpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/AlgoExceptions.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_
Base class for tsa Exceptions.
_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_
  Copyright (C) 2004 by Giancarlo Cella                                 
  giancarlo.cella@pi.infn.it                                            

  This program is free software; you can redistribute it and/or modify  
  it under the terms of the GNU General Public License as published by  
  the Free Software Foundation; either version 2 of the License, or     
  (at your option) any later version.                                   

  This program is distributed in the hope that it will be useful,       
  but WITHOUT ANY WARRANTY; without even the implied warranty of        
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         
  GNU General Public License for more details.                          

  You should have received a copy of the GNU General Public License     
  along with this program; if not, write to the                         
  Free Software Foundation, Inc.,                                       
  59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             


@author Giancarlo Cella <giancarlo.cella@pi.infn.it>
@date   Sat Nov 13 17:21:06 2004
_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_a_r2_8hpp';
  file-name = 'AR2.hpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/AR2.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_
Implement an ARMA filter.
_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_
  Copyright (C) 2004 by Giancarlo Cella                                 
  giancarlo.cella@pi.infn.it                                            

  This program is free software; you can redistribute it and/or modify  
  it under the terms of the GNU General Public License as published by  
  the Free Software Foundation; either version 2 of the License, or     
  (at your option) any later version.                                   

  This program is distributed in the hope that it will be useful,       
  but WITHOUT ANY WARRANTY; without even the implied warranty of        
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         
  GNU General Public License for more details.                          

  You should have received a copy of the GNU General Public License     
  along with this program; if not, write to the                         
  Free Software Foundation, Inc.,                                       
  59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             


@author Giancarlo Cella <giancarlo.cella@pi.infn.it>
@date   Sat Nov 13 17:21:06 2004
_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_a_r2_parcor_8hpp';
  file-name = 'AR2Parcor.hpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/AR2Parcor.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_
Estimate the parcor parameters by the AR ones.
_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_
  Copyright (C) 2004 by Elena Cuoco
  elena.cuoco@ego-gw.it

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the
  Free Software Foundation, Inc.,
  59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

 
@author Elena Cuoco <elena.cuoco@ego-gw.it>
@date   2005
_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_ar_burg_estimator_8hpp';
  file-name = 'ArBurgEstimator.hpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ArBurgEstimator.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_
Estimate the Parcor and AR parameters on a sequence of data.
_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_
  Copyright (C) 2004 by Elena Cuoco
  elena.cuoco@ego-gw.it

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the
  Free Software Foundation, Inc.,
  59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.


@author Elena Cuoco <elena.cuoco@ego-gw.it>
@date   05 December 2004
_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_ar_durbin_estimator_8hpp';
  file-name = 'ArDurbinEstimator.hpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ArDurbinEstimator.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_
AR estimator based on  Durbin procedure.
_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_
  Copyright (C) 2004 by Elena Cuoco
  elena.cuoco@ego-gw.it

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the
  Free Software Foundation, Inc.,
  59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

 
@author Elena Cuoco <elena.cuoco@ego-gw.it>
@date   2004
_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_arma2_psd_8hpp';
  file-name = 'Arma2Psd.hpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/Arma2Psd.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_
Estimate the PSD for a ARMA model.
_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_
  Copyright (C) 2004 by Elena Cuoco
  elena.cuoco@ego-gw.it

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the
  Free Software Foundation, Inc.,
  59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.


@author Elena Cuoco <elena.cuoco@ego-gw.it>
@date   2005
_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_arma2_t_f_8hpp';
  file-name = 'Arma2TF.hpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/Arma2TF.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_
  Copyright (C) 2004 by Elena Cuoco
  elena.cuoco@ego-gw.it

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the
  Free Software Foundation, Inc.,
  59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.


@author Elena Cuoco <elena.cuoco@ego-gw.it>
@date   2004
_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_a_r_m_a_filter_8hpp';
  file-name = 'ARMAFilter.hpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ARMAFilter.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_
Implement an ARMA filter.
_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_
  Copyright (C) 2004 by Giancarlo Cella                                 
  giancarlo.cella@pi.infn.it                                            

  This program is free software; you can redistribute it and/or modify  
  it under the terms of the GNU General Public License as published by  
  the Free Software Foundation; either version 2 of the License, or     
  (at your option) any later version.                                   

  This program is distributed in the hope that it will be useful,       
  but WITHOUT ANY WARRANTY; without even the implied warranty of        
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         
  GNU General Public License for more details.                          

  You should have received a copy of the GNU General Public License     
  along with this program; if not, write to the                         
  Free Software Foundation, Inc.,                                       
  59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             


@author Giancarlo Cella <giancarlo.cella@pi.infn.it>
@date   Sat Nov 13 17:21:06 2004
_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_a_r_m_afit_8hpp';
  file-name = 'ARMAfit.hpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ARMAfit.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_
implement the ARMA fit to a PSD
_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_
  Copyright (C) 2004 by Elena Cuoco
  elena.cuoco@ego-gw.it

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the
  Free Software Foundation, Inc.,
  59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.


@author Elena Cuoco <elena.cuoco@ego-gw.it>
@date   2006
_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_a_r_m_a_view_8hpp';
  file-name = 'ARMAView.hpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ARMAView.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_
ARMAView is a view for arma parametrization.
_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_
  Copyright (C) 2004 by Elena Cuoco
  elena.cuoco@ego-gw.it

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the
  Free Software Foundation, Inc.,
  59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.


@author Elena Cuoco <elena.cuoco@ego-gw.it>
@date   2004
_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_bartlett_window_8hpp';
  file-name = 'BartlettWindow.hpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/BartlettWindow.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_
Bartlett windowing.
_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_
@author Giancarlo Cella <giancarlo.cella@pi.infn.it>
@date   Sat Nov 13 17:21:06 2004

  Copyright (C) 2004 by Giancarlo Cella
  giancarlo.cella@pi.infn.it

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the
  Free Software Foundation, Inc.,
  59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_base_f_f_t_8hpp';
  file-name = 'BaseFFT.hpp';
    enum = {
    enum-member = {
      enum-mem-kind = 'enum';
      enum-mem-id   = 'namespacetsa_1a217e07ef78939f88b22c8428ac96b1ae';
      enum-mem-virt = normal;
      enum-mem-prot = public;
      enum-mem-name = 'FFTPlanningMode';
      enum-mem-enum = { enum-name = ESTIMATE; };
      enum-mem-enum = { enum-name = MEASURE; };
      enum-mem-enum = { enum-name = PATIENT; };
      enum-mem-enum = { enum-name = EXHAUSTIVE; };
      enum-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/BaseFFT.hpp';
      enum-mem-desc-line = '71';
      enum-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      enum-mem-documentation = <<_EnD_oF_dEf_TeXt_
Planning modes. They describe the way in which the planning
is done. See the fftw documentation.
_EnD_oF_dEf_TeXt_;
    }; /* enum-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'namespacetsa_1ab56a65a614e542cef8536f461fc185a5';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'FFTsize';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'n';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/BaseFFT.hpp';
      func-mem-desc-line = '78';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/BaseFFT.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_
Interface for BaseFFT.
_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_
@author Giancarlo Cella <giancarlo.cella@pi.infn.it>
@date   Sat Nov 13 17:21:06 2004

  Copyright (C) 2004 by Giancarlo Cella
  giancarlo.cella@pi.infn.it

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the
  Free Software Foundation, Inc.,
  59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_base_view_8hpp';
  file-name = 'BaseView.hpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/BaseView.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_
Base class for Views.
_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_
  Copyright (C) 2004 by Giancarlo Cella                                 
  giancarlo.cella@pi.infn.it                                            

  This program is free software; you can redistribute it and/or modify  
  it under the terms of the GNU General Public License as published by  
  the Free Software Foundation; either version 2 of the License, or     
  (at your option) any later version.                                   

  This program is distributed in the hope that it will be useful,       
  but WITHOUT ANY WARRANTY; without even the implied warranty of        
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         
  GNU General Public License for more details.                          

  You should have received a copy of the GNU General Public License     
  along with this program; if not, write to the                         
  Free Software Foundation, Inc.,                                       
  59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             


@author Giancarlo Cella <giancarlo.cella@pi.infn.it>
@date   Sat Nov 13 17:21:06 2004
_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_base_window_8hpp';
  file-name = 'BaseWindow.hpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/BaseWindow.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_
Base class for Windowing.
_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_
@author Giancarlo Cella <giancarlo.cella@pi.infn.it>
@date   Sat Nov 13 17:21:06 2004

  Copyright (C) 2004 by Giancarlo Cella
  giancarlo.cella@pi.infn.it

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the
  Free Software Foundation, Inc.,
  59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_bisquare_window_8hpp';
  file-name = 'BisquareWindow.hpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/BisquareWindow.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_b_l_interpolation_8hpp';
  file-name = 'BLInterpolation.hpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/BLInterpolation.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_
Band limited interpolation.
_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_
  Copyright (C) 2004 by Giancarlo Cella                                 
  giancarlo.cella@pi.infn.it                                            

  This program is free software; you can redistribute it and/or modify  
  it under the terms of the GNU General Public License as published by  
  the Free Software Foundation; either version 2 of the License, or     
  (at your option) any later version.                                   

  This program is distributed in the hope that it will be useful,       
  but WITHOUT ANY WARRANTY; without even the implied warranty of        
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         
  GNU General Public License for more details.                          

  You should have received a copy of the GNU General Public License     
  along with this program; if not, write to the                         
  Free Software Foundation, Inc.,                                       
  59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             


@author Giancarlo Cella <giancarlo.cella@pi.infn.it>
@date   Sat Nov 13 17:21:06 2004
_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_butterworth_filter_8hpp';
  file-name = 'ButterworthFilter.hpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ButterworthFilter.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_cholesky_8hpp';
  file-name = 'Cholesky.hpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/Cholesky.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_
Implement the Cholesky decomposition.
_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_
  Copyright (C) 2004 by Elena Cuoco
  elena.cuoco@ego-gw.it

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the
  Free Software Foundation, Inc.,
  59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.


@author Elena Cuoco <elena.cuoco@ego-gw.it>
@date   2006
_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_clusterized_event_full_featured_8hpp';
  file-name = 'ClusterizedEventFullFeatured.hpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ClusterizedEventFullFeatured.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_complex_f_f_t_8hpp';
  file-name = 'ComplexFFT.hpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ComplexFFT.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_
Interface for ComplexFFT.
_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_
@author Giancarlo Cella <giancarlo.cella@pi.infn.it>
@date   Sat Nov 13 17:21:06 2004

  Copyright (C) 2004 by Giancarlo Cella
  giancarlo.cella@pi.infn.it

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the
  Free Software Foundation, Inc.,
  59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_create_dvector_8hpp';
  file-name = 'CreateDvector.hpp';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'namespacetsa_1a1f1681e991b47cfe3bc50282c96bd744';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
Dvector
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'create_dvector';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'size';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/src/CreateDvector.cpp';
      func-mem-desc-line = '19';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/CreateDvector.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_
Estimate the AR parameters by the Parcor.
_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_
  Copyright (C) 2004 by Elena Cuoco
  elena.cuoco@ego-gw.it

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the
  Free Software Foundation, Inc.,
  59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

 
@author Elena Cuoco <elena.cuoco@ego-gw.it>
@date   2005
_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_cs2_hamming_window_8hpp';
  file-name = 'Cs2HammingWindow.hpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/Cs2HammingWindow.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_
Cs2Hamming windowing.
_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_
@author Giancarlo Cella <giancarlo.cella@pi.infn.it>
@date   Sat Nov 13 17:21:06 2004

  Copyright (C) 2004 by Giancarlo Cella
  giancarlo.cella@pi.infn.it

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the
  Free Software Foundation, Inc.,
  59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_cs2_hann_window_8hpp';
  file-name = 'Cs2HannWindow.hpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/Cs2HannWindow.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_
Cs2Hann windowing.
_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_
@author Giancarlo Cella <giancarlo.cella@pi.infn.it>
@date   Sat Nov 13 17:21:06 2004

  Copyright (C) 2004 by Giancarlo Cella
  giancarlo.cella@pi.infn.it

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the
  Free Software Foundation, Inc.,
  59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_d_c_t_8hpp';
  file-name = 'DCT.hpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/DCT.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_
Discrete Cosine  Transform.
_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_
@author Elena Cuoco<elans.cuoco@ego-gw.it>
@date   31 Jan 2006

  Copyright (C) 2004 by Elena Cuoco
  elena.cuoco@ego-gw.it

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the
  Free Software Foundation, Inc.,
  59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_double_whitening_8hpp';
  file-name = 'DoubleWhitening.hpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/DoubleWhitening.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_
Implement the DoubleWhitening in the time domain.
_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_
  Copyright (C) 2004 by Elena Cuoco
  elena.cuoco@ego-gw.it

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the
  Free Software Foundation, Inc.,
  59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.


@author Elena Cuoco <elena.cuoco@ego-gw.it>
@date   26 May 2005
_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_d_s_t_8hpp';
  file-name = 'DST.hpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/DST.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_
Discrete Sine Transform.
_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_
@author Elena Cuoco<elans.cuoco@ego-gw.it>
@date   31 Jan 2006

  Copyright (C) 2004 by Elena Cuoco
  elena.cuoco@ego-gw.it

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the
  Free Software Foundation, Inc.,
  59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'algorithms_8hpp';
  file-name = 'algorithms.hpp';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'namespaceeternity_1a839ed28b40afacc8ece1c9198aff5117';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'xml_write';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
CollectionCategory
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
InputIterator
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'first';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
InputIterator
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'last';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
xml_archive &
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'archive';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'label';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/algorithms.hpp';
      func-mem-desc-line = '313';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Pass to this function the container to persist with informtion about
it's nature (sequence or associative) and the type of items collected ( primitives,
    objects or pointers).
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'namespaceeternity_1acbfdd0b95d15efaa347565f99effa8c3';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'xml_read';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
CollectionCategory
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
Container &
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'container';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
InputIterator
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'inserter';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
xml_archive &
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'archive';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'label';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/algorithms.hpp';
      func-mem-desc-line = '334';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'namespaceeternity_1a60ba54c971ad5c7de37fa57de8b3fd4c';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'binary_write';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
CollectionCategory
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
InputIterator
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'first';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
InputIterator
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'last';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
bin_archive &
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'archive';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/algorithms.hpp';
      func-mem-desc-line = '353';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'namespaceeternity_1a4bd77f03b6e8ea105a1b7a8d4e245fbe';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'binary_read';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
CollectionCategory
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
Container &
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'container';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
InputIterator
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'inserter';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
bin_archive &
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'archive';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/algorithms.hpp';
      func-mem-desc-line = '368';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/algorithms.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'dynamic_8cpp';
  file-name = 'dynamic.cpp';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'namespaceeternity_1a5f792170a26f719b53ffeb502cdd2344';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'get_conventional_name';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'compiler_name';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/dynamic.cpp';
      func-mem-desc-line = '28';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Search over all register facotry to found
    the conventional name of a class that the compiler
    identified with compiler_name.
    Otherwise return an empty string.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/dynamic.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'dynamic_8hpp';
  file-name = 'dynamic.hpp';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'namespaceeternity_1a18dc40145658dda3be79014257e1176b';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'create';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'cls_name';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
t **
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ppObj';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/dynamic.hpp';
      func-mem-desc-line = '155';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
This function return a pointer to an object
    that belong to the class specified by the
    string cls_name. If success put in *ppObj
    that pointer, otherwise put a NULL value
    in *ppObj.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'namespaceeternity_1a5f792170a26f719b53ffeb502cdd2344';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'get_conventional_name';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'compiler_name';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/dynamic.cpp';
      func-mem-desc-line = '28';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Search over all register facotry to found
    the conventional name of a class that the compiler
    identified with compiler_name.
    Otherwise return an empty string.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/dynamic.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'eternity_2eternity_8hpp';
  file-name = 'eternity.hpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/eternity.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'eternity_8hpp';
  file-name = 'eternity.hpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_m_f_c_archive_8cpp';
  file-name = 'MFCArchive.cpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/mfc/MFCArchive.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_m_f_c_archive_8h';
  file-name = 'MFCArchive.h';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/MFCArchive.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'persist_8cpp';
  file-name = 'persist.cpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'persist_8hpp';
  file-name = 'persist.hpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'persist__xml_8cpp';
  file-name = 'persist_xml.cpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist_xml.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'persist__xml_8hpp';
  file-name = 'persist_xml.hpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/persist_xml.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'xmlscanner_8cpp';
  file-name = 'xmlscanner.cpp';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'xmlscanner_8cpp_1aaa82fc32529edd358669e61448199f41';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'XMLSCANNER_CPP';
      define-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/xmlscanner.cpp';
      define-mem-desc-line = '24';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/xmlscanner.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'xmlscanner_8hpp';
  file-name = 'xmlscanner.hpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/xmlscanner.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_event_description_8hpp';
  file-name = 'EventDescription.hpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/EventDescription.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_
EventDescription is a class container for a transient event.
_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_
  Copyright (C) 2004 by Elena Cuoco
  elena.cuoco@ego-gw.it

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the
  Free Software Foundation, Inc.,
  59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.


@author Elena Cuoco <elena.cuoco@ego-gw.it>
@date   2005
_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_event_full_featured_8hpp';
  file-name = 'EventFullFeatured.hpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/EventFullFeatured.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_fifo_buffer_8hpp';
  file-name = 'FifoBuffer.hpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FifoBuffer.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_
Band limited interpolation.
_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_
  Copyright (C) 2004 by Giancarlo Cella                                 
  giancarlo.cella@pi.infn.it                                            

  This program is free software; you can redistribute it and/or modify  
  it under the terms of the GNU General Public License as published by  
  the Free Software Foundation; either version 2 of the License, or     
  (at your option) any later version.                                   

  This program is distributed in the hope that it will be useful,       
  but WITHOUT ANY WARRANTY; without even the implied warranty of        
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         
  GNU General Public License for more details.                          

  You should have received a copy of the GNU General Public License     
  along with this program; if not, write to the                         
  Free Software Foundation, Inc.,                                       
  59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             


@author Giancarlo Cella <giancarlo.cella@pi.infn.it>
@date   Sat Nov 13 17:21:06 2004
_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'fparser_8hpp';
  file-name = 'fparser.hpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/fparser.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'fpconfig_8hpp';
  file-name = 'fpconfig.hpp';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'fpconfig_8hpp_1a051251903632e192e691a39badd584b0';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'NO_ASINH';
      define-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/fpconfig.hpp';
      define-mem-desc-line = '18';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'fpconfig_8hpp_1a0950df179ac5b6f5945f00e565619943';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'EVAL_MAX_REC_LEVEL';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
1000
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/fpconfig.hpp';
      define-mem-desc-line = '35';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'fpconfig_8hpp_1a0dcba38f42be2feec396425cfd587a01';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SUPPORT_OPTIMIZER';
      define-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/fpconfig.hpp';
      define-mem-desc-line = '46';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'fpconfig_8hpp_1aae3eae17200b095d27f66dc860c3f688';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'FP_EPSILON';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
1e-14
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/fpconfig.hpp';
      define-mem-desc-line = '56';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/fpconfig.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'fptypes_8hpp';
  file-name = 'fptypes.hpp';
    enum = {
    enum-member = {
      enum-mem-kind = 'enum';
      enum-mem-id   = 'namespace_f_u_n_c_t_i_o_n_p_a_r_s_e_r_t_y_p_e_s_1aa8e540de01c96313b7e301c7b0d24104';
      enum-mem-virt = normal;
      enum-mem-prot = public;
      enum-mem-name = 'OPCODE';
      enum-mem-enum = { enum-name = cAbs; };
      enum-mem-enum = { enum-name = cAcos; };
      enum-mem-enum = { enum-name = cAcosh; };
      enum-mem-enum = { enum-name = cAsin; };
      enum-mem-enum = { enum-name = cAsinh; };
      enum-mem-enum = { enum-name = cAtan; };
      enum-mem-enum = { enum-name = cAtan2; };
      enum-mem-enum = { enum-name = cAtanh; };
      enum-mem-enum = { enum-name = cCeil; };
      enum-mem-enum = { enum-name = cCos; };
      enum-mem-enum = { enum-name = cCosh; };
      enum-mem-enum = { enum-name = cCot; };
      enum-mem-enum = { enum-name = cCsc; };
      enum-mem-enum = { enum-name = cEval; };
      enum-mem-enum = { enum-name = cExp; };
      enum-mem-enum = { enum-name = cFloor; };
      enum-mem-enum = { enum-name = cIf; };
      enum-mem-enum = { enum-name = cInt; };
      enum-mem-enum = { enum-name = cLog; };
      enum-mem-enum = { enum-name = cLog10; };
      enum-mem-enum = { enum-name = cMax; };
      enum-mem-enum = { enum-name = cMin; };
      enum-mem-enum = { enum-name = cSec; };
      enum-mem-enum = { enum-name = cSin; };
      enum-mem-enum = { enum-name = cSinh; };
      enum-mem-enum = { enum-name = cSqrt; };
      enum-mem-enum = { enum-name = cTan; };
      enum-mem-enum = { enum-name = cTanh; };
      enum-mem-enum = { enum-name = cImmed; };
      enum-mem-enum = { enum-name = cJump; };
      enum-mem-enum = { enum-name = cNeg; };
      enum-mem-enum = { enum-name = cAdd; };
      enum-mem-enum = { enum-name = cSub; };
      enum-mem-enum = { enum-name = cMul; };
      enum-mem-enum = { enum-name = cDiv; };
      enum-mem-enum = { enum-name = cMod; };
      enum-mem-enum = { enum-name = cPow; };
      enum-mem-enum = { enum-name = cEqual; };
      enum-mem-enum = { enum-name = cNEqual; };
      enum-mem-enum = { enum-name = cLess; };
      enum-mem-enum = { enum-name = cLessOrEq; };
      enum-mem-enum = { enum-name = cGreater; };
      enum-mem-enum = { enum-name = cGreaterOrEq; };
      enum-mem-enum = { enum-name = cNot; };
      enum-mem-enum = { enum-name = cAnd; };
      enum-mem-enum = { enum-name = cOr; };
      enum-mem-enum = { enum-name = cDeg; };
      enum-mem-enum = { enum-name = cRad; };
      enum-mem-enum = { enum-name = cFCall; };
      enum-mem-enum = { enum-name = cPCall; };
      enum-mem-enum = { enum-name = VarBegin; };
      enum-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/fptypes.hpp';
      enum-mem-desc-line = '15';
      enum-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      enum-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* enum-member */
    };
    var = {
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'namespace_f_u_n_c_t_i_o_n_p_a_r_s_e_r_t_y_p_e_s_1ae97b87cd905b84d3808b4268dcbf38cb';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
const FuncDefinition
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'Functions';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
={
        { "abs", 3, cAbs, 1},
        { "acos", 4, cAcos, 1},

        { "acosh", 5, cAcosh, 1},

        { "asin", 4, cAsin, 1},

        { "asinh", 5, cAsinh, 1},

        { "atan", 4, cAtan, 1},
        { "atan2", 5, cAtan2, 2},

        { "atanh", 5, cAtanh, 1},

        { "ceil", 4, cCeil, 1},
        { "cos", 3, cCos, 1},
        { "cosh", 4, cCosh, 1},
        { "cot", 3, cCot, 1},
        { "csc", 3, cCsc, 1},

        { "eval", 4, cEval, 0},

        { "exp", 3, cExp, 1},
        { "floor", 5, cFloor, 1},
        { "if", 2, cIf, 0},
        { "int", 3, cInt, 1},
        { "log", 3, cLog, 1},
        { "log10", 5, cLog10, 1},
        { "max", 3, cMax, 2},
        { "min", 3, cMin, 2},
        { "sec", 3, cSec, 1},
        { "sin", 3, cSin, 1},
        { "sinh", 4, cSinh, 1},
        { "sqrt", 4, cSqrt, 1},
        { "tan", 3, cTan, 1},
        { "tanh", 4, cTanh, 1}
    }
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/fptypes.hpp';
      var-mem-desc-line = '75';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    };
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/fptypes.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_frame_i_channel_8hpp';
  file-name = 'FrameIChannel.hpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIChannel.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_frame_i_stream_8hpp';
  file-name = 'FrameIStream.hpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/FrameIStream.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_
Interface for FrameIStream.
_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_
  Copyright (C) 2004 by Giancarlo Cella
  giancarlo.cella@pi.infn.it

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the
  Free Software Foundation, Inc.,
  59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.


@author Giancarlo Cella <giancarlo.cella@pi.infn.it>
@date   Sat Nov 13 17:21:06 2004

  Copyright (C) 2004 by Giancarlo Cella
  giancarlo.cella@pi.infn.it

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the
  Free Software Foundation, Inc.,
  59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

/// @author Giancarlo Cella <giancarlo.cella@pi.infn.it>
@date   Sat Nov 13 17:21:06 2004
_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_i_d_c_t_8hpp';
  file-name = 'IDCT.hpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/IDCT.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_
Discrete Cosine  Transform.
_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_
@author Elena Cuoco<elans.cuoco@ego-gw.it>
@date   31 Jan 2006

  Copyright (C) 2004 by Elena Cuoco
  elena.cuoco@ego-gw.it

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the
  Free Software Foundation, Inc.,
  59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_inverse_real_f_f_t_8hpp';
  file-name = 'InverseRealFFT.hpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/InverseRealFFT.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_
Interface for InverseRealFFT.
_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_
@author Giancarlo Cella <giancarlo.cella@pi.infn.it>
@date   Sat Nov 13 17:21:06 2004

  Copyright (C) 2004 by Giancarlo Cella
  giancarlo.cella@pi.infn.it

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the
  Free Software Foundation, Inc.,
  59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_kaiser_window_8hpp';
  file-name = 'KaiserWindow.hpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/KaiserWindow.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_
Cs2Hamming windowing.
_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_
@author Giancarlo Cella <giancarlo.cella@pi.infn.it>
@date   Sat Nov 13 17:21:06 2004

  Copyright (C) 2004 by Giancarlo Cella
  giancarlo.cella@pi.infn.it

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  (at your option) any later version.
  the Free Software Foundation; either version 2 of the License, or

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the
  Free Software Foundation, Inc.,
  59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_lattice_filter_8hpp';
  file-name = 'LatticeFilter.hpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/LatticeFilter.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_
Implement a filter in the lattice structure.
_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_
  Copyright (C) 2004 by Elena Cuoco
  elena.cuoco@ego-gw.it

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the
  Free Software Foundation, Inc.,
  59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.


@author Elena Cuoco <elena.cuoco@ego-gw.it>
@date   2005
_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_lattice_view_8hpp';
  file-name = 'LatticeView.hpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/LatticeView.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_
Define a LatticeView for the Whitening filters.
_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_
  Copyright (C) 2004 by Elena Cuoco
  elena.cuoco@ego-gw.it

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the
  Free Software Foundation, Inc.,
  59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

 
@author Elena Cuoco <elena.cuoco@ego-gw.it>
@date   2004
_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_least_squares_lattice_8hpp';
  file-name = 'LeastSquaresLattice.hpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/LeastSquaresLattice.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_
The LeastSquaresLattice is the algorithm to estimate in adaptive way the parameters for the whitening filter.
_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_
  Copyright (C) 2004 by Elena Cuoco
  elena.cuoco@ego-gw.it

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the
  Free Software Foundation, Inc.,
  59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.


@author Elena Cuoco <elena.cuoco@ego-gw.it>
@date   17 January 2005
_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_l_s_lfilter_8hpp';
  file-name = 'LSLfilter.hpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLfilter.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_
Least Squares Lattice  filter.
_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_
  Copyright (C) 2004 by Elena Cuoco
  elena.cuoco@ego-gw.it

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the
  Free Software Foundation, Inc.,
  59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.


@author Elena Cuoco <elena.cuoco@ego-gw.it>
@date   2005
_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_l_s_l_learning_8hpp';
  file-name = 'LSLLearning.hpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/LSLLearning.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_
Least Squares Lattice  filter.
_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_
  Copyright (C) 2004 by Elena Cuoco
  elena.cuoco@ego-gw.it

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the
  Free Software Foundation, Inc.,
  59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.


@author Elena Cuoco <elena.cuoco@ego-gw.it>
@date   2005
_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_m_y_w_e_8hpp';
  file-name = 'MYWE.hpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/MYWE.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_
description of MYWE
_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_
  Copyright (C) 2004 by Elena Cuoco
  elena.cuoco@ego-gw.it

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the
  Free Software Foundation, Inc.,
  59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.


@author Elena Cuoco <elena.cuoco@ego-gw.it>
@date   2006
_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_notch_widrow_8hpp';
  file-name = 'NotchWidrow.hpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/NotchWidrow.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_
NotchWidrow perform the fit and the removal of lines, using the LMS method.
_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_
  Copyright (C) 2004 by Elena Cuoco
  elena.cuoco@ego-gw.it

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the
  Free Software Foundation, Inc.,
  59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.


@author Elena Cuoco <elena.cuoco@ego-gw.it>
@date   18 January 2005
_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_parcor2_a_r_8hpp';
  file-name = 'Parcor2AR.hpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/Parcor2AR.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_
Estimate the AR parameters by the Parcor.
_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_
  Copyright (C) 2004 by Elena Cuoco
  elena.cuoco@ego-gw.it

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the
  Free Software Foundation, Inc.,
  59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

 
@author Elena Cuoco <elena.cuoco@ego-gw.it>
@date   2005
_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_real_f_f_t_8hpp';
  file-name = 'RealFFT.hpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/RealFFT.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_
RealFFT.
_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_
@author Giancarlo Cella <giancarlo.cella@pi.infn.it>
@date   Sat Nov 13 17:21:06 2004

  Copyright (C) 2004 by Giancarlo Cella
  giancarlo.cella@pi.infn.it

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the
  Free Software Foundation, Inc.,
  59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_r_l_s_canceler_8hpp';
  file-name = 'RLSCanceler.hpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/RLSCanceler.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_
Implement the Recursive Least Squares wieghts estimation.
_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_
  Copyright (C) 2004 by Elena Cuoco
  elena.cuoco@ego-gw.it

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the
  Free Software Foundation, Inc.,
  59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.


@author Elena Cuoco <elena.cuoco@ego-gw.it>
@date   2005
_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_selection_order_criteria_8hpp';
  file-name = 'SelectionOrderCriteria.hpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/SelectionOrderCriteria.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_
Estimate the function for the AR Selection Order Criteria.
_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_
  Copyright (C) 2004 by Elena Cuoco
  elena.cuoco@ego-gw.it

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the
  Free Software Foundation, Inc.,
  59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.


@author Elena Cuoco <elena.cuoco@ego-gw.it>
@date   2005
_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_seq_view_8hpp';
  file-name = 'SeqView.hpp';
    typedef = {
    typedef-member = {
      typedef-mem-kind = 'typedef';
      typedef-mem-id   = 'namespacetsa_1ac599574bcc094eda25613724b8f3ca9e';
      typedef-mem-virt = normal;
      typedef-mem-prot = public;
      typedef-mem-type = <<_EnD_oF_dEf_TeXt_
class SeqView< double >
_EnD_oF_dEf_TeXt_;
      typedef-mem-name = 'SeqViewDouble';
      typedef-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/SeqView.hpp';
      typedef-mem-desc-line = '187';
      typedef-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Double precision histogram.
_EnD_oF_dEf_TeXt_;
      typedef-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* typedef-member */
    typedef-member = {
      typedef-mem-kind = 'typedef';
      typedef-mem-id   = 'namespacetsa_1ab32775c889b53c40fa83939f22372b75';
      typedef-mem-virt = normal;
      typedef-mem-prot = public;
      typedef-mem-type = <<_EnD_oF_dEf_TeXt_
class SeqView< std::complex< double > >
_EnD_oF_dEf_TeXt_;
      typedef-mem-name = 'SeqViewComplex';
      typedef-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/SeqView.hpp';
      typedef-mem-desc-line = '187';
      typedef-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Complex histogram.
_EnD_oF_dEf_TeXt_;
      typedef-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* typedef-member */
    };
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/SeqView.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_
Define Sequence view.
_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_
@author Antonio Eleuteri <antonio.eleuteri@na.infn.it>
@date   Wed Nov 24 17:05:33 2004
_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_t_f2_psd_8hpp';
  file-name = 'TF2Psd.hpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/TF2Psd.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_
Estimate the PSD of a transfer function TF.
_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_
  Copyright (C) 2004 by Giancarlo Cella                                 
  giancarlo.cella@pi.infn.it                                            

  This program is free software; you can redistribute it and/or modify  
  it under the terms of the GNU General Public License as published by  
  the Free Software Foundation; either version 2 of the License, or     
  (at your option) any later version.                                   

  This program is distributed in the hope that it will be useful,       
  but WITHOUT ANY WARRANTY; without even the implied warranty of        
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         
  GNU General Public License for more details.                          

  You should have received a copy of the GNU General Public License     
  along with this program; if not, write to the                         
  Free Software Foundation, Inc.,                                       
  59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             


@author Giancarlo Cella <giancarlo.cella@pi.infn.it>
@date   Sat Nov 13 17:21:06 2004
_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_t_f_view_8hpp';
  file-name = 'TFView.hpp';
    typedef = {
    typedef-member = {
      typedef-mem-kind = 'typedef';
      typedef-mem-id   = 'namespacetsa_1a0da725604861f3b1b20bbaa371e77d67';
      typedef-mem-virt = normal;
      typedef-mem-prot = public;
      typedef-mem-type = <<_EnD_oF_dEf_TeXt_
class TFView< double >
_EnD_oF_dEf_TeXt_;
      typedef-mem-name = 'TFViewDouble';
      typedef-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/TFView.hpp';
      typedef-mem-desc-line = '183';
      typedef-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Double precision histogram.
_EnD_oF_dEf_TeXt_;
      typedef-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* typedef-member */
    typedef-member = {
      typedef-mem-kind = 'typedef';
      typedef-mem-id   = 'namespacetsa_1ac27fece838548b661b9d7b73f36b61d5';
      typedef-mem-virt = normal;
      typedef-mem-prot = public;
      typedef-mem-type = <<_EnD_oF_dEf_TeXt_
class TFView< std::complex< double > >
_EnD_oF_dEf_TeXt_;
      typedef-mem-name = 'TFViewComplex';
      typedef-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/TFView.hpp';
      typedef-mem-desc-line = '183';
      typedef-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Complex histogram.
_EnD_oF_dEf_TeXt_;
      typedef-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* typedef-member */
    };
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/TFView.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'tsa_8hpp';
  file-name = 'tsa.hpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/tsa.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'tsa_log_8hpp';
  file-name = 'tsaLog.hpp';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'tsa_log_8hpp_1a4858002cc014b9392dcf6df8496f487a';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'RLOG_COMPONENT';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
tsa
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/tsaLog.hpp';
      define-mem-desc-line = '30';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'tsa_log_8hpp_1a99afb0abe77e01cb3aef957cc2883205';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'LOG_DEBUG_LEVEL_2';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
2
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/tsaLog.hpp';
      define-mem-desc-line = '70';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'tsa_log_8hpp_1ad89190533829c21d411a8d833c199727';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'LOG_DEBUG_LEVEL_3';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
3
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/tsaLog.hpp';
      define-mem-desc-line = '71';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'tsa_log_8hpp_1a222b19506a114bade17c0a5349078624';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'LOGH1';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
"============================================"
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/tsaLog.hpp';
      define-mem-desc-line = '73';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'tsa_log_8hpp_1a6ce78cc7328b78feb05404edb055ce1c';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'LOGH2';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
"--------------------------------------------"
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/tsaLog.hpp';
      define-mem-desc-line = '74';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'namespacetsa_1a08952ac2e7ac6e538c83692501aed4e7';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'LogInfo';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const std::string &
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 's';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
...
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/src/tsaLog.cpp';
      func-mem-desc-line = '10';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'namespacetsa_1a91d266348bcf69ab00c97a253b0ec790';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'LogWarning';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const std::string &
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 's';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
...
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/src/tsaLog.cpp';
      func-mem-desc-line = '13';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'namespacetsa_1a3bce10382fbb41b48aca0e5b8afeb896';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'LogSevere';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const std::string &
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 's';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
...
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/src/tsaLog.cpp';
      func-mem-desc-line = '16';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'namespacetsa_1aeff53394d3502127b84380cceb41cba8';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'LogSevere';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'lvl';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const std::string &
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 's';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
...
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/src/tsaLog.cpp';
      func-mem-desc-line = '19';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'namespacetsa_1a0314b9c30387b942a5de0ec7ff3026e3';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'LogFatal';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const std::string &
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 's';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
...
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/src/tsaLog.cpp';
      func-mem-desc-line = '22';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'namespacetsa_1a2a922785b9b967a8e92ded5a1540688f';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'LogDebug';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'lvl';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const std::string &
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 's';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
...
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/src/tsaLog.cpp';
      func-mem-desc-line = '25';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/tsaLog.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_
Interface for tsaLog.
_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_
  Copyright (C) 2004 by Giancarlo Cella                                 
  giancarlo.cella@pi.infn.it                                            

  This program is free software; you can redistribute it and/or modify  
  it under the terms of the GNU General Public License as published by  
  the Free Software Foundation; either version 2 of the License, or     
  (at your option) any later version.                                   

  This program is distributed in the hope that it will be useful,       
  but WITHOUT ANY WARRANTY; without even the implied warranty of        
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         
  GNU General Public License for more details.                          

  You should have received a copy of the GNU General Public License     
  along with this program; if not, write to the                         
  Free Software Foundation, Inc.,                                       
  59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             


@author Giancarlo Cella <giancarlo.cella@pi.infn.it>
@date   Sat Nov 13 17:21:06 2004
_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'tsa_serialize_8hpp';
  file-name = 'tsaSerialize.hpp';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'tsa_serialize_8hpp_1aaf0498af65933356e879bfe5cb36f088';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DVECTOR_XML_SERIALIZE';
      define-mem-param  = {
        define-mem-def-name = 'v';
      }; /*        define-mem-def--param */
      define-mem-param  = {
        define-mem-def-name = 'xml';
      }; /*        define-mem-def--param */
      define-mem-param  = {
        define-mem-def-name = 'tag';
      }; /*        define-mem-def--param */
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
if( (xml).is_loading() ) {           \
    unsigned int sz = 0;           \
    char b[1024]; \
    (xml).read(Tag(b,1024,(tag),"size"),sz,0);          \
    (v).resize(sz);            \
    for(unsigned int i=0;i<sz;i++) {          \
      (xml).read(Tag(b,1024,(tag),"e",i),(v)(i),0);         \
    }              \
  } else   { \
    char b[1024];            \
    (xml).write(Tag(b,1024,(tag),"size"),(v).size());         \
    for(unsigned int i=0;i<(v).size();i++) {         \
      (xml).write(Tag(b,1024,(tag),"e",i),(v)(i));         \
    }              \
  }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/tsaSerialize.hpp';
      define-mem-desc-line = '53';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'tsa_serialize_8hpp_1a7140915a63a13e7a03994b23dba7cd84';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DMATRIX_XML_SERIALIZE';
      define-mem-param  = {
        define-mem-def-name = 'm';
      }; /*        define-mem-def--param */
      define-mem-param  = {
        define-mem-def-name = 'xml';
      }; /*        define-mem-def--param */
      define-mem-param  = {
        define-mem-def-name = 'tag';
      }; /*        define-mem-def--param */
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
if( (xml).is_loading() )  {           \
    unsigned int sz1 = 0;           \
    unsigned int sz2 = 0;           \
    char b[1024]; \
    (xml).read(Tag(b,1024,(tag),"size1"),sz1,0);         \
    (xml).read(Tag(b,1024,(tag),"size2"),sz2,0);         \
    (m).resize(sz1,sz2);           \
    for(unsigned int i=0;i<sz1;i++) {          \
      for(unsigned int j=0;j<sz2;j++) {          \
        (xml).read(Tag(b,1024,(tag),"e",i,j),(m)(i,j),0);        \
      }              \
    }              \
  } else {             \
    char b[1024]; \
    (xml).write(Tag(b,1024,(tag),"size1"),(m).size1());        \
    (xml).write(Tag(b,1024,(tag),"size2"),(m).size2());        \
    for(unsigned int i=0;i<(m).size1();i++) {         \
      for(unsigned int j=0;j<(m).size2();j++) {         \
        (xml).write(Tag(b,1024,(tag),"e",i,j),(m)(i,j));        \
      }              \
    }              \
  }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/tsaSerialize.hpp';
      define-mem-desc-line = '73';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'tsa_serialize_8hpp_1adae2645bd4b6ee71def4a7abfa6b5b33';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'BOOL_XML_SERIALIZE';
      define-mem-param  = {
        define-mem-def-name = 'm';
      }; /*        define-mem-def--param */
      define-mem-param  = {
        define-mem-def-name = 'xml';
      }; /*        define-mem-def--param */
      define-mem-param  = {
        define-mem-def-name = 'tag';
      }; /*        define-mem-def--param */
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
if( (xml).is_loading() )  {           \
    int tmp;             \
    (xml).read(tag,tmp,0);         \
    m = bool(tmp); \
    } else {   \
    int tmp;   \
    tmp = int(m); \
    (xml).write(tag,tmp); \
  }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/tsaSerialize.hpp';
      define-mem-desc-line = '99';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'namespacetsa_1afb13ed99dfd49fe21c248464155e8806';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'Tag';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'buffer';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'n';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'base';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'rec';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/src/tsaSerialize.cpp';
      func-mem-desc-line = '5';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'namespacetsa_1a1079ab07e72bc3aaa35f2a9fce42cbd9';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'Tag';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'buffer';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'n';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'base';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'rec';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'i';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/src/tsaSerialize.cpp';
      func-mem-desc-line = '10';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'namespacetsa_1a1b02aafe1625f78174f56249e0ec5d34';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'Tag';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'buffer';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'n';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'base';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'rec';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'i';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'j';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/src/tsaSerialize.cpp';
      func-mem-desc-line = '15';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/tsaSerialize.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_
  Copyright (C) 2004 by Giancarlo Cella
  giancarlo.cella@pi.infn.it

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the
  Free Software Foundation, Inc.,
  59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.


@author Giancarlo Cella <giancarlo.cella@pi.infn.it>
@date   Sat Nov 13 17:21:06 2004
_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'tsa_traits_8hpp';
  file-name = 'tsaTraits.hpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/tsaTraits.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_
Define the  tsa Traits.
_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_
  Copyright (C) 2004 by Giancarlo Cella                                 
  giancarlo.cella@pi.infn.it                                            

  This program is free software; you can redistribute it and/or modify  
  it under the terms of the GNU General Public License as published by  
  the Free Software Foundation; either version 2 of the License, or     
  (at your option) any later version.                                   

  This program is distributed in the hope that it will be useful,       
  but WITHOUT ANY WARRANTY; without even the implied warranty of        
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         
  GNU General Public License for more details.                          

  You should have received a copy of the GNU General Public License     
  along with this program; if not, write to the                         
  Free Software Foundation, Inc.,                                       
  59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             


@author Giancarlo Cella <giancarlo.cella@pi.infn.it>
@date   Sat Nov 13 17:21:06 2004
_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'tsa_types_8hpp';
  file-name = 'tsaTypes.hpp';
    typedef = {
    typedef-member = {
      typedef-mem-kind = 'typedef';
      typedef-mem-id   = 'namespacetsa_1a7b1f40fa90474b78dd0ab472b7c37547';
      typedef-mem-virt = normal;
      typedef-mem-prot = public;
      typedef-mem-type = <<_EnD_oF_dEf_TeXt_
std::complex< double >
_EnD_oF_dEf_TeXt_;
      typedef-mem-name = 'Cdouble';
      typedef-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/tsaTypes.hpp';
      typedef-mem-desc-line = '70';
      typedef-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      typedef-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* typedef-member */
    typedef-member = {
      typedef-mem-kind = 'typedef';
      typedef-mem-id   = 'namespacetsa_1aad3ff4a1af568c2cf9258474cecb868f';
      typedef-mem-virt = normal;
      typedef-mem-prot = public;
      typedef-mem-type = <<_EnD_oF_dEf_TeXt_
boost::numeric::ublas::matrix< int >
_EnD_oF_dEf_TeXt_;
      typedef-mem-name = 'Imatrix';
      typedef-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/tsaTypes.hpp';
      typedef-mem-desc-line = '73';
      typedef-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      typedef-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* typedef-member */
    typedef-member = {
      typedef-mem-kind = 'typedef';
      typedef-mem-id   = 'namespacetsa_1ad9cc6c0ebe447f2d49102804a7d7a6f6';
      typedef-mem-virt = normal;
      typedef-mem-prot = public;
      typedef-mem-type = <<_EnD_oF_dEf_TeXt_
boost::numeric::ublas::matrix< unsigned int >
_EnD_oF_dEf_TeXt_;
      typedef-mem-name = 'UImatrix';
      typedef-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/tsaTypes.hpp';
      typedef-mem-desc-line = '74';
      typedef-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      typedef-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* typedef-member */
    typedef-member = {
      typedef-mem-kind = 'typedef';
      typedef-mem-id   = 'namespacetsa_1ad260cd21c1891c4ed391fe788569aba4';
      typedef-mem-virt = normal;
      typedef-mem-prot = public;
      typedef-mem-type = <<_EnD_oF_dEf_TeXt_
boost::numeric::ublas::matrix< double >
_EnD_oF_dEf_TeXt_;
      typedef-mem-name = 'Dmatrix';
      typedef-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/tsaTypes.hpp';
      typedef-mem-desc-line = '75';
      typedef-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      typedef-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* typedef-member */
    typedef-member = {
      typedef-mem-kind = 'typedef';
      typedef-mem-id   = 'namespacetsa_1a86348fef1603a135fe5fba9e5f5486ee';
      typedef-mem-virt = normal;
      typedef-mem-prot = public;
      typedef-mem-type = <<_EnD_oF_dEf_TeXt_
boost::numeric::ublas::matrix< std::complex< double > >
_EnD_oF_dEf_TeXt_;
      typedef-mem-name = 'Cmatrix';
      typedef-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/tsaTypes.hpp';
      typedef-mem-desc-line = '78';
      typedef-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      typedef-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* typedef-member */
    typedef-member = {
      typedef-mem-kind = 'typedef';
      typedef-mem-id   = 'namespacetsa_1ac73258f98dd6a665991e1c9a71df691f';
      typedef-mem-virt = normal;
      typedef-mem-prot = public;
      typedef-mem-type = <<_EnD_oF_dEf_TeXt_
boost::numeric::ublas::vector< int >
_EnD_oF_dEf_TeXt_;
      typedef-mem-name = 'Ivector';
      typedef-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/tsaTypes.hpp';
      typedef-mem-desc-line = '81';
      typedef-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      typedef-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* typedef-member */
    typedef-member = {
      typedef-mem-kind = 'typedef';
      typedef-mem-id   = 'namespacetsa_1abed2840bd46d70e5aa1122cf7d06a6ed';
      typedef-mem-virt = normal;
      typedef-mem-prot = public;
      typedef-mem-type = <<_EnD_oF_dEf_TeXt_
boost::numeric::ublas::vector< unsigned int >
_EnD_oF_dEf_TeXt_;
      typedef-mem-name = 'UIvector';
      typedef-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/tsaTypes.hpp';
      typedef-mem-desc-line = '82';
      typedef-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      typedef-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* typedef-member */
    typedef-member = {
      typedef-mem-kind = 'typedef';
      typedef-mem-id   = 'namespacetsa_1a8900fb03d849baf447a1a0efe2561fb2';
      typedef-mem-virt = normal;
      typedef-mem-prot = public;
      typedef-mem-type = <<_EnD_oF_dEf_TeXt_
boost::numeric::ublas::vector< double >
_EnD_oF_dEf_TeXt_;
      typedef-mem-name = 'Dvector';
      typedef-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/tsaTypes.hpp';
      typedef-mem-desc-line = '85';
      typedef-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      typedef-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* typedef-member */
    typedef-member = {
      typedef-mem-kind = 'typedef';
      typedef-mem-id   = 'namespacetsa_1ad1e65e148c1b8be13ee4da5b246b5adf';
      typedef-mem-virt = normal;
      typedef-mem-prot = public;
      typedef-mem-type = <<_EnD_oF_dEf_TeXt_
boost::numeric::ublas::vector< long double >
_EnD_oF_dEf_TeXt_;
      typedef-mem-name = 'LDvector';
      typedef-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/tsaTypes.hpp';
      typedef-mem-desc-line = '86';
      typedef-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      typedef-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* typedef-member */
    typedef-member = {
      typedef-mem-kind = 'typedef';
      typedef-mem-id   = 'namespacetsa_1a054d1045ead95a65819e9e5722baf600';
      typedef-mem-virt = normal;
      typedef-mem-prot = public;
      typedef-mem-type = <<_EnD_oF_dEf_TeXt_
boost::numeric::ublas::vector< std::complex< double > >
_EnD_oF_dEf_TeXt_;
      typedef-mem-name = 'Cvector';
      typedef-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/tsaTypes.hpp';
      typedef-mem-desc-line = '91';
      typedef-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      typedef-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* typedef-member */
    typedef-member = {
      typedef-mem-kind = 'typedef';
      typedef-mem-id   = 'namespacetsa_1a58da96b64dcaa37bc6d90a20f38220c9';
      typedef-mem-virt = normal;
      typedef-mem-prot = public;
      typedef-mem-type = <<_EnD_oF_dEf_TeXt_
std::vector< Cmatrix >
_EnD_oF_dEf_TeXt_;
      typedef-mem-name = 'VCmatrix';
      typedef-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/tsaTypes.hpp';
      typedef-mem-desc-line = '94';
      typedef-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      typedef-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* typedef-member */
    typedef-member = {
      typedef-mem-kind = 'typedef';
      typedef-mem-id   = 'namespacetsa_1a6dd7105c3202ef00a213d7c029f5b248';
      typedef-mem-virt = normal;
      typedef-mem-prot = public;
      typedef-mem-type = <<_EnD_oF_dEf_TeXt_
std::vector< Dmatrix >
_EnD_oF_dEf_TeXt_;
      typedef-mem-name = 'VDmatrix';
      typedef-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/tsaTypes.hpp';
      typedef-mem-desc-line = '95';
      typedef-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      typedef-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* typedef-member */
    typedef-member = {
      typedef-mem-kind = 'typedef';
      typedef-mem-id   = 'namespacetsa_1aeaf3be962a114beef3d9e89b0fb49bf4';
      typedef-mem-virt = normal;
      typedef-mem-prot = public;
      typedef-mem-type = <<_EnD_oF_dEf_TeXt_
boost::numeric::ublas::matrix_row< Dmatrix >
_EnD_oF_dEf_TeXt_;
      typedef-mem-name = 'DmatrixRow';
      typedef-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/tsaTypes.hpp';
      typedef-mem-desc-line = '98';
      typedef-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      typedef-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* typedef-member */
    typedef-member = {
      typedef-mem-kind = 'typedef';
      typedef-mem-id   = 'namespacetsa_1a9903622809f0f8f0a38a520859ed5090';
      typedef-mem-virt = normal;
      typedef-mem-prot = public;
      typedef-mem-type = <<_EnD_oF_dEf_TeXt_
boost::numeric::ublas::matrix_column< Dmatrix >
_EnD_oF_dEf_TeXt_;
      typedef-mem-name = 'DmatrixCol';
      typedef-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/tsaTypes.hpp';
      typedef-mem-desc-line = '99';
      typedef-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      typedef-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* typedef-member */
    typedef-member = {
      typedef-mem-kind = 'typedef';
      typedef-mem-id   = 'namespacetsa_1ad294f56c16152a1618cbe2f19b768e2e';
      typedef-mem-virt = normal;
      typedef-mem-prot = public;
      typedef-mem-type = <<_EnD_oF_dEf_TeXt_
boost::numeric::ublas::matrix_row< Cmatrix >
_EnD_oF_dEf_TeXt_;
      typedef-mem-name = 'CmatrixRow';
      typedef-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/tsaTypes.hpp';
      typedef-mem-desc-line = '101';
      typedef-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      typedef-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* typedef-member */
    typedef-member = {
      typedef-mem-kind = 'typedef';
      typedef-mem-id   = 'namespacetsa_1a8516debea26c2f85600d808e777d39d2';
      typedef-mem-virt = normal;
      typedef-mem-prot = public;
      typedef-mem-type = <<_EnD_oF_dEf_TeXt_
boost::numeric::ublas::matrix_column< Cmatrix >
_EnD_oF_dEf_TeXt_;
      typedef-mem-name = 'CmatrixCol';
      typedef-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/tsaTypes.hpp';
      typedef-mem-desc-line = '102';
      typedef-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      typedef-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* typedef-member */
    };
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/tsaTypes.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_
Define the tsa types.
_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_
  Copyright (C) 2004 by Giancarlo Cella
  giancarlo.cella@pi.infn.it

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the
  Free Software Foundation, Inc.,
  59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.


@author Giancarlo Cella <giancarlo.cella@pi.infn.it>
@date   Sat Nov 13 17:21:06 2004
_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'tsa_utility_functions_8hpp';
  file-name = 'tsaUtilityFunctions.hpp';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'namespacetsa_1a13bdf484592d9055ad57ffbb8f5b1b7f';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'tsaVersion';
      func-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/src/tsaUtilityFunctions.cpp';
      func-mem-desc-line = '10';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'namespacetsa_1a0aaa10e21d0123ff3f13680f0c125e19';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
std::complex< double >
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'CRATIO';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::complex< double >
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'v1';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::complex< double >
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'v2';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/src/tsaUtilityFunctions.cpp';
      func-mem-desc-line = '14';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'namespacetsa_1ae15dd89a370a611b23e85adea9ed416d';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'DmatrixPrint';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const Dmatrix &
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'm';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'filename';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'transpose';
        func-mem-param-defval = <<_EnD_oF_dEf_TeXt_
false
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/src/tsaUtilityFunctions.cpp';
      func-mem-desc-line = '18';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/tsaUtilityFunctions.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_tukey_hann_window_8hpp';
  file-name = 'TukeyHannWindow.hpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/TukeyHannWindow.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_
TukeyHann windowing.
_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_
@author Giancarlo Cella <giancarlo.cella@pi.infn.it>
@date   Sat Nov 13 17:21:06 2004

  Copyright (C) 2004 by Giancarlo Cella
  giancarlo.cella@pi.infn.it

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the
  Free Software Foundation, Inc.,
  59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_tukey_window_8hpp';
  file-name = 'TukeyWindow.hpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/TukeyWindow.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_
Cs2Hamming windowing.
_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_
@author Giancarlo Cella <giancarlo.cella@pi.infn.it>
@date   Sat Nov 13 17:21:06 2004

  Copyright (C) 2004 by Giancarlo Cella
  giancarlo.cella@pi.infn.it

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the
  Free Software Foundation, Inc.,
  59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_util_8hpp';
  file-name = 'Util.hpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/Util.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_
Evaluate the rms of a given time series.
_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_
  Copyright (C) 2004 by Giancarlo Cella                                 
  giancarlo.cella@pi.infn.it                                            

  This program is free software; you can redistribute it and/or modify  
  it under the terms of the GNU General Public License as published by  
  the Free Software Foundation; either version 2 of the License, or     
  (at your option) any later version.                                   

  This program is distributed in the hope that it will be useful,       
  but WITHOUT ANY WARRANTY; without even the implied warranty of        
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         
  GNU General Public License for more details.                          

  You should have received a copy of the GNU General Public License     
  along with this program; if not, write to the                         
  Free Software Foundation, Inc.,                                       
  59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             


@author Giancarlo Cella <giancarlo.cella@pi.infn.it>
@date   Sat Nov 13 17:21:06 2004
_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_v_arma2_t_f_8hpp';
  file-name = 'VArma2TF.hpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/VArma2TF.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_
Estimate the Transfer function using the ARMA parametrization.
_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_
  Copyright (C) 2004 by Elena Cuoco
  elena.cuoco@ego-gw.it

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the
  Free Software Foundation, Inc.,
  59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.


@author Elena Cuoco <elena.cuoco@ego-gw.it>
@date   2004
_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_view_util_8hpp';
  file-name = 'ViewUtil.hpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/ViewUtil.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_
Interface for ViewUtil.
_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_
  Copyright (C) 2004 by Giancarlo Cella                                 
  giancarlo.cella@pi.infn.it                                            

  This program is free software; you can redistribute it and/or modify  
  it under the terms of the GNU General Public License as published by  
  the Free Software Foundation; either version 2 of the License, or     
  (at your option) any later version.                                   

  This program is distributed in the hope that it will be useful,       
  but WITHOUT ANY WARRANTY; without even the implied warranty of        
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         
  GNU General Public License for more details.                          

  You should have received a copy of the GNU General Public License     
  along with this program; if not, write to the                         
  Free Software Foundation, Inc.,                                       
  59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             


@author Giancarlo Cella <giancarlo.cella@pi.infn.it>
@date   Sat Nov 13 17:21:06 2004
_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_wavelet_threshold_8hpp';
  file-name = 'WaveletThreshold.hpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WaveletThreshold.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_
Perform the hard and soft Wavelet Threshold.
_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_
  Copyright (C) 2004 by Elena Cuoco
  elena.cuoco@ego-gw.it

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the
  Free Software Foundation, Inc.,
  59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.


@author Elena Cuoco <elena.cuoco@ego-gw.it>
@date   2005
_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_wavelet_transform_8hpp';
  file-name = 'WaveletTransform.hpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WaveletTransform.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_
compute the Wavelet Transform usign GSL
_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_
  Copyright (C) 2004 by Elena Cuoco
  elena.cuoco@ego-gw.it

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the
  Free Software Foundation, Inc.,
  59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.


@author Elena Cuoco <elena.cuoco@ego-gw.it>
@date   2005
_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_wav_reconstruction_8hpp';
  file-name = 'WavReconstruction.hpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WavReconstruction.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_
description of WavReconstruction
_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_
  Copyright (C) 2004 by Elena Cuoco
  elena.cuoco@ego-gw.it

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the
  Free Software Foundation, Inc.,
  59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.


@author Elena Cuoco <elena.cuoco@ego-gw.it>
@date   2006
_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_w_d_f2_classify_8hpp';
  file-name = 'WDF2Classify.hpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WDF2Classify.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_w_d_f2_reconstruct_8hpp';
  file-name = 'WDF2Reconstruct.hpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WDF2Reconstruct.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_welch_window_8hpp';
  file-name = 'WelchWindow.hpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WelchWindow.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_
Welch windowing.
_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_
@author Giancarlo Cella <giancarlo.cella@pi.infn.it>
@date   Sat Nov 13 17:21:06 2004

  Copyright (C) 2004 by Giancarlo Cella
  giancarlo.cella@pi.infn.it

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the
  Free Software Foundation, Inc.,
  59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_window_factory_8hpp';
  file-name = 'WindowFactory.hpp';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'namespacetsa_1a98f39538beaf84d9f18635e0062f6b3e';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
std::vector< std::string >
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'GetWindowList';
      func-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/src/WindowFactory.cpp';
      func-mem-desc-line = '5';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'namespacetsa_1ad40921629f819f9f2907db1fc8c1b63a';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
BaseWindow *
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'WindowFactory';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const std::string &
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'name';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'size';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/src/WindowFactory.cpp';
      func-mem-desc-line = '21';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'namespacetsa_1a1fe617a1ebaccc86dac0d06ccb16372e';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
BaseWindow *
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'WindowFactory';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const std::string &
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'name';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const std::string &
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'parameters';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'size';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/src/WindowFactory.cpp';
      func-mem-desc-line = '48';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/WindowFactory.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_
Window factory.
_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_
@author Giancarlo Cella <giancarlo.cella@pi.infn.it>
@date   Sat Nov 13 17:21:06 2004

  Copyright (C) 2004 by Giancarlo Cella
  giancarlo.cella@pi.infn.it

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the
  Free Software Foundation, Inc.,
  59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_a_r2_8cpp';
  file-name = 'AR2.cpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/src/AR2.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_a_r2_parcor_8cpp';
  file-name = 'AR2Parcor.cpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/src/AR2Parcor.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_ar_burg_estimator_8cpp';
  file-name = 'ArBurgEstimator.cpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/src/ArBurgEstimator.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_ar_durbin_estimator_8cpp';
  file-name = 'ArDurbinEstimator.cpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/src/ArDurbinEstimator.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_arma2_psd_8cpp';
  file-name = 'Arma2Psd.cpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/src/Arma2Psd.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_arma2_t_f_8cpp';
  file-name = 'Arma2TF.cpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/src/Arma2TF.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_a_r_m_a_filter_8cpp';
  file-name = 'ARMAFilter.cpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/src/ARMAFilter.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_a_r_m_afit_8cpp';
  file-name = 'ARMAfit.cpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/src/ARMAfit.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_base_window_8cpp';
  file-name = 'BaseWindow.cpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/src/BaseWindow.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_b_l_interpolation_8cpp';
  file-name = 'BLInterpolation.cpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/src/BLInterpolation.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_butterworth_filter_8cpp';
  file-name = 'ButterworthFilter.cpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/src/ButterworthFilter.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_cholesky_8cpp';
  file-name = 'Cholesky.cpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/src/Cholesky.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_clusterized_event_full_featured_8cpp';
  file-name = 'ClusterizedEventFullFeatured.cpp';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_clusterized_event_full_featured_8cpp_1a66364066bd8e7d355fa3750d6dd05ccc';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'CLUSTERIZEDEVENTFULLFEATURED_CPP';
      define-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/src/ClusterizedEventFullFeatured.cpp';
      define-mem-desc-line = '2';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/src/ClusterizedEventFullFeatured.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_complex_f_f_t_8cpp';
  file-name = 'ComplexFFT.cpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/src/ComplexFFT.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_create_dvector_8cpp';
  file-name = 'CreateDvector.cpp';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'namespacetsa_1a1f1681e991b47cfe3bc50282c96bd744';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
Dvector
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'create_dvector';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'size';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/src/CreateDvector.cpp';
      func-mem-desc-line = '19';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/src/CreateDvector.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_d_c_t_8cpp';
  file-name = 'DCT.cpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/src/DCT.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_double_whitening_8cpp';
  file-name = 'DoubleWhitening.cpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/src/DoubleWhitening.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_d_s_t_8cpp';
  file-name = 'DST.cpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/src/DST.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'src_2eternity_8cpp';
  file-name = 'eternity.cpp';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'src_2eternity_8cpp_1a9da7cdb58f975e14bd3e415696161cbb';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'ETERNITY_CPP';
      define-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/src/eternity.cpp';
      define-mem-desc-line = '24';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/src/eternity.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'include_2eternity_2eternity_8cpp';
  file-name = 'eternity.cpp';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'include_2eternity_2eternity_8cpp_1a9da7cdb58f975e14bd3e415696161cbb';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'ETERNITY_CPP';
      define-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/eternity.cpp';
      define-mem-desc-line = '24';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/include/eternity/eternity.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_event_description_8cpp';
  file-name = 'EventDescription.cpp';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_event_description_8cpp_1a7555a475c1a58fc8e43bf12b70d4247f';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'EVENTDESCRIPTION_CPP';
      define-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/src/EventDescription.cpp';
      define-mem-desc-line = '2';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/src/EventDescription.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_event_full_featured_8cpp';
  file-name = 'EventFullFeatured.cpp';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_event_full_featured_8cpp_1ab3c16b7979df93cfb436f8a6412cc8f3';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'EVENTFULLFEATURED_CPP';
      define-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/src/EventFullFeatured.cpp';
      define-mem-desc-line = '2';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/src/EventFullFeatured.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_fifo_buffer_8cpp';
  file-name = 'FifoBuffer.cpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/src/FifoBuffer.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'fparser_8cpp';
  file-name = 'fparser.cpp';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'fparser_8cpp_1ae71449b1cc6e6250b91f539153a7a0d3';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'M_PI';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
3.1415926535897932384626433832795
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/src/fparser.cpp';
      define-mem-desc-line = '18';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/src/fparser.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'fpoptimizer_8cpp';
  file-name = 'fpoptimizer.cpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/src/fpoptimizer.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_frame_i_channel_8cpp';
  file-name = 'FrameIChannel.cpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/src/FrameIChannel.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_frame_i_stream_8cpp';
  file-name = 'FrameIStream.cpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/src/FrameIStream.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_i_d_c_t_8cpp';
  file-name = 'IDCT.cpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/src/IDCT.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_inverse_real_f_f_t_8cpp';
  file-name = 'InverseRealFFT.cpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/src/InverseRealFFT.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_lattice_filter_8cpp';
  file-name = 'LatticeFilter.cpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/src/LatticeFilter.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_least_squares_lattice_8cpp';
  file-name = 'LeastSquaresLattice.cpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/src/LeastSquaresLattice.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_l_s_lfilter_8cpp';
  file-name = 'LSLfilter.cpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/src/LSLfilter.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_l_s_l_learning_8cpp';
  file-name = 'LSLLearning.cpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/src/LSLLearning.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_m_y_w_e_8cpp';
  file-name = 'MYWE.cpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/src/MYWE.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_notch_widrow_8cpp';
  file-name = 'NotchWidrow.cpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/src/NotchWidrow.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_parcor2_a_r_8cpp';
  file-name = 'Parcor2AR.cpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/src/Parcor2AR.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_real_f_f_t_8cpp';
  file-name = 'RealFFT.cpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/src/RealFFT.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_r_l_s_canceler_8cpp';
  file-name = 'RLSCanceler.cpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/src/RLSCanceler.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_selection_order_criteria_8cpp';
  file-name = 'SelectionOrderCriteria.cpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/src/SelectionOrderCriteria.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'tsa_log_8cpp';
  file-name = 'tsaLog.cpp';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'namespacetsa_1a08952ac2e7ac6e538c83692501aed4e7';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'LogInfo';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const std::string &
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 's';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
...
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/src/tsaLog.cpp';
      func-mem-desc-line = '10';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'namespacetsa_1a91d266348bcf69ab00c97a253b0ec790';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'LogWarning';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const std::string &
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 's';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
...
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/src/tsaLog.cpp';
      func-mem-desc-line = '13';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'namespacetsa_1a3bce10382fbb41b48aca0e5b8afeb896';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'LogSevere';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const std::string &
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 's';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
...
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/src/tsaLog.cpp';
      func-mem-desc-line = '16';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'namespacetsa_1aeff53394d3502127b84380cceb41cba8';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'LogSevere';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'lvl';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const std::string &
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 's';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
...
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/src/tsaLog.cpp';
      func-mem-desc-line = '19';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'namespacetsa_1a0314b9c30387b942a5de0ec7ff3026e3';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'LogFatal';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const std::string &
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 's';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
...
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/src/tsaLog.cpp';
      func-mem-desc-line = '22';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'namespacetsa_1a2a922785b9b967a8e92ded5a1540688f';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'LogDebug';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'lvl';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const std::string &
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 's';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
...
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/src/tsaLog.cpp';
      func-mem-desc-line = '25';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/src/tsaLog.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'tsa_serialize_8cpp';
  file-name = 'tsaSerialize.cpp';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'namespacetsa_1afb13ed99dfd49fe21c248464155e8806';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'Tag';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'buffer';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'n';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'base';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'rec';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/src/tsaSerialize.cpp';
      func-mem-desc-line = '5';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'namespacetsa_1a1079ab07e72bc3aaa35f2a9fce42cbd9';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'Tag';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'buffer';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'n';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'base';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'rec';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'i';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/src/tsaSerialize.cpp';
      func-mem-desc-line = '10';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'namespacetsa_1a1b02aafe1625f78174f56249e0ec5d34';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'Tag';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'buffer';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'n';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'base';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'rec';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'i';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'j';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/src/tsaSerialize.cpp';
      func-mem-desc-line = '15';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/src/tsaSerialize.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'tsa_utility_functions_8cpp';
  file-name = 'tsaUtilityFunctions.cpp';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'namespacetsa_1a13bdf484592d9055ad57ffbb8f5b1b7f';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'tsaVersion';
      func-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/src/tsaUtilityFunctions.cpp';
      func-mem-desc-line = '10';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'namespacetsa_1a0aaa10e21d0123ff3f13680f0c125e19';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
std::complex< double >
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'CRATIO';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::complex< double >
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'v1';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::complex< double >
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'v2';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/src/tsaUtilityFunctions.cpp';
      func-mem-desc-line = '14';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'namespacetsa_1ae15dd89a370a611b23e85adea9ed416d';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'DmatrixPrint';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const Dmatrix &
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'm';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'filename';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'transpose';
        func-mem-param-defval = <<_EnD_oF_dEf_TeXt_
false
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/src/tsaUtilityFunctions.cpp';
      func-mem-desc-line = '18';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/src/tsaUtilityFunctions.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_v_arma2_t_f_8cpp';
  file-name = 'VArma2TF.cpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/src/VArma2TF.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_view_util_8cpp';
  file-name = 'ViewUtil.cpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/src/ViewUtil.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_wavelet_threshold_8cpp';
  file-name = 'WaveletThreshold.cpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/src/WaveletThreshold.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_wavelet_transform_8cpp';
  file-name = 'WaveletTransform.cpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/src/WaveletTransform.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_wav_reconstruction_8cpp';
  file-name = 'WavReconstruction.cpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/src/WavReconstruction.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_w_d_f2_classify_8cpp';
  file-name = 'WDF2Classify.cpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/src/WDF2Classify.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_w_d_f2_reconstruct_8cpp';
  file-name = 'WDF2Reconstruct.cpp';
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/src/WDF2Reconstruct.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_window_factory_8cpp';
  file-name = 'WindowFactory.cpp';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'namespacetsa_1a98f39538beaf84d9f18635e0062f6b3e';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
std::vector< std::string >
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'GetWindowList';
      func-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/src/WindowFactory.cpp';
      func-mem-desc-line = '5';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'namespacetsa_1ad40921629f819f9f2907db1fc8c1b63a';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
BaseWindow *
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'WindowFactory';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const std::string &
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'name';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'size';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/src/WindowFactory.cpp';
      func-mem-desc-line = '21';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'namespacetsa_1a1fe617a1ebaccc86dac0d06ccb16372e';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
BaseWindow *
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'WindowFactory';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const std::string &
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'name';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const std::string &
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'parameters';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'size';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/filip/PhD/WDFPipe_test/p4TSA/src/WindowFactory.cpp';
      func-mem-desc-line = '48';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/filip/PhD/WDFPipe_test/p4TSA/src/WindowFactory.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
